ID,hash,author,date,commit_message,is_merge,lines_changed,insertions,deletions,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing,radon_LOC,radon_LLOC,radon_SLOC,radon_comments,radon_avg_cc,radon_avg_MI,radon_avg_vocabulary,radon_avg_length,radon_avg_volume,radon_avg_difficulty,radon_avg_effort,radon_avg_time,radon_avg_bugs
0,476d3e065f276ba617b2b5a8b222e6c65eb2913a,Sebastian Krämer,2010-09-03 08:22:52+00:00,Initial commit.,False,2968,2968,0,0.6226890756302521,0.6638655462184874,0.8487394957983193,2091,1341,1332,212,2.7697368421052633,39.18733027897518,251.0,568.6666666666666,4884.702148587392,7.508330043426767,50899.488695929555,2827.749371996086,1.6282340495291308
1,d6f169e7ee39244feb3cd89730591fbed9b17872,Sebastian Krämer,2010-09-03 08:28:25+00:00,"Remove code for Normal Forms.

They should not be implemented as separate classes.",False,602,0,602,0.32231404958677684,0.34710743801652894,0.3305785123966942,1489,936,932,188,2.8,46.388999767300135,177.66666666666666,421.0,3416.2334379219196,7.489283397096003,35042.37001865969,1946.7983343699827,1.1387444793073067
2,ea036d73c9033f86cc50759da83673ccf536062a,Sebastian Krämer,2010-09-06 11:26:33+00:00,Implement subs and BooleanBase.,False,166,150,16,0.7634408602150538,0.7634408602150538,0.6559139784946236,1623,1041,1030,191,2.7235772357723578,43.73259574599867,188.66666666666666,452.6666666666667,3701.9924416586896,7.8640533056420905,40425.51530176697,2245.861961209276,1.2339974805528964
3,8773a11b176600eeb18de5b4e90c8e3f935149b8,Sebastian Krämer,2010-09-06 12:36:18+00:00,Improve BooleanBase + tests.,False,63,54,9,1.0,1.0,1.0,1661,1070,1056,191,2.6984126984126986,43.22491400737849,190.66666666666666,457.6666666666667,3748.8861491919156,7.8325194353231735,40948.246174734864,2274.9025652630476,1.2496287163973052
4,c129b8a8d7e5094d34e342334fcd12c5e55b8ad4,Sebastian Krämer,2010-09-06 16:32:01+00:00,Update documentation.,False,123,45,78,,,,1661,1068,1044,203,2.6984126984126986,43.22491400737849,190.66666666666666,457.6666666666667,3748.8861491919156,7.8325194353231735,40948.246174734864,2274.9025652630476,1.2496287163973052
5,e01d5f25a9510cf53b29e846ce6b6c6ca93b4d60,Sebastian Krämer,2010-12-21 09:00:41+00:00,Some small updates.,False,241,173,68,0.6363636363636364,0.6363636363636364,0.7272727272727273,1707,1079,1056,219,2.753968253968254,42.981433662809515,191.33333333333334,461.6666666666667,3782.723620555736,7.9005294095831475,41757.269601496024,2319.8483111942237,1.2609078735185786
6,f10cb6a2d14c7250b829ab1e689309d4b8e81946,Sebastian Kraemer,2012-06-05 13:50:07+00:00,"Fix bug in DualBase.eval

Algorithm for applying absorbtion in ""eval"" failed when
the last term was used to cancel another term.
(Index overflow)",False,5,5,0,0.0,0.6,1.0,1712,1084,1061,219,2.761904761904762,42.872746575606136,192.0,463.6666666666667,3801.1989423909567,8.18594669435791,43262.23976686629,2403.457764825905,1.267066314130319
7,90e8754c59ab0618f0e57d8b42d0fe5e24b457dc,Sebastian Kraemer,2012-06-28 20:40:59+00:00,Fix bug in absorption part of eval.,False,213,134,79,0.6363636363636364,0.29545454545454547,0.6590909090909091,1767,1132,1105,223,2.7615384615384615,41.97578500490486,195.66666666666666,471.6666666666667,3877.5207389713855,7.86651955294996,42930.77899275856,2385.043277375476,1.2925069129904616
8,075c844d48bd6930fb124a3184d9bb5288d3c576,Qi-rui Chen,2015-03-06 17:14:14+00:00,"Literalize terms before starting the simplify.

Previous:
```python
>>> parse(""~A*~(~A+~B)"")
AND(NOT(Symbol('A')), NOT(OR(NOT(Symbol('A')), NOT(Symbol('B')))))
```
Now:
```python
>>> parse(""~A*~(~A+~B)"")
FALSE
```",False,2,2,0,0.0,0.0,1.0,1769,1133,1106,224,2.7615384615384615,41.97500021225129,195.66666666666666,471.6666666666667,3877.5207389713855,7.86651955294996,42930.77899275856,2385.043277375476,1.2925069129904616
9,c7bd72d4c12ac8053121f1562fc6b89c5ecd31b5,Qi-rui Chen,2015-03-07 14:42:02+00:00,Update boolean.py,False,3,2,1,,,,1770,1133,1106,224,2.7615384615384615,41.98072553332698,195.66666666666666,471.6666666666667,3877.5207389713855,7.86651955294996,42930.77899275856,2385.043277375476,1.2925069129904616
10,5315cb1877a7504d332d633dc76a100692e9b7d9,Sebastian Kraemer,2016-03-24 16:49:09+00:00,"Make boolean.py python2.7 compatible.

* Mostly change f(x, *, arg=True) to f(x, arg=True)",False,36,20,16,0.3333333333333333,0.3333333333333333,0.0,1774,1136,1109,225,2.7615384615384615,41.98334980972331,198.0,476.6666666666667,3925.1646128955313,7.850427295755188,43580.800686940456,2421.1555937189137,1.3083882042985104
11,cd1b7b7c4d68301f118491f79a1126cb38b6c8b6,German M. Bravo,2016-03-25 08:17:47+00:00,PEP 8 conformance,False,223,116,107,0.6666666666666666,0.6666666666666666,0.6666666666666666,1783,1137,1106,224,2.7615384615384615,41.84462364080716,198.33333333333334,476.6666666666667,3926.377313983447,8.12906506665302,45555.527841227544,2530.862657845975,1.3087924379944822
12,9bfdb6f33e00719d50f6fec6c3659149d13240b6,German M. Bravo,2016-03-25 16:44:28+00:00,Spelling typos fixed,False,22,11,11,,,,1783,1137,1106,224,2.7615384615384615,41.84462364080716,198.33333333333334,476.6666666666667,3926.377313983447,8.12906506665302,45555.527841227544,2530.862657845975,1.3087924379944822
13,3e417490e73c12d98b63be78faa34a641e2a97b4,German M. Bravo,2016-03-25 16:50:46+00:00,TRUE and FALSE act as booleans,False,4,4,0,,,,1787,1141,1108,224,2.7615384615384615,41.82321881590338,198.33333333333334,476.6666666666667,3926.377313983447,8.12906506665302,45555.527841227544,2530.862657845975,1.3087924379944822
14,55a79031954a05e6f57759ec6a89e1c6920ea984,Philippe Ombredanne,2016-03-26 15:02:54+00:00,"Add setup.py and update doctest for Python 3.x

Make boolean/ a proper package.
Add revised BSD license text and updated notices
Create setup.py and config for tests and wheels
Updated doc and doctests for Python 2 and 3.",False,206,176,30,,,,1882,1168,1169,225,2.7615384615384615,65.52055146917122,119.0,286.0,2355.826388390068,4.8774390399918115,27333.316704736528,1518.5175947075847,0.7852754627966894
15,d957c666ff74fd869db62b8e5941e17d83997117,German M. Bravo,2016-03-26 16:23:05+00:00,Python 2 and 3 compatibility: Using basestring for unicode support,False,11,8,3,,,,1788,1141,1110,226,2.7615384615384615,41.78515367718672,198.33333333333334,476.6666666666667,3926.377313983447,8.12906506665302,45555.527841227544,2530.862657845975,1.3087924379944822
16,31d841abf43f70abaa2a206656a1438f5fefa3d4,German M. Bravo,2016-03-27 05:39:34+00:00,Support parsing expression with alternative operators,False,27,17,10,,,,1790,1141,1110,224,2.7615384615384615,41.817924407597324,198.66666666666666,476.6666666666667,3927.4604859587453,8.395593992272856,46833.114776380826,2601.839709798935,1.3091534953195818
17,3f11973407a9a70fbf906ec100c1b55253815854,German M. Bravo,2016-03-27 05:54:37+00:00,"Rename ""eval"" to ""simplify""",False,154,77,77,,,,1887,1172,1173,227,2.7615384615384615,65.4849706537157,119.0,286.0,2355.826388390068,4.8774390399918115,27333.316704736528,1518.5175947075847,0.7852754627966894
18,37e26816cb8d4f5248d896d16f6dd96a11f31ef9,German M. Bravo,2016-03-27 05:55:18+00:00,"Remove ""evalkwargs"" parameter",False,8,4,4,,,,1887,1172,1173,227,2.7615384615384615,65.4849706537157,119.0,286.0,2355.826388390068,4.8774390399918115,27333.316704736528,1518.5175947075847,0.7852754627966894
19,8834e8a778cd5f5df022c3a791c70229d8d17eee,Sebastian Kraemer,2016-03-27 10:31:15+00:00,"Fix bug in remove where an undefined variable was used.

item -> expr
Write test case.",False,10,9,1,1.0,1.0,1.0,1902,1183,1184,227,2.7480916030534353,65.37998172286562,120.0,287.2,2369.446206087314,5.028316526398261,28154.804238729084,1564.155791040505,0.7898154020291045
20,9d5ec6767cfa4f55ea283c51f7ad6741409e9854,Philippe Ombredanne,2016-03-27 13:23:53+00:00,"Proof of concept for an alternative expression parser

 * Use the standard lib ""tokenize"" module
 * Accept arbitrary Python names as symbols
 * Support and, or, or, !~+*&| as operators in any commbination
 * Parse comments and multi-line expressions
 * Accept any white spaces
 * Errors are reported with row and columns
 * Accept alternative tokenizer, allowing to have custom 
   symbols and operators
 * Accept custom symbols class",False,234,183,51,0.12987012987012986,0.5454545454545454,0.2987012987012987,2034,1240,1271,229,2.7611940298507465,64.72073688223655,127.8,299.4,2497.814604307697,4.841397873185369,28622.736342406984,1590.1520190226104,0.832604868102566
21,90eb153ea76d9e4f04f0a634608bd6d3b36a4906,Philippe Ombredanne,2016-03-27 13:23:53+00:00,Support upper and mixed case AND OR NOT as operators too,False,10,6,4,0.0,0.5,1.0,2036,1241,1273,229,2.7611940298507465,64.71417381333148,128.0,299.4,2498.4304952939283,4.829903953933053,28575.595960428065,1587.5331089126703,0.8328101650979761
22,adcf2c0d7ce83517acf8a848d693af50081f8fec,Philippe Ombredanne,2016-03-27 13:28:18+00:00,"Fixed incorrect test cases and fined other tests

This also highlights some inconsistent eval behavior depending on
how an expression was created.
The complex expression tests should go in a separate PR eventually",False,132,116,16,0.12790697674418605,1.0,1.0,2136,1267,1361,231,2.735294117647059,64.32026491581016,143.8,338.0,2888.449056292029,4.805053902929993,31884.987847514265,1771.3882137507928,0.9628163520973431
23,0bfbd7f5b275f723d703c97bf44bebdac8c22952,Philippe Ombredanne,2016-03-27 14:33:42+00:00,"Add support for false/true'ish parsing.

Can now parse True, False and None
Refined documentation
Improved error handling",False,140,89,51,1.0,1.0,0.75,2174,1273,1367,233,2.72992700729927,64.28099003723591,144.6,337.8,2889.2580661782567,4.75244855695087,31638.59944928936,1757.6999694049641,0.9630860220594191
24,d23a883a1a7eec8e2235762a4d152501d842c51d,German M. Bravo,2016-03-27 14:58:46+00:00,Allow passing of custom symbol class to parser,False,7,5,2,0.0,0.0,0.0,1905,1185,1186,227,2.7557251908396947,65.34185431680828,120.2,287.8,2374.916984838411,5.031615509495224,28257.99147835432,1569.8884154641287,0.7916389949461369
25,bcf3e30f9bb7ec59d1bc9c64c55ad0ac9c1d25f3,German M. Bravo,2016-03-27 14:59:16+00:00,Allow passing custom function to check for symbol characters validity,False,16,13,3,1.0,1.0,1.0,1915,1191,1191,227,2.765151515151515,65.23089279027329,122.0,290.8,2404.9269654339937,4.996636085626912,28566.681025627513,1587.037834757084,0.8016423218113312
26,c4a6738388a1c2d029701556314cb90f35a95e11,German M. Bravo,2016-03-27 15:13:38+00:00,Normalize eval values received by __new__ and __init__,False,16,9,7,0.5,0.5,0.0,1904,1185,1186,227,2.763358778625954,65.3722607096933,120.0,287.2,2369.446206087314,5.028316526398261,28154.804238729084,1564.155791040505,0.7898154020291045
27,6a9f932e75bc2c72dea43aa007324f0c4f9a5a92,German M. Bravo,2016-03-27 18:28:15+00:00,Fix other misuse of assertTrue(),False,2,1,1,,,,1917,1193,1193,227,2.7803030303030303,65.22048741382346,122.4,291.4,2411.4144480712007,4.992198581560284,28594.32129928271,1588.573405515706,0.8038048160237337
28,31705ce28ee800dcc7f1968ce7c2415b13f4d1f9,Philippe Ombredanne,2016-03-27 22:41:48+00:00,"Improved tokenizer and parser.

The parser no longer accepts a tokenizer arg. Instead it accepts
either an expression string or a pre-tokenized iterable where tokens
are objects such as operations or symbols.

Custom tokenization can be done using a class or function feeding
the proper iterable to the parse function.",False,245,131,114,0.0,1.0,1.0,2191,1259,1383,233,2.708029197080292,64.46463396599762,140.0,332.0,2827.4728437637004,4.870097445655308,31325.37889693745,1740.2988276076362,0.9424909479212336
29,1b4194ef546ebd809774ba2acf0132edc87c3d16,German M. Bravo,2016-03-28 16:01:59+00:00,Evaluate expression as boolean,False,23,21,2,1.0,1.0,1.0,1936,1211,1207,227,2.748148148148148,65.01639852301855,124.4,295.0,2448.310800695806,4.974474789915966,28893.829910088283,1605.2127727826824,0.8161036002319353
30,dfd320447f8d07ed4a9db1672428bdd93815ec01,German M. Bravo,2016-03-28 16:01:59+00:00,Do not automatically simplify expressions.,False,11,5,6,0.0,0.0,0.0,1935,1212,1206,227,2.740740740740741,65.03684102195416,123.8,293.8,2436.665704312283,4.980357142857143,28738.668719858328,1596.592706658796,0.8122219014374277
31,912c88c3ba46781fdc111d066367460d14c4d9fe,Philippe Ombredanne,2016-03-29 11:39:38+00:00,Added a test and example tokenizer for colon and dot separated symbols.,False,228,177,51,0.04597701149425287,0.3218390804597701,1.0,2317,1313,1466,239,2.6956521739130435,64.6951173448981,142.8,334.2,2856.779264500353,5.334461054287962,36067.03389845309,2003.7241054696162,0.9522597548334509
32,c9a07a2f4c8d7205f1c0631cca79c222d89ab533,German M. Bravo,2016-03-29 15:38:22+00:00,Fix tests and imports for Python 2 and 3 + small PEP 8 cleanups,False,293,158,135,1.0,1.0,1.0,2358,1335,1501,241,2.6666666666666665,64.53199812222483,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
33,de59265fd1268533b71187593a66aac2b9964196,German M. Bravo,2016-03-29 15:42:36+00:00,"Variadic arguments for __new__() needed for custom Symbols

Custom Symbol classes might take different initialization arguments
therefore the Symbol.__new__() function has to take variadic arguments.",False,15,14,1,1.0,1.0,0.7,2371,1345,1511,241,2.664335664335664,64.42228640482546,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
34,14d86b60b1d46799ccc60272fe7583c78a66c6d1,German M. Bravo,2016-03-29 16:54:44+00:00,Export TOKENS for external tokenizers,False,41,24,17,,,,2378,1351,1517,264,2.664335664335664,64.42228640482546,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
35,5fd740f1dc6e79ee5f1000fb99ba8c7fc3841571,Philippe Ombredanne,2016-04-06 15:56:58+00:00,Initial release at Pypi v1.1,False,5,4,1,,,,2378,1351,1517,264,2.664335664335664,64.42228640482546,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
36,061f91d62752eb0bbbb1f111486bf9a40f10625f,Philippe Ombredanne,2016-04-06 16:23:33+00:00,Updated README and setup.,False,53,36,17,,,,2385,1351,1519,264,2.664335664335664,64.42228640482546,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
37,ae55534c32bdcd6edf1e8795295a3e5d414cd54b,German M. Bravo,2016-04-07 09:15:41+00:00,"Tokenizer can return arbitrary objects as position

The position can be a tuple of (row, col) or an offset or anything else",False,61,33,28,0.0,0.0,1.0,2390,1352,1520,264,2.664335664335664,64.42890040605968,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
38,a93c051fd56abef2c6339a2f1e33f86c3aeb179a,Philippe Ombredanne,2016-04-15 09:31:46+00:00,Use consistently single quotes and avoid \ line breaks.,False,72,33,39,0.2,0.4,0.2,2384,1352,1513,264,2.664335664335664,64.4363459686577,131.8,306.2,2573.1895125512674,5.339549688114159,32966.08922666397,1831.4494014813317,0.8577298375170891
39,9853afd63b9630d1028f68c05b217a9cc1ad4b1b,Philippe Ombredanne,2016-04-21 15:29:58+00:00,Simplify returns and else when not needed,False,155,64,91,0.6176470588235294,0.6176470588235294,0.11764705882352941,2357,1319,1479,263,2.625,64.61401170642944,131.2,304.4,2556.8066606581124,5.328187164850372,32662.30817304179,1814.5726762800994,0.8522688868860374
40,5a04e0c4ed105547510aed8cd26f3f4cbc7a2d10,German M. Bravo,2016-04-26 08:23:02+00:00,"Tokenizer simplified, no longer using tokenize module",False,63,33,30,0.0,0.0,1.0,2360,1328,1486,263,2.6527777777777777,64.44817669225047,132.0,308.8,2594.8123495987247,5.399276595744681,33584.84298750371,1865.8246104168727,0.8649374498662417
41,a9f77f833ece957088b98cc07492775a2afc1d92,Philippe Ombredanne,2016-04-26 08:30:10+00:00,"Fixed failing test for #39

Tokenizer no longer supports comments",False,2,1,1,,,,2360,1328,1486,263,2.6527777777777777,64.44817669225047,132.0,308.8,2594.8123495987247,5.399276595744681,33584.84298750371,1865.8246104168727,0.8649374498662417
42,784c0fc4f7f9d90d664817d1304e404a395fec16,Philippe Ombredanne,2016-04-26 08:32:14+00:00,#30 remove BooleanAlgebra class and tests,False,81,0,81,0.0,0.0,0.057692307692307696,2279,1273,1431,261,2.742424242424242,65.15758355323855,128.4,299.6,2508.320825374954,5.060115109217802,30755.179408021202,1708.6210782234,0.8361069417916515
43,7dfdb5b1a3f77e84a4337a32723d23a600137613,Philippe Ombredanne,2016-04-26 10:08:58+00:00,#39 Remove unused import and refine tokenizer docstring,False,28,9,19,,,,2269,1266,1424,260,2.742424242424242,65.23012320264749,128.4,299.6,2508.320825374954,5.060115109217802,30755.179408021202,1708.6210782234,0.8361069417916515
44,8c4d2d0b39c52d9e0a1906df525247b1778ccc07,Philippe Ombredanne,2016-04-26 10:32:19+00:00,"#33 Do not use __new__ anymore

You cannot pass an expression or a string to the Expression constructor
anymore. Instead you build an Expression (which is really akin to an
algebra definition) and you can build expression with the configured
operations, symbol, base elements, etc. Or invoke `parse` on it to parse
from a string.

Creating an expression no longer invoke `simplify()` by default: it
needs to be called explicitly, though some method still retain a
simplify arg for convenience.

You can configure an Expression by providing alternative classes for
AND,OR,NOT,TRUE,FALSE,Symbol and the tokenizer function. In particular
you can subclass and customize the way expressions are printed or
represented.This supports #36

`parse`, `normalize`, `symbols` (now `build_symbols`) are methods of the
Expression object. `parse` now uses the symbol class of the configured
expression.

Several attributes shielded by a property are now just simple
attributes. TRUE and FALSE are no longer singletons: instead you can
instantiate them as needed.

A new `.pretty()` method is available and return a pretty formatted
representation of an Expression.


Some internal attributes or methods were renamed for clarity:
 -_cls_order is now `sort_order`.
 - References to cmp have been replaced by comparator.
 - `.remove` has been renamed to `.subtract` to avoid ambiguities with
the list.remove calls.",False,2096,1126,970,0.0,0.7017543859649122,0.43859649122807015,2425,1256,1407,235,2.6470588235294117,65.41502306468041,125.0,306.8,2557.391003658682,5.161593484419264,32448.669541783303,1802.7038634324058,0.8524636678862276
45,e5cb5f042194ecc7d08a57116147dea59d82e508,Philippe Ombredanne,2016-04-27 12:22:45+00:00,"#33 Make TRUE and FALSE singletons again. 

BaseElement is no longer an Expression subclass, but behaves like it.
TRUE and FALSE are global immutable singletons",False,279,144,135,,0.0,1.0,2434,1270,1418,240,2.5942028985507246,65.40141225525359,125.6,310.0,2587.038194742575,5.192402986299122,32996.69464499363,1833.149702499646,0.8623460649141916
46,86de3e1a32d21799f30ba7f3f9b2cf860094ed7d,Philippe Ombredanne,2016-04-27 13:57:58+00:00,"#33 Introduce the BooleanAlgebra class.

BooleanAlgebra is defined by NOT, AND, OR operations and Symbol types.
It can:
- parse expressions from strings,
- normalize expressions,
- build symbols from an iterable.

You can subclass BooleanAlgebra to customize its behavior, including
custom parsing or tokenization, etc. 

Also in this commit:
 - Expression has no __init__ method and is no longer meant to be
instantiated directly. 
 - tokenize() is a method of the algebra
 - Algebra NOT, AND, OR are set as class attributes.",False,900,464,436,0.0,1.0,0.0,2462,1290,1437,242,2.618705035971223,65.34798369779793,125.0,309.4,2580.2141244672325,5.207232257146921,32997.78638473746,1833.2103547076367,0.8600713748224109
47,69ba7f1e7a6e225d84e72c131447589308cc3916,Philippe Ombredanne,2016-04-27 15:15:48+00:00,"#33 make TRUE and FALSE BooleanAlgebra-level singletons

BooleanAlgebra is now defined also by the TRUE, FALSE types,
in addition to the  NOT, AND, OR operations and Symbol types.

BaseElement is now a subclass of Expression

BooleanAlgebra creation assign as class variables the circular
cross-references to every algebra types and base elements.",False,737,382,355,0.2903225806451613,0.0,0.3870967741935484,2489,1319,1466,240,2.652173913043478,65.10045961544145,126.0,311.0,2596.148302972436,5.195055251183954,33162.02771055782,1842.334872808768,0.8653827676574786
48,dfa14b9398f61259eff140a9e643cafa15548795,Philippe Ombredanne,2016-04-27 16:03:43+00:00,#33 Bump version to pre version for Pypi testing,False,19,13,6,,,,2489,1319,1466,240,2.652173913043478,65.10045961544145,126.0,311.0,2596.148302972436,5.195055251183954,33162.02771055782,1842.334872808768,0.8653827676574786
49,0e48c02f60d8af6329ca75f2bcc1640eed056e1e,Philippe Ombredanne,2016-04-28 15:31:54+00:00,"#33 Improve algebra initialization, refine tests and parsing errors

 * BooleanAlgebra:
  - redundant initialization code factored in methods.
    All types are now wrapped in an algebra private class:
    This allows the use of multiple algebras without conflicts.
  - new ParseError structured exception for parse/tokenize errors.
  - new methods shortcuts for conjunctive and disjunctive normal forms.
 * additional minor cosmetic refinements.",False,430,252,178,1.0,1.0,1.0,2563,1339,1496,248,2.625,65.07838367895545,124.8,310.4,2587.5982540377686,5.240165218629825,33328.77633052367,1851.598685029093,0.8625327513459229
50,66597585c12f87e35dfb8dc643d94434679be515,Philippe Ombredanne,2016-04-29 06:39:53+00:00,"#33 Add new get_literals and get_symbols Expression methods

 * the methods allow to remove some code duplication and offer a way
   to get all symbols and literals instances too.",False,45,25,20,0.0,0.0,0.0,2568,1335,1490,248,2.595890410958904,65.06850943400971,123.6,308.8,2571.0550547798007,5.106270459009238,32517.020980943973,1806.5011656079982,0.8570183515932669
51,80b62e3af0ea6de4233528ccaa5e650b2dc3f529,Philippe Ombredanne,2016-04-29 07:03:47+00:00,Refine and correct typos in package description,False,2,1,1,,,,2568,1335,1490,248,2.595890410958904,65.06850943400971,123.6,308.8,2571.0550547798007,5.106270459009238,32517.020980943973,1806.5011656079982,0.8570183515932669
52,4632f78a42bb54ebcd18131e10d5c874234cb6bc,Philippe Ombredanne,2016-04-29 07:04:07+00:00,Bump,False,2,1,1,,,,2568,1335,1490,248,2.595890410958904,65.06850943400971,123.6,308.8,2571.0550547798007,5.106270459009238,32517.020980943973,1806.5011656079982,0.8570183515932669
53,c351abe494bfe057d5a9a0640582c473d55ba81f,Philippe Ombredanne,2016-04-29 11:41:11+00:00,#33 Uncomment test commented by mistake,False,22,11,11,0.0,1.0,1.0,2568,1344,1499,239,2.595890410958904,64.75235280985203,124.0,314.2,2618.683723855773,5.1631262959926705,33604.23599649636,1866.9019998053532,0.8728945746185911
54,ce041e06722cf17e1da7489fc17f1d220936cb19,Philippe Ombredanne,2016-04-29 11:42:03+00:00,#43 Add simple failing test for expression from Python and parsed,False,18,18,0,1.0,1.0,1.0,2586,1353,1508,247,2.5850340136054424,64.89654777132236,125.6,316.6,2645.5534310406388,5.320824318093143,35343.870970235614,1963.5483872353118,0.881851143680213
55,e410ddf07fc6bd368ad77a6e0ec67a939574a1b1,Philippe Ombredanne,2016-05-03 12:06:10+00:00,"#33 Use ""Symbol"" instead of ""symbol"" for Symbol type references",False,234,117,117,,,,2586,1353,1508,247,2.5850340136054424,64.89654777132236,125.6,316.6,2645.5534310406388,5.320824318093143,35343.870970235614,1963.5483872353118,0.881851143680213
56,e450f2e54f62ebdd85f8ef9d4c1104f28be3a7d0,Philippe Ombredanne,2016-05-03 12:28:35+00:00,"#33 Let Python check Functions args counts (aka. order)

This simplifies the code: an order class attribute is no longer needed
now that each Function class it initialized directly and not through a
__new__ anymore.",False,34,10,24,0.0,0.0,0.0,2572,1344,1500,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
57,6b16f5ccf21442ed61f49ffd13a8651cda89a94d,Philippe Ombredanne,2016-05-11 14:42:09+00:00,#33 Refine description in setup.py,False,7,4,3,,,,2573,1344,1501,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
58,82db01eb3e93a3b9939f23913d9d1667b7717298,Philippe Ombredanne,2016-05-13 12:12:25+00:00,Fix docstring typo,False,2,1,1,,,,2573,1344,1501,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
59,5430d5aa71df456275098b32f8814a0942f3001c,Philippe Ombredanne,2016-05-13 12:25:08+00:00,Fix for #45 Do not simplify() by default,False,102,51,51,,,,2573,1344,1501,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
60,6b45cabe417bd3d4b5e5428b6d802173a5900999,Philippe Ombredanne,2016-05-13 12:26:15+00:00,Add Changelog. Bump version,False,32,31,1,,,,2573,1344,1501,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
61,ee037781abdf390c97d2b05cea734060c1bea236,Philippe Ombredanne,2016-05-13 12:54:40+00:00,Fix for #40 : use & and | as defaults operators rather than * and +,False,360,180,180,,,,2573,1344,1501,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
62,a3a9b9d8b99467c40b84fe6692331d800b66e018,Philippe Ombredanne,2016-05-13 13:08:05+00:00,Bump and last minor fixes before next release,False,8,3,5,,,,2573,1344,1501,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
63,477f629ebdc2bdcbe3afc4d2b513c4a42b1b4f52,Philippe Ombredanne,2016-05-13 14:10:39+00:00,Ensure that Expression is available in top level boolean module,False,4,3,1,,,,2575,1345,1502,244,2.564625850340136,64.98959593888452,124.2,314.2,2622.051568184425,5.342002486652527,35125.01055884149,1951.389475491194,0.8740171893948083
64,3464a4bb7c355416fbcb0a93502d5ec7fb82fa7d,Philippe Ombredanne,2016-05-25 15:08:45+00:00,"#47 Ensure ParseError is returned for parse TypeError

 * also expose ParseError and PARSE_ERRORS in the API",False,72,48,24,0.0,0.8,1.0,2599,1359,1525,244,2.560810810810811,64.83989876166552,123.8,313.6,2616.7277036955343,5.352536097741577,35069.1983172474,1948.2887954026332,0.8722425678985115
65,72564a5a662d5b158185733d7ab8c64132688b21,Philippe Ombredanne,2016-05-25 15:11:00+00:00,Bump version to 3.0.dev3,False,2,1,1,,,,2599,1359,1525,244,2.560810810810811,64.83989876166552,123.8,313.6,2616.7277036955343,5.352536097741577,35069.1983172474,1948.2887954026332,0.8722425678985115
66,d6b3cc41aeaafc2bcde33a7dd89dcf7a8edacb35,Philippe Ombredanne,2016-05-25 22:30:37+00:00,Ensure that symbols are returned in a stable order.,False,2,1,1,,,,2599,1359,1525,244,2.560810810810811,64.83989876166552,123.8,313.6,2616.7277036955343,5.352536097741577,35069.1983172474,1948.2887954026332,0.8722425678985115
67,d9ea773ce2043e13bcd780949f7928a741080efe,Philippe Ombredanne,2016-05-25 22:31:08+00:00,Bump version to 3.0.dev4,False,2,1,1,,,,2599,1359,1525,244,2.560810810810811,64.83989876166552,123.8,313.6,2616.7277036955343,5.352536097741577,35069.1983172474,1948.2887954026332,0.8722425678985115
68,ff09feff034238dec0ab94c0a66e1f686abba817,Philippe Ombredanne,2016-06-17 20:38:18+00:00,Updated copyright year,False,2,1,1,,,,2599,1359,1525,244,2.560810810810811,64.83989876166552,123.8,313.6,2616.7277036955343,5.352536097741577,35069.1983172474,1948.2887954026332,0.8722425678985115
69,fd7367b64d5340e19019cbee1cf411228f4e119c,Philippe Ombredanne,2016-06-17 21:31:43+00:00,"Raise proper ParseError for invalid expressions

such as X (AND y) where the nesting is not correct.",False,78,48,30,0.5,0.5,0.5,2617,1369,1536,247,2.577181208053691,64.65657120862002,125.0,315.6,2636.3855652356483,5.327144917087239,35222.5064323817,1956.8059129100943,0.8787951884118828
70,255940de0d255a80bf538820bcebcb3dd4983d94,Philippe Ombredanne,2016-08-11 14:03:16+00:00,Bump to 3.0.dev6. Next release will be a regular 3.0,False,4,2,2,,,,2617,1369,1536,247,2.577181208053691,64.65657120862002,125.0,315.6,2636.3855652356483,5.327144917087239,35222.5064323817,1956.8059129100943,0.8787951884118828
71,f89ce89eaf48985429aa7967922d50113e80c56b,German M. Bravo,2016-09-28 18:11:50+00:00,Avoid using 'matched' variable; use 'for else' instead,False,8,3,5,1.0,1.0,1.0,2615,1368,1535,247,2.577181208053691,64.6615877017866,124.8,315.2,2632.5771854654254,5.331283567678474,35189.871551230826,1954.9928639572681,0.877525728488475
72,e65f9906440c1bc78cecdfe79c91236e0be1ac1a,German M. Bravo,2016-09-28 18:17:20+00:00,Assert was always true,False,4,2,2,,,,2615,1368,1535,247,2.577181208053691,64.6615877017866,124.8,315.2,2632.5771854654254,5.331283567678474,35189.871551230826,1954.9928639572681,0.877525728488475
73,ac4e8acbc6b3a50f6e198335f6e10cd3b4d7de04,German M. Bravo,2016-09-28 18:23:01+00:00,Expression.subs() takes 'default' so symbols not defined in substitutions map fallback to that default,False,25,20,5,0.6666666666666666,0.6666666666666666,0.6666666666666666,2630,1381,1547,246,2.58,64.51324275482106,126.6,318.2,2663.489373632556,5.305400196243342,35429.39237618386,1968.2995764546588,0.887829791210852
74,95db77926c59dccd4e20d363736ab1548141d71d,Philippe Ombredanne,2016-12-12 17:04:39+00:00,Fixed comment typo,False,2,1,1,,,,2615,1368,1535,247,2.577181208053691,64.6615877017866,124.8,315.2,2632.5771854654254,5.331283567678474,35189.871551230826,1954.9928639572681,0.877525728488475
75,069c936fe3e3d7b4ceab1ab16e8c91310e17e7ac,Philippe Ombredanne,2016-12-19 17:44:58+00:00,"Ensure that ""get_literals/get_symbols"" return all and not only unique

 * the logic for get_literals/get_symbols was using sets of literals
   eventually resulting in invalid list of literals or symbols
   returned

   

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,22,21,1,1.0,1.0,1.0,2650,1397,1563,246,2.5324675324675323,64.21293446286377,128.2,320.6,2690.3818720277895,5.280470822281167,35562.0516077388,1975.6695337632668,0.8967939573425964
76,6ed730a3c8685ba58ab22c43d59974017506550d,Philippe Ombredanne,2016-12-19 17:45:16+00:00,"Ensure proper exception is raised for invalid expression ""a (and b)""

 * ""test_parse_invalid_nested_and_should_raise_a_proper_exception""
   was failing. This is now passing. A new check in parse() verifies
   that an opening parens ""("" can only be preceded by a function or
   another opening parens, but by a symbol, or else.
   Raise a proper ParseError in these cases.
   
Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,13,11,2,0.0,0.0,0.0,2659,1404,1570,248,2.5454545454545454,64.13772683696743,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
77,d982ac05860bab0a67a065291cb83f81474836fa,Philippe Ombredanne,2016-12-19 17:45:27+00:00,"Bump to version 3.

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,1,1,,,,2659,1404,1570,248,2.5454545454545454,64.13772683696743,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
78,45f401c657723c486b71314af3cc4cebd639baa7,Philippe Ombredanne,2016-12-19 17:47:58+00:00,"Bump to version 3.1, as somehow a v3 has alreday been pushed to Pypi.

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,1,1,,,,2659,1404,1570,248,2.5454545454545454,64.13772683696743,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
79,adcc3634f7e1c8e34b0113909d1957b95d7095ae,Sebastian Kraemer,2017-01-10 18:49:03+00:00,"Fix bug in normalize and write tests.

Normalize would fail when the given expression didn't contain the AND or
the OR operation for cnf and dnf, respectively. The bug was introduced when
the normalize function was changed to return a boolean expression
instead of a tuple containing the sub-terms.",False,27,23,4,0.0,1.0,1.0,2678,1418,1584,248,2.538961038961039,64.0952033313877,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
80,7050c57aa1184785427175366ab00c2c140f51fa,Philippe Ombredanne,2017-01-11 13:32:02+00:00,"Bump to version 3.2

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,6,3,3,,,,2678,1418,1584,248,2.538961038961039,64.0952033313877,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
81,b1206e887dc6eb31645ed581e05d948b076a1aab,Sebastian Kraemer,2017-01-11 18:20:23+00:00,Switch from pngmath to mathjax do display formulas in docs.,False,2,1,1,,,,2678,1418,1584,248,2.538961038961039,64.0952033313877,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
82,619b14ce6c1fb8b262bd1095413904843da3995e,Philippe Ombredanne,2017-02-09 19:17:05+00:00,"Improve imports

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,2,0,,,,2680,1420,1586,248,2.538961038961039,64.0952033313877,128.6,321.2,2696.4251432697497,5.272516946654878,35606.7296969569,1978.1516498309388,0.8988083810899166
83,810357b8aeaa1b326347e374c5634b6f814729fe,Philippe Ombredanne,2017-02-09 19:17:05+00:00,"#60 'a or b c' expression now raise an exception

 * add check in BooleanAlgebra.parse to raise a Parse when two bare
   symbols are after each other without any keyword or operation
 * add optional tracing of what happens when the AST is built
   with a TRACE_PARSE top level flag to help with AST parsing
   debugging
 * add corresponding tests and improve ParseError tests to check for
   the error_code in tests

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,115,103,12,0.4714285714285714,0.45714285714285713,0.45714285714285713,2771,1525,1665,249,2.7468354430379747,62.505460326076545,132.2,326.6,2754.9431684816727,5.213979220222794,35946.39071321259,1997.021706289588,0.918314389493891
84,6ff13163c1360574534913d15a3b0bee2660c26a,Philippe Ombredanne,2017-02-09 19:17:05+00:00,"Bump version

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,13,12,1,,,,2771,1525,1665,249,2.7468354430379747,62.505460326076545,132.2,326.6,2754.9431684816727,5.213979220222794,35946.39071321259,1997.021706289588,0.918314389493891
85,20cfe3abaf9110bb4c4329381a2fa9e28c876598,Alexander Lisianoi,2017-03-26 18:14:23+00:00,"Update all year ranges to finish in 2017 by doing grep -r 200

Signed-off-by: Alesksandr Lisianoi <all3fox@gmail.com>",False,12,6,6,,,,2771,1525,1665,249,2.7468354430379747,62.505460326076545,132.2,326.6,2754.9431684816727,5.213979220222794,35946.39071321259,1997.021706289588,0.918314389493891
86,404efd5efba9c088aa0c9a2299ad84ca1e308955,Alexander Lisianoi,2017-03-26 18:15:25+00:00,"Use self.assertRaises: if ParseError is not raised, fail test

Signed-off-by: Alesksandr Lisianoi <all3fox@gmail.com>",False,9,6,3,1.0,1.0,1.0,2774,1524,1666,249,2.740506329113924,62.562709224590684,131.8,326.0,2748.2131822787987,5.2197383720930235,35911.826428379136,1995.1014682432856,0.9160710607595997
87,b1e53680be0d8a299139e2f4a678a741e1984dd1,YaronK,2017-04-02 07:24:56+00:00,"Symbol / Literal fix suggestion

Signed-off-by: YaronK <yaron.kaner@gmail.com>",False,4,2,2,,,,2774,1524,1666,249,2.740506329113924,62.562709224590684,131.8,326.0,2748.2131822787987,5.2197383720930235,35911.826428379136,1995.1014682432856,0.9160710607595997
88,d0566d8d7bb5ab2183ec9a5c397e8979c70a7a40,YaronK,2017-04-03 10:01:30+00:00,"Add literals/symbols+negation tests

Signed-off-by: YaronK <yaron.kaner@gmail.com>",False,10,10,0,1.0,1.0,1.0,2784,1532,1674,249,2.71875,62.41632143221703,132.6,327.2,2761.674123435161,5.208278985507246,35981.130402329625,1998.9516890183127,0.9205580411450537
89,1fe9f3050c52b438409a93817d44951cf95b23e8,Philippe Ombredanne,2017-05-12 13:45:54+00:00,"Ensure that exception message do not contain u'' on Py2

 * string representation on Python2 come with a u prefix by default
   This makes testing for exception messages harder.

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,9,5,4,,,,2785,1532,1674,249,2.71875,62.41632143221703,132.6,327.2,2761.674123435161,5.208278985507246,35981.130402329625,1998.9516890183127,0.9205580411450537
90,bab572affc55e2f64069d67c5d69630f689d5ba0,Philippe Ombredanne,2017-05-12 13:46:08+00:00,"Bump version

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,1,1,,,,2785,1532,1674,249,2.71875,62.41632143221703,132.6,327.2,2761.674123435161,5.208278985507246,35981.130402329625,1998.9516890183127,0.9205580411450537
91,0999eb56ff51c406c046730ae9853b42f854cbc1,Alexander Lisianoi,2017-06-07 14:18:18+00:00,"Improve boolean.py comments and minor python

Signed-off-by: Aleksandr Lisianoi <all3fox@gmail.com>",False,42,21,21,0.0,0.0,0.0,2785,1529,1674,249,2.71875,62.42330864749679,132.6,327.2,2761.674123435161,5.208278985507246,35981.130402329625,1998.9516890183127,0.9205580411450537
92,3746d222ee963a9f55c9cfa0322f17132de92b00,Philippe Ombredanne,2017-06-09 14:57:45+00:00,"Add comments and improve code clarity for .subs() #66

 * the subs methods does exactly what is needed in #66. This just adds
   some comments and update the name of a few variables to better
   explain the substition processing.

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,40,31,9,1.0,1.0,1.0,2807,1528,1673,270,2.71875,62.420919240742464,132.8,327.6,2765.5038763525286,5.204546274580553,36014.16319811647,2000.7868443398038,0.9218346254508429
93,8a45453e9c20f656ae8b018db720c44597fee2bc,gemerden,2017-07-14 09:35:28+00:00,"adds __call__methods to enable boolean evaluation

__call__methods are added to Symbol, NOT, AND, OR.

In short: __call__methods are recursively called on NOT, AND, OR
classes, following the logic tree via self.args. When a Symbol instance
is found, the corrsponding value (e.g. True/False) is looked up in the
kwargs argument and returned to the caller.",False,26,26,0,1.0,1.0,1.0,2833,1541,1682,270,2.701219512195122,62.23464360349284,133.0,328.0,2769.335675281093,5.200844412504492,36047.21854564768,2002.6232525359824,0.9231118917603641
94,6577a47b2991b0db18d0df75e60ab13ef764f0ea,gemerden,2017-07-14 09:35:56+00:00,adds tests for the __call__ evaluation methods.,False,47,47,0,1.0,0.43243243243243246,1.0,2880,1579,1720,270,2.7777777777777777,61.33071483846927,136.4,333.6,2830.9517158461013,5.158325230918814,36440.6251685013,2024.47917602785,0.9436505719487004
95,fb86c366c437b1faff03a7a3d735c3628779a9b5,gemerden,2017-07-14 09:42:38+00:00,removes whiteline,False,1,0,1,,,,2879,1579,1720,270,2.7777777777777777,61.33071483846927,136.4,333.6,2830.9517158461013,5.158325230918814,36440.6251685013,2024.47917602785,0.9436505719487004
96,54aa1f959532af28b2e0fe354faea8023fac3560,gemerden,2017-07-19 12:56:42+00:00,"splits import, fixed reduce NameError for python3",False,9,8,1,,,,2886,1584,1725,272,2.7777777777777777,61.33071483846927,136.4,333.6,2830.9517158461013,5.158325230918814,36440.6251685013,2024.47917602785,0.9436505719487004
97,160a99d94612f734404f43fc9333cb1f7b885920,Philippe Ombredanne,2017-10-30 22:13:57+00:00,"Do not wrap types.

 * this wreck equivalence and expression comparison if they
   are built from the same algebra but from different instances

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,50,22,28,0.0,0.0,0.0,2801,1523,1675,271,2.7468354430379747,62.487921462769506,133.0,327.6,2766.128951966018,5.193819619116061,35974.11983007905,1998.5622127821694,0.9220429839886727
98,19f7b85e8a50ba0e9ba0008b7dbcee113f2c51aa,Philippe Ombredanne,2017-10-30 22:14:07+00:00,"Bump version

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,1,1,,,,2801,1523,1675,271,2.7468354430379747,62.487921462769506,133.0,327.6,2766.128951966018,5.193819619116061,35974.11983007905,1998.5622127821694,0.9220429839886727
99,c71d14295eff8c95d950d65ac31d9e1a1aa81c9b,Philippe Ombredanne,2017-11-01 11:30:25+00:00,"Add new test for siplify using different algebra

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,53,40,13,0.5,1.0,1.0,2828,1544,1697,271,2.725,62.34431771036552,133.0,327.6,2766.128951966018,5.193819619116061,35974.11983007905,1998.5622127821694,0.9220429839886727
100,fe3ddff515ec268262b2c5adfbfceb7f9c2b986f,Douglas Cardoso,2017-12-27 02:50:13+00:00,Fixing De Morgan's laws effect on double negation propositions,False,3,2,1,1.0,1.0,1.0,2829,1545,1698,271,2.725,62.340181490938804,133.0,327.6,2766.128951966018,5.193819619116061,35974.11983007905,1998.5622127821694,0.9220429839886727
101,88ff2b034607fc87d42fbacaa27d5c1b718d6150,Douglas Cardoso,2018-04-13 02:42:47+00:00,Adding some extra tests related to the double negation issue,False,6,5,1,1.0,1.0,1.0,2833,1549,1702,271,2.725,62.28330045016444,137.4,340.4,2894.4335879149157,5.381240471796518,39518.635069986885,2195.4797261103827,0.9648111959716384
102,9ee626d297d2706484af37e1f9e7b31b1cf28b63,Philippe Ombredanne,2018-08-06 07:39:01+00:00,"Improve error checking when parsing

Also improve parsing tracing and bump version

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,258,179,79,1.0,0.8088235294117647,0.8088235294117647,2933,1628,1772,283,2.738095238095238,61.165391181291874,145.0,352.4,3026.129306181906,5.287329264748619,40392.63444519382,2244.0352469552117,1.008709768727302
103,af322279c679b72a6ffea9de6f8c717ffffab208,Lee Carpenter,2019-05-09 21:23:21+00:00,Allow a custom set of characters in a token,False,19,17,2,0.47368421052631576,0.47368421052631576,0.47368421052631576,2948,1635,1783,284,2.727810650887574,61.111852477935074,145.0,352.4,3026.129306181906,5.287329264748619,40392.63444519382,2244.0352469552117,1.008709768727302
104,fe8b42ff048df8fa6d89d08f1c303dac19d42931,Steven Esser,2019-10-04 00:47:11+00:00,"Add sort keyword argument to DualBase simplify()

This commit adds a ""sort"" keyword argument to the simplify() function of
the DualBase class. This allows simplification of boolean algebra
expressions to be completed correctly, but does not sort the final
expression. This is needed for various applications where maintaining order matters.

Signed-off-by: Steven Esser <sesser@nexb.com>",False,16,14,2,0.0,0.8888888888888888,1.0,2945,1637,1781,284,2.744047619047619,61.14630762373813,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
105,8f4fcf733267587fa626c4a1cc3237a4c13dd042,Philippe Ombredanne,2019-10-14 13:52:52+00:00,"Bump version and cleanup metadata

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,9,4,5,,,,2959,1644,1791,285,2.7337278106508878,61.092971750943434,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
106,d0dbc460ed6e0ad1ebf451963d940d3ab9929c49,Benjy Weinberger,2020-03-06 22:54:16+00:00,"Remove py2-incompatible use of print statement.

In python 2 print is a statement, not a function, so it cannot
be used as the first argument to map().",False,3,2,1,0.0,0.0,0.0,2960,1645,1792,285,2.739644970414201,61.092971750943434,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
107,db41511ea31155e9ae9970c3234bc3f21128e1a2,Benjy Weinberger,2020-03-06 23:29:31+00:00,"Indent commented-out code.

RedBaron chokes on unindented comments (See
https://github.com/PyCQA/baron/issues/139).",False,8,4,4,,,,2960,1645,1792,285,2.739644970414201,61.092971750943434,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
108,1e5ac3da135c537cac1ad395e14ac667c12a5e7c,Jeff Cohen,2020-06-10 17:08:13+00:00,Fix tokenize with number as first char,False,2,1,1,,,,2959,1644,1791,285,2.7337278106508878,61.092971750943434,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
109,584280c57b55d5024085b1ab7f96e411201a417c,Jeff Cohen,2020-06-10 17:10:32+00:00,Test for numeric first char,False,1,1,0,0.0,1.0,1.0,2960,1645,1792,285,2.7337278106508878,61.0892542521928,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
110,6dcc34b60972925a78b79865eb1a50f2b0a56af4,Jeff Cohen,2020-06-10 17:20:14+00:00,Add test for first char underscore,False,1,1,0,0.0,1.0,1.0,2961,1646,1793,285,2.7337278106508878,61.08554167420143,145.8,357.2,3071.620459674119,5.320276497695852,41363.32008293512,2297.962226829729,1.0238734865580397
111,c1e230aaab346d69ac9b437ffc24891dcc8b7b84,Philippe Ombredanne,2020-06-10 21:29:40+00:00,"Bump version and update dates and manifests

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,14,9,5,,,,3042,1703,1847,287,2.7944444444444443,60.20425638529296,149.4,363.2,3137.963865604015,5.278411711361575,41829.415017174164,2323.856389843009,1.0459879552013382
112,53dd411d7c1518976564d701e35f65d1219941c3,Philippe Ombredanne,2020-06-10 22:03:55+00:00,"Format code, cleanup dead code and beef up tests

Ensure that doctests are running
Update copyright and use SPDX license expressions

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,266,142,124,0.0,0.0,0.0,3039,1702,1848,284,2.782122905027933,60.20425638529296,149.4,363.2,3137.963865604015,5.278411711361575,41829.415017174164,2323.856389843009,1.0459879552013382
113,c559254fc47bc444f98092dea5da21002c790ce9,Philippe Ombredanne,2020-06-10 22:06:50+00:00,"Post release bump

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,1,1,,,,3039,1702,1848,284,2.782122905027933,60.20425638529296,149.4,363.2,3137.963865604015,5.278411711361575,41829.415017174164,2323.856389843009,1.0459879552013382
114,0178a5aa907691ba7a8b6aafa402bc89ced7c0e3,Loïc Paulevé,2020-12-11 22:26:01+00:00,add __call__ method to _TRUE and _FALSE returning themselves,False,6,6,0,1.0,1.0,1.0,3045,1706,1852,284,2.7624309392265194,60.20425638529296,149.4,363.2,3137.963865604015,5.278411711361575,41829.415017174164,2323.856389843009,1.0459879552013382
115,e0426c197bf305ec9e8ddee9b83276c7918cb303,Loïc Paulevé,2020-12-11 22:35:57+00:00,test case for demorgan with TRUE/FALSE,False,4,4,0,0.0,1.0,1.0,3049,1710,1856,284,2.7624309392265194,60.187800241574095,149.8,364.0,3146.583564801411,5.273681449567005,41893.42623799397,2327.412568777442,1.048861188267137
116,74063a8588875c058e6dbbb85b69ed052e1f2099,Philippe Ombredanne,2021-05-15 17:16:08+00:00,"Use correct license id #99

This is a BSD-2-Clause and not BSD-3-Clause

Reported-by: Zygmunt Krynicki <me@zygoon.pl>
Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,2,1,1,,,,3049,1710,1856,284,2.7624309392265194,60.187800241574095,149.8,364.0,3146.583564801411,5.273681449567005,41893.42623799397,2327.412568777442,1.048861188267137
117,6a8e717048e8e06b6954fa661ec4128ff7370a5f,Philippe Ombredanne,2021-06-08 10:46:08+00:00,"Format code and move sort_order instance level

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,132,76,56,0.42105263157894735,0.47368421052631576,0.9473684210526315,3059,1704,1861,283,2.772222222222222,60.20425638529296,149.4,363.2,3137.963865604015,5.278411711361575,41829.415017174164,2323.856389843009,1.0459879552013382
118,35a6bd01549fed050bfe3106ee0d581b52aefac6,olliemath,2021-07-07 16:41:28+00:00,"Performance: prevent blowup in normalization

This adresses the case where we have an expression which is smal
when normalized, but in its current form contains a large dual
expression.",False,56,51,5,0.0,0.34375,0.59375,3095,1730,1889,292,2.7967032967032965,60.16714074012784,153.6,370.0,3209.2501103437426,5.400443083602667,44308.34560553012,2461.574755862785,1.0697500367812476
119,0c71af9a2f71acd8d9a1c8b20975adece660808b,Philippe Ombredanne,2022-05-02 10:49:42+00:00,"Format code with black -l 100

And isort imports

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,1233,676,557,0.16911764705882354,0.3897058823529412,0.47794117647058826,3188,1673,2004,283,2.7527472527472527,60.15598736762075,149.8,364.0,3146.583564801411,5.273681449567005,41893.42623799397,2327.412568777442,1.048861188267137
120,a1117dc3f7f4207bea38dd6e7ec6b9803d1507ae,Philippe Ombredanne,2022-05-02 11:33:47+00:00,"Drop Python 2

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,68,25,43,0.4,0.4,1.0,3170,1667,1992,276,2.7527472527472527,60.15598736762075,143.4,352.6,3035.632853210798,5.1878592617331005,40116.33986362654,2228.6855479792525,1.0118776177369326
121,f92b5bcb419ef62756074d6336aa8b51d1d9b2fc,Philippe Ombredanne,2022-05-02 11:34:08+00:00,"Drop Python 2 and use plain asserts

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,530,256,274,1.0,0.0,0.0,3152,1655,1979,273,2.6923076923076925,60.0,202.6,465.0,4287.137105736024,4.914285714285714,52259.23569950956,2903.2908721949757,1.429045701912008
122,5f93c8b17440348ffe024c8498e48c5bfa5ae0be,Philippe Ombredanne,2022-05-02 14:23:03+00:00,"Make test independent of CPU speed

Reference: https://github.com/bastikr/boolean.py/pull/105#discussion_r775106195
Reported-by: @prodhype
Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,39,30,9,0.45,1.0,1.0,3219,1688,2028,282,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
123,edcc714b8c3d343e0c42306d0b6d1b33b3b66411,Philippe Ombredanne,2022-05-05 08:14:03+00:00,"Add long_description_content_type, and bump

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,3,2,1,,,,3220,1688,2029,282,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
124,93589c505c256eead9757402e908fcfdc1bb5ec5,Philippe Ombredanne,2022-05-05 08:17:22+00:00,"Use version 4.0 no need to bump yet

There was no tag yet

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,4,2,2,,,,3220,1688,2029,282,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
125,c7349bb51b5a5d4753b2eb0129a6a0288e3da6da,Stephan Lachnit,2022-05-27 14:16:16+00:00,"doc: fix rst docstrings

Signed-off-by: Stephan Lachnit <stephanlachnit@debian.org>",False,51,30,21,,,,3229,1688,2029,282,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
126,bb7ee7578e51fe58f13c95a2c58ffeaf4b565820,Stephan Lachnit,2022-05-27 14:30:59+00:00,"doc: add API reference

Signed-off-by: Stephan Lachnit <stephanlachnit@debian.org>",False,52,47,5,,,,3245,1694,2038,285,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
127,2b5462f66d7032ffaecce95aaef429ba0122a401,Philippe Ombredanne,2022-06-03 14:41:01+00:00,"Improve docstrings and doctests

* Ensure that doctest still pass
* Improve rpesentation of docs

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,134,89,45,,,,3289,1694,2038,285,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
128,e4b76b9f7a6808ae86b392c62a5e89c8d55687b1,Philippe Ombredanne,2022-06-03 14:43:25+00:00,"Generate documentation

* Add new extra to install doc dependencies in setup.py
* Also add new extra for tests in setup.py and streamline imports
* Add new CI doc building step
* Streamline Makefile
* Ignore doc builds

Signed-off-by: Philippe Ombredanne <pombredanne@nexb.com>",False,140,57,83,,,,3306,1695,2056,285,2.726775956284153,60.0,206.6,472.2,4362.146709154532,4.877442057181526,52965.709881046845,2942.5394378359356,1.4540489030515107
