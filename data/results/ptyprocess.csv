ID,hash,author,date,commit_message,is_merge,lines_changed,insertions,deletions,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing,radon_LOC,radon_LLOC,radon_SLOC,radon_comments,radon_avg_cc,radon_avg_MI,radon_avg_vocabulary,radon_avg_length,radon_avg_volume,radon_avg_difficulty,radon_avg_effort,radon_avg_time,radon_avg_bugs
0,8a0c967f07fedc479fe6cde0c70af87a01f0019b,Thomas Kluyver,2014-10-02 22:05:26+00:00,Bring in and start cleaning up pexpect code,False,1216,1216,0,0.33078393881453155,0.3862332695984704,0.6003824091778203,1216,589,575,141,4.022222222222222,67.08667849135867,68.0,121.0,881.2892386928216,5.284756097560976,10617.889638782506,589.8827577101392,0.29376307956427394
1,88e041bcee96cb73936ff73a92bbd479e622bd3b,Thomas Kluyver,2014-10-02 22:17:22+00:00,Move our own forkpty implementation into a separate module,False,166,91,75,,,,1232,597,584,142,4.022222222222222,70.54367905716998,53.25,92.5,648.537814190081,4.829950781702374,7495.367696547325,416.40931647485144,0.2161792713966937
2,fd88de50e774946c5f1a8aa18127c89aa362d4b4,Thomas Kluyver,2014-10-02 22:27:43+00:00,Clean up constructor,False,213,30,183,1.0,1.0,1.0,1079,583,569,135,3.977777777777778,70.97976569849837,52.25,90.75,632.8967934705203,4.848143196672608,7345.393892279858,408.07743845999215,0.2109655978235068
3,c332ecad2fa9161e42bec8f1e071a50b901419e1,Thomas Kluyver,2014-10-02 22:34:54+00:00,Exception cleanup,False,27,14,13,1.0,1.0,1.0,1080,584,569,135,3.9130434782608696,70.97508039320654,52.25,90.75,632.8967934705203,4.848143196672608,7345.393892279858,408.07743845999215,0.2109655978235068
4,d58785b73fb1b9e8ba025b369317bb9eeef75186,Thomas Kluyver,2014-10-02 23:16:10+00:00,Move _fork_pty module into place,False,0,0,0,,,,1080,584,569,135,3.9130434782608696,70.97508039320654,52.25,90.75,632.8967934705203,4.848143196672608,7345.393892279858,408.07743845999215,0.2109655978235068
5,43e364a6146647519248e195d32db033e8fcbaa6,Thomas Kluyver,2014-10-02 23:55:04+00:00,Fix some undefined names,False,30,17,13,0.0,0.0,0.3333333333333333,1084,589,572,134,3.893617021276596,70.96080832689537,52.0,90.25,628.5317125074138,4.852840909090909,7302.260589683257,405.68114387129214,0.20951057083580463
6,9240a4333c2dcc2136b7a550b7492734f99dc9e4,Thomas Kluyver,2014-10-03 00:51:52+00:00,Replace read_nonblocking with read_checking_eof,False,96,21,75,1.0,1.0,1.0,1030,565,548,121,3.6595744680851063,71.48523165290447,49.5,84.5,579.6414286084804,4.85328104993598,6698.169370951571,372.1205206084207,0.19321380953616016
7,280b401e18381a4459e2ad922e1f152063d106af,Thomas Kluyver,2014-10-03 00:52:17+00:00,Remove code depending on expect(),False,71,0,71,0.0,0.0,0.0,959,532,519,110,3.744186046511628,72.09827962958511,47.0,78.75,531.3828553992118,4.81780303030303,6033.088239130501,335.17156884058346,0.17712761846640399
8,262fff955a7f24efb2af2c263eadc9b5f894203d,Thomas Kluyver,2014-10-03 01:02:26+00:00,Add setup.py and README,False,43,43,0,,,,988,536,544,111,3.744186046511628,77.67862370366808,37.6,63.0,425.1062843193695,3.854242424242424,4826.470591304401,268.13725507246676,0.14170209477312318
9,e541e8736cf547b749a0177bacc09e306b3c9758,Thomas Kluyver,2014-10-03 01:04:12+00:00,Fix setup.py,False,7,6,1,,,,988,536,544,111,3.744186046511628,77.67862370366808,37.6,63.0,425.1062843193695,3.854242424242424,4826.470591304401,268.13725507246676,0.14170209477312318
10,94f4d2c6c2445f538182ac8970571c5faae7d37f,Thomas Kluyver,2014-10-03 01:42:17+00:00,First test!,False,104,65,39,1.0,1.0,0.9375,1014,557,565,111,3.5319148936170213,75.9668385154906,31.833333333333332,53.0,355.04771818316846,3.29520202020202,4022.4550667121807,223.46972592845455,0.11834923939438952
11,ab07abe019e6a28e8d5d3f2e5459dd5e1776fd9d,Thomas Kluyver,2014-10-03 16:35:34+00:00,"Interface tweaks, got PtyProcessUnicode working",False,64,54,10,1.0,1.0,1.0,1058,593,599,113,3.326923076923077,74.26571164333438,32.833333333333336,54.5,365.51295473473243,3.281795900178253,4106.210782079573,228.12282122664294,0.12183765157824417
12,d6ff8d5225fdec48be8dc892e0ba6a603de2d281,Thomas Kluyver,2014-10-03 16:38:17+00:00,"Remove interact code

At least for the time being, I want to keep this interface simple.",False,127,0,127,0.5576923076923077,0.8461538461538461,0.9230769230769231,931,525,536,104,3.1702127659574466,75.1330955305275,28.5,47.166666666666664,302.1769164516677,3.0901379870129873,3032.709369544608,168.48385386358936,0.10072563881722257
13,30c3a555a26c5f975d9824242a4b28bdf48a2748,Thomas Kluyver,2014-10-03 16:44:19+00:00,Discard unnecessary kwargs,False,4,1,3,1.0,1.0,1.0,929,525,534,104,3.1702127659574466,75.1348994209652,28.5,47.166666666666664,302.1769164516677,3.0901379870129873,3032.709369544608,168.48385386358936,0.10072563881722257
14,54e9fb98832e1bff9006058e561f3788e9095740,Thomas Kluyver,2014-10-03 21:45:19+00:00,Simplify some code,False,12,4,8,1.0,1.0,0.0,925,521,530,104,3.1702127659574466,75.15375636883672,28.5,47.166666666666664,302.1769164516677,3.0901379870129873,3032.709369544608,168.48385386358936,0.10072563881722257
15,ad0560b3a15de8a45d3887dcd312811e3fb57654,Thomas Kluyver,2014-10-08 19:43:14+00:00,Eliminate references to child_fd,False,11,5,6,,,,924,521,530,104,3.1702127659574466,75.15375636883672,28.5,47.166666666666664,302.1769164516677,3.0901379870129873,3032.709369544608,168.48385386358936,0.10072563881722257
16,53cae9c221a9f169f559bd49d4321dc6a3b1f8da,Thomas Kluyver,2014-10-08 21:58:11+00:00,Add interface for callbacks in child process before exec,False,6,5,1,0.0,0.0,0.0,928,523,532,104,3.1914893617021276,75.12191828070884,28.5,47.166666666666664,302.1769164516677,3.0901379870129873,3032.709369544608,168.48385386358936,0.10072563881722257
17,1b5ba8b289ecee197a73c9e645d12492c150eb59,Thomas Kluyver,2014-10-09 19:42:58+00:00,Type checking for argv (because it's easy to try passing a string),False,3,3,0,0.0,0.0,0.0,931,525,534,104,3.2127659574468086,75.07658257042401,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
18,6c7407065008594dd08d91051acdfdd5af5b59be,Thomas Kluyver,2014-10-09 20:51:23+00:00,Remove unused attribute,False,3,0,3,0.0,0.0,1.0,928,524,533,102,3.2127659574468086,75.07769494253687,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
19,638dd59a4e2c9f471803e3a3767666c9a3fce691,anwilli5,2014-10-09 23:40:20+00:00,"- Adding more robust code to handle the case where the exec call within spawn fails. Now, spawn will raise an exception if this happens.
 - Adding a test to ensure this exception is raised when an invalid binary is run",False,125,118,7,0.0,0.5897435897435898,0.5897435897435898,1039,576,583,128,3.2653061224489797,76.08903642584228,27.0,43.714285714285715,278.66012568352056,2.861737422241624,2876.821829087926,159.82343494932925,0.09288670856117352
20,77537c6965f35652fee69c4120d715c900e2164f,Thomas Kluyver,2014-10-10 00:18:00+00:00,"Get rid of fileobj_bytes

I thought PtyProcessUnicode would create self.fileobj as a text-mode
file handle, but I moved away from that. So fileobj can be used
everywhere fileobj_bytes was.",False,13,6,7,,,,927,524,533,103,3.2127659574468086,75.07953294569239,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
21,ffa44554e154927f999816f3dc4c4d82c645e4ea,Thomas Kluyver,2014-10-10 00:18:14+00:00,Expose PtyProcessError at the top level,False,2,1,1,,,,927,524,533,103,3.2127659574468086,75.07953294569239,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
22,fcc20af10be12cf23e1516b1ce8dec98049e5b7c,Thomas Kluyver,2014-10-10 00:19:38+00:00,Bump version to 0.2,False,6,4,2,,,,929,525,534,103,3.2127659574468086,75.07953294569239,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
23,94fd3da1e6dfea428dd38af14bee48ccee96ab8d,anwilli5,2014-10-10 04:20:26+00:00,"- Addressing all of the points raised by @takluyver in
   https://github.com/pexpect/ptyprocess/pull/1 with the
   exception of the generic exec OSError handling - waiting
   on thoughts on how best to implement this.",False,46,22,24,1.0,0.0,0.0,1037,574,581,129,3.2857142857142856,76.22034902280363,26.714285714285715,43.285714285714285,276.82253466371367,2.861737422241624,2874.984238068119,159.72134655933996,0.09227417822123789
24,a7ad8a9409d4c0339aaed47901ae80a8fb82f826,Thomas Kluyver,2014-10-11 01:47:38+00:00,Fix sendintr(),False,2,1,1,,,,929,525,534,103,3.2127659574468086,75.07953294569239,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
25,df851dde016b7864ed27dca736a5341c9ca96edc,anwilli5,2014-10-11 15:51:15+00:00,"- In the case where exec fails, the errno returned in the exception is now the one returned from the child process exception",False,12,9,3,0.0,0.0,0.0,1043,580,585,129,3.2857142857142856,76.19260072872767,27.0,43.714285714285715,280.58142806257035,2.855844155844156,2908.1268025949626,161.56260014416463,0.09352714268752348
26,01f550b6c478846ebaa15b7b41331b71ba914d07,Thomas Kluyver,2014-10-11 22:48:16+00:00,Return number of bytes sent and actual content for control characters,False,7,4,3,0.0,1.0,1.0,930,526,535,103,3.2127659574468086,75.07478320737327,29.0,48.0,309.2965300926922,3.079249011857707,3093.3377638663674,171.85209799257598,0.10309884336423075
27,fbb5f59852c2985d872cbb2863aa0e1231b3ff04,anwilli5,2014-10-13 17:17:14+00:00,- Minor improvements to the exec failure test case,False,16,13,3,0.0,1.0,1.0,1053,584,589,133,3.326530612244898,75.66443860778205,27.857142857142858,44.57142857142857,284.88290289555096,2.998701298701299,2920.586895118067,162.25482750655928,0.09496096763185033
28,8c3e7c3588ce418cf39e6beb652a13b470a69ee0,Thomas Kluyver,2014-10-13 18:03:22+00:00,Start docs with sphinx-quickstart,False,465,465,0,,,,1196,547,576,264,3.2127659574468086,78.63552846346282,24.857142857142858,41.142857142857146,265.1113115080219,2.6393562958780348,2651.432369028315,147.30179827935083,0.08837043716934065
29,eee39c1143387959ee3fe1372121d39659868a59,Thomas Kluyver,2014-10-13 18:25:49+00:00,Improve docstrings,False,62,47,15,,,,1228,552,576,264,3.2127659574468086,78.64117243204521,24.857142857142858,41.142857142857146,265.1113115080219,2.6393562958780348,2651.432369028315,147.30179827935083,0.08837043716934065
30,b5d54f55174ade3b4c3dbcb630ec0cbd4c73db9c,anwilli5,2014-10-13 18:32:44+00:00,- Simplifying some of the exec failure test code based on suggestions from @takluyver,False,6,1,5,1.0,0.0,0.0,1049,581,586,133,3.2857142857142856,75.79657780953207,27.428571428571427,44.142857142857146,282.65473940880577,2.9272727272727272,2913.165341042887,161.8425189468271,0.09421824646960193
31,a31a5feac66ae149d564fccc97e14f3567bba5c4,Thomas Kluyver,2014-10-13 19:09:08+00:00,Make tests a package so py.test tests against local version,False,0,0,0,,,,1349,609,629,295,3.2857142857142856,81.1700644946135,21.333333333333332,34.333333333333336,219.8425750957378,2.276767676767677,2265.7952652555787,125.87751473642109,0.07328085836524595
32,24562a555fdfc538f1e005f2ac95c2ccee400b31,Thomas Kluyver,2014-10-13 19:17:36+00:00,Bump version number to 0.3,False,8,4,4,,,,1349,609,629,295,3.2857142857142856,81.1700644946135,21.333333333333332,34.333333333333336,219.8425750957378,2.276767676767677,2265.7952652555787,125.87751473642109,0.07328085836524595
33,839aeabd1bfa2add40f9151f26f731a07fe8eafb,Thomas Kluyver,2014-10-13 19:27:03+00:00,Fix return paths for sendcontrol(),False,11,6,5,0.0,1.0,1.0,1350,610,630,295,3.2653061224489797,81.1893320167481,21.11111111111111,33.888888888888886,216.1303211096314,2.272947967065614,2216.8745516378763,123.1596973132154,0.07204344036987714
34,eb81fe1d87e7d01aca5c803e92070a4f488f1f6b,Thomas Kluyver,2014-10-13 19:28:14+00:00,Bump version number to 0.3.1,False,6,3,3,,,,1350,610,630,295,3.2653061224489797,81.1893320167481,21.11111111111111,33.888888888888886,216.1303211096314,2.272947967065614,2216.8745516378763,123.1596973132154,0.07204344036987714
35,c370e5db2c175f8f6b51d7de5af5ae919446d799,Thomas Kluyver,2014-11-25 20:52:23+00:00,Document before_exec argument,False,6,6,0,0.0,0.0,0.0,1356,610,630,295,3.2653061224489797,81.18862666821619,21.11111111111111,33.888888888888886,216.1303211096314,2.272947967065614,2216.8745516378763,123.1596973132154,0.07204344036987714
36,d991f0df3f55c0c534deef74b4ad41a6591abcbc,Thomas Kluyver,2014-11-25 23:20:16+00:00,"Single preexec_fn with error handling, like subprocess.Popen",False,112,94,18,0.8620689655172413,0.8620689655172413,0.8620689655172413,1432,656,678,300,3.3076923076923075,81.71765761104157,19.9,31.7,201.08335835130072,2.147078986587183,2056.471207274983,114.24840040416575,0.06702778611710024
37,aa02d6bcce4ba27d1ded71e2f50eff7e2063b2c9,Thomas Kluyver,2014-12-20 00:34:29+00:00,Bump version number to 0.4,False,8,4,4,,,,1432,656,678,300,3.3076923076923075,81.71765761104157,19.9,31.7,201.08335835130072,2.147078986587183,2056.471207274983,114.24840040416575,0.06702778611710024
38,a8811974010ff6178a6ad185466e62624010f7a3,Thomas Spura,2015-01-15 09:45:54+00:00,"Tests: Use readline to read full output of closing parent process

closes #7
closes #8",False,6,3,3,,,,1432,656,678,300,3.3076923076923075,81.71765761104157,19.9,31.7,201.08335835130072,2.147078986587183,2056.471207274983,114.24840040416575,0.06702778611710024
39,91d734e12fa9840b856159f76b02daae529cc127,Thomas Kluyver,2015-02-22 18:41:23+00:00,"Fix check for Solaris

As reported in #9",False,2,1,1,,,,1432,656,678,300,3.3076923076923075,81.72062267078613,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
40,e6ce6f2ab1081c9800f3450be5098bae154739fd,Jason Heeris,2015-03-16 11:31:04+00:00,Added screen size parameters.,False,15,10,5,0.0,0.0,0.0,1437,656,680,300,3.3076923076923075,81.7207129974433,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
41,d0ffa35fe7119e8477c2a2e8eac0eef696aa664c,Jason Heeris,2015-03-16 11:57:28+00:00,Added screen size parameters (missed one usage in previous change).,False,2,1,1,,,,1437,656,680,300,3.3076923076923075,81.7207129974433,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
42,b1e6193387e57e67ca657c606bb6d5d017909c96,Jason Heeris,2015-03-16 22:20:51+00:00,Improved documentation of dimensions parameter.,False,2,1,1,,,,1437,656,680,300,3.3076923076923075,81.7207129974433,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
43,d5783a312102dac0429cf7fd83ad3c272b1b0795,Reynir Björnsson,2015-04-15 13:44:57+00:00,"Return normally on wait() if child has terminated

To my own surprise it seems to be a one-line change after all.

It seems isalive() will set status, exitstatus, signalstatus and
terminated correctly if the child has terminated.",False,2,1,1,,,,1437,656,680,300,3.3076923076923075,81.7207129974433,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
44,4c384bc61419322c5abb3c011bcbb4bf0e8cd777,Reynir Björnsson,2015-04-15 14:14:45+00:00,Add a test case for wait(),False,43,43,0,1.0,1.0,1.0,1480,674,697,302,3.2,82.17722849687208,18.636363636363637,29.454545454545453,183.57810410586234,1.9991735537190083,1856.390932677618,103.13282959320104,0.06119270136862078
45,477aba9de5027f81f513ec6600f93599cfb1e0ba,Jeff Quast,2015-04-26 02:32:03+00:00,Add failing Solaris 11 TestCase for spawn(),False,17,15,2,1.0,1.0,1.0,1450,662,685,304,3.2641509433962264,83.18776328744876,20.1,31.8,200.7161382296643,2.199090909090909,2042.7701378019876,113.48722987788824,0.06690537940988811
46,6cabbd1789e341e79ae80899de5e983273d86699,Jeff Quast,2015-04-26 02:33:42+00:00,Ignore errno.ENXIO in inst.setwinsize after fork,False,2,1,1,,,,1450,662,685,304,3.2641509433962264,83.18776328744876,20.1,31.8,200.7161382296643,2.199090909090909,2042.7701378019876,113.48722987788824,0.06690537940988811
47,39b0547dacdf3fe72ef03f5799a39d454537be4f,Jeff Quast,2015-04-26 02:37:59+00:00,Do not allow ptyprocess to install on py2.6,False,8,6,2,,,,1441,658,683,300,3.3076923076923075,80.638171572224,20.1,31.8,199.88478383681306,2.199090909090909,2041.0044606055617,113.38913670030904,0.0666282612789377
48,74114f1f9fc6f05274015f654a18758b77dc52ba,Jeff Quast,2015-04-26 02:51:55+00:00,"revert unittest2 => unittest, woops!",False,10,2,8,,,,1444,659,682,303,3.2641509433962264,83.3299813999649,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
49,b3908a81160b442eaf5b148fce3c21614507e20b,Jeff Quast,2015-04-26 02:52:26+00:00,filedes => file descriptor,False,2,1,1,,,,1444,659,682,303,3.2641509433962264,83.3299813999649,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
50,d4bee9d32825274784d543d18e0a1699494ae6b8,Jeff Quast,2015-04-26 20:21:33+00:00,"Add test to ensure proc.wait() twice, remove fluff",False,58,24,34,1.0,1.0,1.0,1474,680,700,306,3.1785714285714284,82.3983377929309,18.272727272727273,28.90909090909091,181.71343985164825,1.9991735537190083,1855.4586005505107,103.08103336391731,0.06057114661721608
51,a80f301ae6261b29672fb273b87b25da9267e26d,Jeff Quast,2015-04-26 21:08:33+00:00,Bump version for wait() change,False,4,2,2,,,,1444,659,682,303,3.2641509433962264,83.3299813999649,19.8,31.5,199.40929508659673,2.1490909090909094,2040.7667162304538,113.3759286794697,0.06646976502886558
52,092e69ab4b469d8534eec73a377718de10b6a4b7,Thomas Kluyver,2015-04-26 23:09:52+00:00,Update version number for ptyprocess.__version__ as well,False,2,1,1,,,,1481,683,702,309,3.1403508771929824,83.86130906795053,18.272727272727273,28.90909090909091,181.71343985164825,1.9991735537190083,1855.4586005505107,103.08103336391731,0.06057114661721608
53,249c671779761e91f437ac3e19cae834a35933d1,Jeff Quast,2015-04-26 23:16:50+00:00,"Workaround freebsd AT&T shell in test

There is something I am not able to understand about /bin/sh
on freebsd: This is actually some kind of ""second output of
input echo"" that occurs only with the AT&T-compatible /bin/sh
on FreeBSD, and intermittently (a modified version of the test
runs forever on OSX and Linux).

Complete analysis is in issue #12,
https://github.com/pexpect/ptyprocess/issues/12#issuecomment-96443761",False,77,44,33,1.0,1.0,0.0,1492,684,703,315,3.1016949152542375,84.22523093998423,18.636363636363637,29.454545454545453,183.90503361964673,2.1355371900826445,1861.7415474368702,103.43008596871506,0.06130167787321559
54,4fdec84465f57cf3fde7a4dc06b8d55abd913f66,Jeff Quast,2015-04-27 00:28:25+00:00,bugfix: waitnoecho() refers to missing self.timeout,False,21,17,4,1.0,1.0,1.0,1494,695,712,309,3.033333333333333,82.41992737853457,17.0,26.583333333333332,164.35592408162805,1.8713776419658774,1657.9719373705814,92.10955207614346,0.05478530802720935
55,a2ea5be092f8606f4831c78992e6576ec33c8427,Jeff Quast,2015-04-27 01:02:43+00:00,Fix tests for echo; unicode/bytes and flush,False,43,42,1,0.25,1.0,1.0,1535,720,736,320,3.081967213114754,83.11934004658916,18.083333333333332,28.916666666666668,175.00974753827094,1.944294308632544,1673.6367881649787,92.97982156472108,0.058336582512756974
56,85185f0181c77d6995395b5f2d943ea41dfddcc4,Jeff Quast,2015-04-27 01:10:11+00:00,more unicode fixes,False,10,5,5,,,,1535,720,736,320,3.081967213114754,83.11934004658916,18.083333333333332,28.916666666666668,175.00974753827094,1.944294308632544,1673.6367881649787,92.97982156472108,0.058336582512756974
57,a8bef64f31b4ee509c7c6eeae376dbbc1be17491,Jeff Quast,2015-04-27 01:14:19+00:00,waitnoecho() should return False after stty echo,False,3,2,1,0.0,1.0,1.0,1536,721,737,320,3.081967213114754,83.04607916463918,18.166666666666668,29.166666666666668,176.29273653396876,1.94735803412274,1675.8824339347905,93.10457966304396,0.05876424551132292
58,71bd538ba531989d8fc94f9cbd4f88cc14f8c4b2,Jeff Quast,2015-04-27 01:14:24+00:00,do not print debug,False,2,0,2,1.0,0.0,0.0,1534,719,735,320,3.081967213114754,83.1185587549632,18.166666666666668,29.166666666666668,176.29273653396876,1.94735803412274,1675.8824339347905,93.10457966304396,0.05876424551132292
59,6e31e9746c93d6131d8043356ec7f6f3b07aa706,Jeff Quast,2015-04-27 01:21:51+00:00,Document waitnoecho & pending output as NOTE,False,3,3,0,,,,1537,719,735,320,3.081967213114754,83.11865910582804,18.166666666666668,29.166666666666668,176.29273653396876,1.94735803412274,1675.8824339347905,93.10457966304396,0.05876424551132292
60,1ae5a549195f816f0111f7e703f46363b7a399d5,Jeff Quast,2015-04-27 01:25:34+00:00,"Revert ""Document waitnoecho & pending output as NOTE""

This reverts commit 6e31e9746c93d6131d8043356ec7f6f3b07aa706.

I'm not sure why we do not notice this in pexpect, though,
so I removed the docstring unless I can understand it.",False,3,0,3,,,,1534,719,735,320,3.081967213114754,83.1185587549632,18.166666666666668,29.166666666666668,176.29273653396876,1.94735803412274,1675.8824339347905,93.10457966304396,0.05876424551132292
61,63de9ec3de6f5dad9378c0ecb68cc06c19608988,Jeff Quast,2015-04-27 01:33:45+00:00,"simplify waitnoecho timeout. travis-ci freezes

suspect read() return values are different on travis-ci
than on teamcity.  Travis-CI seems to freeze up forever,
whereas it passes fine on Linux TeamCity.",False,37,7,30,1.0,0.0,0.0,1511,710,726,309,3.0491803278688523,81.27471910227598,17.666666666666668,28.083333333333332,170.59583947046656,1.8852665308547663,1662.3253749710477,92.3514097206138,0.05686527982348885
62,33e3457858e8928b857be68d8f0c24c4f2cc4f50,Jeff Quast,2015-04-27 01:48:14+00:00,"skip if bc(1) is not found, and fix bytes/unicode",False,15,10,5,1.0,1.0,1.0,1588,745,762,332,3.0,80.64124545799287,19.666666666666668,31.5,188.46196765393918,2.112697086410322,1723.1865449429934,95.73258583016633,0.0628206558846464
63,0075f22b1fe77a9384ced1e02a5036be0c2d99cc,Jeff Quast,2015-04-27 02:48:33+00:00,"Solaris fixes for tests of echo

- We cannot use any of the setecho/getecho family of
  functions on solaris, skip them on such platform.
- Do not unnecessary test the same in test_interactive_*
  family of tests, these are covered by test_echo.py
- When the EOFError is caught, any *further* reads will
  **block** forever on Solaris, whereas Linux, FreeBSD,
  and OSX would continue to raise EOFError.  No need to
  unnecessarily test such OS internal, remove such test.",False,42,17,25,0.3333333333333333,0.3333333333333333,0.6666666666666666,1580,742,759,329,2.970149253731343,80.773763168063,18.833333333333332,30.333333333333332,181.11667608499275,2.0154748641880995,1685.838606812639,93.65770037847999,0.06037222536166425
64,fcef4bf302ee46eb27e364d976c78f482f126621,Jeff Quast,2015-04-27 02:59:10+00:00,"Solaris: readline() may block forever on exit.

As noted in in the methods for this, there are no workarounds
for Solaris, we need to be careful not to use such methods, as
they block forever, causing the test runner to freeze up.",False,4,2,2,,,,1580,742,759,329,2.970149253731343,80.773763168063,18.833333333333332,30.333333333333332,181.11667608499275,2.0154748641880995,1685.838606812639,93.65770037847999,0.06037222536166425
65,7bb9ac0357daf7ba44c85396f0e0adc302fce3b3,Jeff Quast,2015-04-27 03:21:13+00:00,"/bin/false returns 255? check non-zero instead.

I've only seen this happen once on Solaris, and I
admit that I don't really understand it!",False,2,1,1,,,,1580,742,759,329,2.970149253731343,80.773763168063,18.833333333333332,30.333333333333332,181.11667608499275,2.0154748641880995,1685.838606812639,93.65770037847999,0.06037222536166425
66,f45ff7ebb3550544875d861b3d871d87fe6d3c35,S. Chris Colbert,2015-06-17 18:09:20+00:00,fix typo pass -> return,False,2,1,1,,,,1580,742,759,329,2.970149253731343,80.773763168063,18.833333333333332,30.333333333333332,181.11667608499275,2.0154748641880995,1685.838606812639,93.65770037847999,0.06037222536166425
67,d08eee66364be380a694ad8153fbc636f97912a3,Jakub Wilk,2015-11-05 11:54:36+00:00,Fix typos,False,6,3,3,,,,1580,742,759,329,2.970149253731343,80.773763168063,18.833333333333332,30.333333333333332,181.11667608499275,2.0154748641880995,1685.838606812639,93.65770037847999,0.06037222536166425
68,a2de9637277abb97746214f9779925d309f303fa,Thomas Kluyver,2016-01-29 13:38:21+00:00,Flit packaging,False,18,18,0,,,,1581,743,759,329,2.970149253731343,80.773763168063,18.833333333333332,30.333333333333332,181.11667608499275,2.0154748641880995,1685.838606812639,93.65770037847999,0.06037222536166425
69,38a36b6e0638628f86ecaa7a0d264ae5b6e8da32,Thomas Kluyver,2016-02-02 16:07:37+00:00,Remove MANIFEST.in and setup.py,False,36,0,36,,,,1548,737,731,328,2.970149253731343,80.0100520244499,20.272727272727273,32.81818181818182,197.14956595615905,2.1532453063870176,1838.880530727326,102.16002948485148,0.06571652198538634
70,38e90edc696271518d031c5182293c31581dfaee,Thomas Kluyver,2016-02-02 16:25:26+00:00,"Use buffering when opening the pty

This is experimental - it passes ptyprocess' own tests, but we should
test it more extensively before we decide to merge it.

We can't just open the r/w file object with buffering enabled, because
that fails with an error on a non-seekable stream. That makes sense for
file access - buffering without seeking would break mixed reads and
writes. A pty is a bit odd: although we have a single file descriptor,
it's conceptually more like two separate streams. Luckily, Python
provides BufferedRWPair to join two file objects - one reading and one
writing - into a single thing.

Because of the buffering, if someone reads through the object interface,
and then uses the FD directly to read further, they may lose data.
However, I *think* that using the FD is still OK so long as you never
use the read methods (as Pexpect does). We should check this.

Calls to `PtyProcess.write()` are effectively unbuffered by default,
because I call flush() after writing the data. Passing `flush=False`
will skip this.

Closes gh-3",False,24,16,8,1.0,1.0,0.0,1556,744,738,328,2.9558823529411766,79.97196206180958,20.272727272727273,32.81818181818182,197.14956595615905,2.1532453063870176,1838.880530727326,102.16002948485148,0.06571652198538634
71,704430b94af3f8712f8fa393bb46f3c33592e6b0,Thomas Kluyver,2016-02-02 16:32:07+00:00,Version number -> 0.5.1,False,4,2,2,,,,1548,737,731,328,2.970149253731343,74.76035691396477,20.545454545454547,33.09090909090909,197.58182845635574,2.1986998518415635,1839.0966619774242,102.17203677652361,0.0658606094854519
72,8f1ba73b82a4b4fbe342fef1498cd35362f63982,Thomas Kluyver,2016-02-27 09:32:41+00:00,Add project dir to sys.path when building docs,False,2,1,1,,,,1556,745,739,327,2.9558823529411766,74.77991412802567,20.545454545454547,33.09090909090909,197.58182845635574,2.1986998518415635,1839.0966619774242,102.17203677652361,0.0658606094854519
73,f673a54f1fef9c390bc1a683cbcdfa8128385bd0,Thomas Kluyver,2016-12-13 20:34:17+00:00,"Use PtyProcessError instead of ExceptionPexpect

Closes gh-35",False,16,9,7,,,,1558,746,740,327,2.9558823529411766,74.72312955914778,20.545454545454547,33.09090909090909,197.58182845635574,2.1986998518415635,1839.0966619774242,102.17203677652361,0.0658606094854519
74,152db3de745bbf56af1777e25abfbc74360e7dba,Min RK,2017-04-28 10:33:45+00:00,"sys.__stdin__ can be None

raising an AttributeError, which was not among the caught exceptions",False,17,12,5,0.0,0.0,1.0,1563,752,746,327,3.014705882352941,74.69841276981009,21.181818181818183,34.36363636363637,208.24308171666596,2.199463793781976,1962.2138402155726,109.01188001197633,0.06941436057222197
75,f80d9775f0c64933019f9bb2f7621455ed5b5a54,Thomas Kluyver,2017-06-22 15:37:32+00:00,Version number -> 0.5.2,False,4,2,2,,,,1556,745,739,327,2.9558823529411766,74.77991412802567,20.545454545454547,33.09090909090909,197.58182845635574,2.1986998518415635,1839.0966619774242,102.17203677652361,0.0658606094854519
76,9388ef361eb754ae3ff6b765f2086205cd070401,Dean Perkins,2017-06-28 04:50:10+00:00,Fix AIX bug for users with unlimited nofiles,False,5,4,1,,,,1559,745,739,330,2.9558823529411766,74.78029555147496,20.545454545454547,33.09090909090909,197.58182845635574,2.1986998518415635,1839.0966619774242,102.17203677652361,0.0658606094854519
77,8aa7deabad304fc1d6713bfea5fa58b574b0460f,Jeroen Demeyer,2018-02-07 10:52:49+00:00,Clarify setecho error message,False,2,1,1,,,,1566,752,746,330,3.014705882352941,74.6990814224405,21.181818181818183,34.36363636363637,208.24308171666596,2.199463793781976,1962.2138402155726,109.01188001197633,0.06941436057222197
78,35168acf5fee0cef70f5b88e990da0053c883b61,Thomas Kluyver,2018-06-22 08:28:38+00:00,Version number -> 0.6.0,False,2,1,1,,,,1568,753,747,330,3.014705882352941,74.64225184955855,21.181818181818183,34.36363636363637,208.24308171666596,2.199463793781976,1962.2138402155726,109.01188001197633,0.06941436057222197
79,f5a516362c1681afae49f3d227e407f3e12b4336,Eugenio Pérez,2019-01-02 18:41:09+00:00,Add pass_fds parameter to PtyProcess:spawn(),False,48,45,3,0.0,0.8333333333333334,0.8333333333333334,1610,771,775,334,3.0,74.06420346371912,22.636363636363637,36.72727272727273,224.82463396729224,2.384782768700187,2104.1150047508463,116.89527804171372,0.07494154465576408
80,ee54ae2ee6bdd1e9f040dac79d799ae5b178e8fe,Thomas Kluyver,2020-12-28 15:13:57+00:00,Version number -> 0.7.0,False,6,3,3,,,,1610,771,775,335,3.0,79.25625139750304,22.363636363636363,36.45454545454545,224.39237146709556,2.3393282232456416,2103.8988735007483,116.88327075004159,0.07479745715569852
81,0d1d112b36a25aadbc5a8fad8ce585f0e6420323,Thomas Kluyver,2021-02-14 14:15:32+00:00,Fill out PtyProcess methods in documentation,False,91,69,22,,,,1623,771,775,335,3.0,79.25618389553557,22.363636363636363,36.45454545454545,224.39237146709556,2.3393282232456416,2103.8988735007483,116.88327075004159,0.07479745715569852
82,40c1ccf3432a6787be1801ced721540e34c6cd87,Ivan Babrou,2021-04-10 00:43:32+00:00,"Read error in PtyTestCase::test_pass_fds

Without this on macOS the child process becomes a zombie,
because parent never reaps it after exit.",False,1,1,0,0.0,1.0,1.0,1624,772,776,336,3.0,79.26342927767452,22.363636363636363,36.45454545454545,224.39237146709556,2.3393282232456416,2103.8988735007483,116.88327075004159,0.07479745715569852
83,a44312974bd9084aa568d2e18ce5b2a7e0e45983,Miro Hrončok,2023-10-23 13:20:58+00:00,"Remove unittest.makeSuite, gone from Python 3.13

See https://docs.python.org/3.13/whatsnew/3.13.html

""""""
Removed the following unittest functions, deprecated in Python 3.11:

    unittest.findTestCases()
    unittest.makeSuite()
    unittest.getTestCaseNames()
""""""

The removed call does not seem to have any effect when the file is executed
directly, run trough unittest discover or pytest.",False,3,0,3,,,,1621,771,775,336,3.0,79.25190632165567,22.363636363636363,36.45454545454545,224.39237146709556,2.3393282232456416,2103.8988735007483,116.88327075004159,0.07479745715569852
