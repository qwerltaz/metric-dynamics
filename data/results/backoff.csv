ID,hash,author,date,commit_message,is_merge,lines_changed,insertions,deletions,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing,radon_LOC,radon_LLOC,radon_SLOC,radon_comments,radon_avg_cc,radon_avg_MI,radon_avg_vocabulary,radon_avg_length,radon_avg_volume,radon_avg_difficulty,radon_avg_effort,radon_avg_time,radon_avg_bugs
0,e52859ccb9272b3f752b187b72b41a00efdf7bab,Bob Green,2014-05-13 18:02:50+00:00,Function decoration for pluggable backoff & retry,False,579,579,0,0.7777777777777778,0.9590643274853801,0.8304093567251462,429,179,206,9,2.0588235294117645,66.10145350405075,33.333333333333336,54.0,304.9257965179099,2.3822042467138522,1160.719248492465,64.48440269402585,0.10164193217263662
1,7cde2b6b670e8e6c5f3de9c0b7e8f7888611a877,Bob Green,2014-05-14 12:09:00+00:00,Support python 3,False,11,6,5,,,,430,179,207,9,2.0588235294117645,66.10145350405075,33.333333333333336,54.0,304.9257965179099,2.3822042467138522,1160.719248492465,64.48440269402585,0.10164193217263662
2,5cf2b4f1cc4583409569a84c2d1a3be69d390cdf,Bob Green,2014-05-21 20:20:29+00:00,Log on_predicate backoff as INFO rather than ERROR,False,6,3,3,,,,430,179,207,9,2.0588235294117645,66.10145350405075,33.333333333333336,54.0,304.9257965179099,2.3822042467138522,1160.719248492465,64.48440269402585,0.10164193217263662
3,3909457d9db2ba204cea3201c2301a75e9968881,Cayenne Geis,2014-06-05 19:45:14+00:00,Make logging unicode-safe,False,12,7,5,1.0,1.0,1.0,432,181,209,9,2.0588235294117645,65.91000013975572,34.0,55.0,311.9833938084323,2.381298449612403,1171.3805675299425,65.0766981961079,0.10399446460281077
4,91983368dae10d42a735b5addabb7e76649a973a,Daniel Bonkowski,2014-07-25 10:13:29+00:00,"Adding support for python2.6

NullHandler was introduced in logging module from 2.7 on so we need to
implement this ourselves for 2.6 as documented in
https://docs.python.org/2.6/library/logging.html#configuring-logging-for-a-library",False,11,10,1,1.0,1.0,1.0,441,188,216,9,2.0,66.17023811551375,34.666666666666664,56.0,319.3761676407466,2.3578703703703705,1200.162502802581,66.6756946001434,0.10645872254691553
5,82d5dcd21cb5909003b9e01a3ea44cde4fed5f63,Rob Young,2014-08-07 20:38:51+00:00,"Add support for python 3

The unicode function is not in python 3 as string literals are by
default unicode strings.

see:
http://www.diveintopython3.net/porting-code-to-python-3-with-2to3.html#unicode",False,3,2,1,,,,433,182,210,9,2.0588235294117645,65.92943699392808,34.666666666666664,56.0,319.3761676407466,2.3578703703703705,1200.162502802581,66.6756946001434,0.10645872254691553
6,7ed5c943b778ad948bafb4fa1936dcd26ba85446,Bob Green,2014-08-12 16:05:13+00:00,Fix 100% code coverage,False,2,1,1,,,,441,188,216,10,2.0,66.10632128468556,34.666666666666664,56.0,319.3761676407466,2.3578703703703705,1200.162502802581,66.6756946001434,0.10645872254691553
7,1228b680f17b0771659797c6215f78ee3f2bc190,Bob Green,2014-08-12 18:05:11+00:00,Run tests in travis for 2.6,False,3,2,1,,,,442,189,217,11,2.0,66.0508003244248,35.333333333333336,57.0,326.81414438207656,2.336436170212766,1229.2578122227621,68.29210067904233,0.10893804812735886
8,435d0e7536aa2a955a4bb2d1a4def9bebe93defe,Bob Green,2014-08-12 18:05:38+00:00,"Support 2.6, bump version",False,3,2,1,,,,443,189,218,11,2.0,66.0508003244248,35.333333333333336,57.0,326.81414438207656,2.336436170212766,1229.2578122227621,68.29210067904233,0.10893804812735886
9,a385ec8273552aea6f8577cb540f0f0bf81135e4,Bob Green,2014-08-12 18:20:25+00:00,Bump version - already released 1.0.3,False,2,1,1,,,,443,189,218,11,2.0,66.0508003244248,35.333333333333336,57.0,326.81414438207656,2.336436170212766,1229.2578122227621,68.29210067904233,0.10893804812735886
10,35a65c612c673f936b59ec41052bd06a55bfd370,Bob Green,2015-02-03 16:20:36+00:00,"Bump version

Working toward 1.0.5 release",False,2,1,1,,,,443,189,218,11,2.0,66.0508003244248,35.333333333333336,57.0,326.81414438207656,2.336436170212766,1229.2578122227621,68.29210067904233,0.10893804812735886
11,8ddb4b82753f362629be2c9fc050d7e5e8db1e46,Bob Green,2015-02-03 16:26:44+00:00,"Supply a default interval for constant generator

This is so it’s not strictly required to pass interval to the decorator
definition.",False,2,1,1,,,,443,189,218,11,2.0,66.0508003244248,35.333333333333336,57.0,326.81414438207656,2.336436170212766,1229.2578122227621,68.29210067904233,0.10893804812735886
12,5d7be7c250f0407fce5fcf0e401817b50acf57c4,Bob Green,2015-02-03 16:27:05+00:00,"Improve retry loop stop conditions

Since we’re checking stop conditions within the loop anyway, we don’t
need to supply them to the while statement itself.

Furthermore, we weren’t breaking out of the loop in the on_predicate
case, and therefore we were doing one extra sleep after giving up.",False,9,5,4,0.0,1.0,1.0,444,190,219,11,2.0,66.16013920570806,35.666666666666664,55.0,316.03128121101554,2.43572695035461,1222.4211334030297,67.91228518905719,0.10534376040367184
13,d2d789043768d5816a2aca900f9244bfa7455cbd,Bob Green,2015-02-03 16:37:20+00:00,"Fix 'make docs'

To keep the module docs in sync with the README, the latter is
generated with the docs make target which uses the backoff modules doc
string as markdown source.",False,5,2,3,,,,443,190,219,11,2.0,66.16013920570806,35.666666666666664,55.0,316.03128121101554,2.43572695035461,1222.4211334030297,67.91228518905719,0.10534376040367184
14,7ced33ec10983a4e9059070b8af7fc6b8b7b8219,Bob Green,2015-02-03 19:01:15+00:00,Add missing comma,False,2,1,1,,,,444,190,220,11,2.0,66.16013920570806,35.666666666666664,55.0,316.03128121101554,2.43572695035461,1222.4211334030297,67.91228518905719,0.10534376040367184
15,89c7dfcdb4198656bc21a5b3aae36d2dd7e3b9aa,Bob Green,2015-02-10 16:29:01+00:00,Prepare for 1.0.6 release,False,4,2,2,,,,444,190,220,11,2.0,66.16013920570806,35.666666666666664,55.0,316.03128121101554,2.43572695035461,1222.4211334030297,67.91228518905719,0.10534376040367184
16,c020fc0b560efd34c080f1cb8be2f612d65505a4,Bob Green,2015-02-10 16:33:18+00:00,"Fix string formatting bug logging function call

Previously tuple arguments would cause _invoc_repr to blow up.",False,10,7,3,1.0,0.5,0.5,448,191,222,12,2.0,67.09456073927154,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
17,b8a972181aa69e51fcf6954c64f706db837f907f,Bob Green,2015-02-10 16:51:12+00:00,Prepare for 1.0.7 release,False,4,2,2,,,,448,191,222,12,2.0,67.09456073927154,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
18,7e98d63f738f86d3f27f7c25b65d163924a35275,Bob Green,2015-02-10 16:51:43+00:00,Fix string formatting for python 2.6,False,6,3,3,,,,448,191,222,12,2.0,67.09456073927154,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
19,14b66c88e70f4f6e7f2221c1e6532457aafbf1f6,Bob Green,2015-02-10 17:31:34+00:00,"Bump version

Working toward 1.1 which will incorporate event handler callbacks.",False,4,2,2,,,,448,191,222,12,2.0,67.09456073927154,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
20,24fb04d551d8ac2f5e1d4e04b99617c0889f9d42,Bob Green,2015-02-10 17:32:46+00:00,Improve grammar,False,2,1,1,,,,448,192,223,11,2.0,67.19926320376537,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
21,70d8ccdfb889052312a013d83fd69e76583c7a8e,Bob Green,2015-02-10 17:32:46+00:00,Move helper function down after the good stuff,False,24,12,12,1.0,0.0,1.0,448,192,223,11,2.0,67.19926320376537,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
22,92d00f42303f7c83eba5faa92ffc6ba91b54836b,Bob Green,2015-02-10 17:32:46+00:00,Shorten module description,False,2,1,1,,,,448,192,223,11,2.0,67.19926320376537,34.333333333333336,53.0,301.31004894256074,2.495609756097561,1135.4790990300583,63.08217216833656,0.10043668298085358
23,54d67debda407c93ae56ebeb1fe867592391b873,Bob Green,2015-02-10 17:38:42+00:00,"Add event handler parameters to decorators

This add on_success, on_backoff, and on_giveup keyword arguments to the
decorator functions which allows custom event handlers to be passed in
for each of the event types.

In the process, it refactors the existing internal logging so it is
treated as just another event handler.",False,328,302,26,0.8449612403100775,0.5503875968992248,0.875968992248062,686,288,348,20,1.9285714285714286,63.90882065031591,51.0,79.0,494.7398350322833,2.8338452537662717,1971.0904330629346,109.50502405905193,0.16491327834409444
24,891b63661b1d2e4be8e6801fccd67be1bf130f36,Bob Green,2015-02-10 17:38:42+00:00,Fix up documentation,False,172,88,84,,,,688,288,348,20,1.9285714285714286,63.86348267999961,51.0,79.0,494.7398350322833,2.8338452537662717,1971.0904330629346,109.50502405905193,0.16491327834409444
25,c5114990a8f47e208746e6ab064259b3bc016930,Bob Green,2015-02-10 18:22:07+00:00,Fix tests under python 3,False,4,2,2,,,,688,288,348,20,1.9285714285714286,63.86348267999961,51.0,79.0,494.7398350322833,2.8338452537662717,1971.0904330629346,109.50502405905193,0.16491327834409444
26,3c49d41517743e6716bf57e457290429b366e870,Bob Green,2015-02-12 15:32:46+00:00,Use exclusively new style string formatting,False,8,4,4,,,,688,288,348,20,1.9285714285714286,64.10324189645573,47.333333333333336,73.0,450.84329908591604,2.6511627906976742,1620.0419478917654,90.00233043843143,0.15028109969530534
27,49dc87ce57fa0a97c413125ecb58729b3deb5c60,Bob Green,2015-02-12 15:34:33+00:00,Log on_predicate backoffs as INFO,False,5,3,2,1.0,1.0,1.0,689,290,350,20,1.9285714285714286,64.16959569192724,47.333333333333336,73.0,450.84329908591604,2.6511627906976742,1620.0419478917654,90.00233043843143,0.15028109969530534
28,2ab91eca31e3335a5e61a7c09682ac74f6f4030b,Bob Green,2015-02-13 16:47:33+00:00,Make handlers accept a single details dict param,False,301,203,98,0.0,0.6363636363636364,1.0,788,331,428,22,1.9655172413793103,63.55145624653907,52.333333333333336,82.33333333333333,522.262948312486,2.8843537414965987,1969.8536797561708,109.4363155420095,0.1740876494374953
29,2f6cbb697fdb59665049d2ca6784929e73667ad3,Bob Green,2015-12-08 14:56:04+00:00,Upgrade dev env deps,False,14,7,7,,,,788,331,428,22,1.9655172413793103,63.54934532362603,52.666666666666664,82.33333333333333,522.9877862422953,3.0612244897959187,2156.654157915395,119.8141198841886,0.17432926208076513
30,d35dd5c70ed5a12eb196a4edb32744a8dd98ec5f,Bob Green,2015-12-08 15:01:36+00:00,Drop mock in favor of py.test monkeypatch,False,22,12,10,1.0,1.0,1.0,791,330,427,22,1.9655172413793103,63.575187229802786,52.666666666666664,82.33333333333333,522.9877862422953,3.0612244897959187,2156.654157915395,119.8141198841886,0.17432926208076513
31,664370de0046583523b242b41356de0a8dcfbe8c,Bob Green,2015-12-08 15:24:24+00:00,"Document on_exception can take a tuple of exceptions

Through a happy accident this has always been true, but
this documents it and adds a test to maintain backward
compatibility.",False,41,41,0,1.0,1.0,1.0,822,348,444,22,1.9333333333333333,62.57981891264302,56.0,87.33333333333333,564.039651706349,3.0555555555555554,2280.7261729504876,126.70700960836041,0.18801321723544961
32,9c2a8aed419ed2333573155af114e76e096bf35b,Jonas Cheng,2016-01-26 16:42:54+00:00,"Support AWS jitter algorithms

As described in this blog post:

https://www.awsarchitectureblog.com/2015/03/backoff.html",False,268,250,18,0.23668639053254437,0.9289940828402367,0.9467455621301775,1054,479,609,40,1.9285714285714286,59.27993372797824,88.0,144.33333333333334,1041.9538994178995,4.3994708994708995,6320.60689379178,351.14482743287664,0.34731796647263313
33,40583dccedca6ce82f3b1a11a4780062e9c5cfa7,Jonas Cheng,2016-01-26 16:43:02+00:00,"Move next(wait) outside the try block here.

The reason is in the case that the wait generator (which can
be custom) throws a TypeError for some reason, the error might
be masked.",False,14,8,6,0.0,0.0,1.0,1056,481,611,40,1.9285714285714286,59.30238987923169,87.66666666666667,144.33333333333334,1041.1188343981705,4.44687364813151,6346.167624909678,352.56486805053765,0.34703961146605683
34,e23e6ef0afd08e0c74cc746dd6bc4775e06a8ab1,Bob Green,2016-01-26 16:59:18+00:00,"Make README.md the canonical documentation

Previously, the README was generated from the python module docstring.
The docs are going to expand with some development instructions and
such that really don't belong in the module help.",False,141,2,139,,,,922,481,611,40,1.9285714285714286,60.70980536588571,87.66666666666667,144.33333333333334,1041.1188343981705,4.44687364813151,6346.167624909678,352.56486805053765,0.34703961146605683
35,d3f712d57700f063a3844335431a8e3a0bdb5fc4,Bob Green,2016-01-26 17:02:52+00:00,Tweak + style,False,2,1,1,,,,922,481,611,40,1.9285714285714286,60.70980536588571,87.66666666666667,144.33333333333334,1041.1188343981705,4.44687364813151,6346.167624909678,352.56486805053765,0.34703961146605683
36,791e8f9619ea3a31d298645106c53331e0e2db0d,Bob Green,2016-01-26 17:28:14+00:00,Document new jitter functions,False,26,26,0,,,,948,484,611,40,1.9285714285714286,60.66017830328659,87.66666666666667,144.33333333333334,1041.1188343981705,4.44687364813151,6346.167624909678,352.56486805053765,0.34703961146605683
37,e7b43080fca7cdc2f72e3e54eb15e0b53e949fe7,Bob Green,2016-05-26 07:55:25+00:00,"Remove equal_jitter implementation

This was a comparitively bad algorithm from AWS backoff post, so I
don't think we should expand the API surface with it.",False,52,0,52,0.6451612903225806,0.0,0.0,896,458,581,38,1.9230769230769231,61.672825886878805,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
38,2c4eed884a0df119bbe6e38a0a7e64209a4b3ee3,Bob Green,2016-05-26 07:55:25+00:00,"Rename init_value param to factor

I wasn't quite happy with this kwarg name and want to get it right
before releasing 1.2. I think factor is an improvement and pleasingly
accurate.",False,17,9,8,,,,897,458,581,38,1.9230769230769231,61.67078346821325,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
39,f1379c4d3e8456629016b4e4216603c9596dde0c,Bob Green,2016-05-26 07:55:25+00:00,Expand jitter documentation,False,28,22,6,,,,897,458,581,38,1.9230769230769231,61.67078346821325,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
40,035677a10e7d67866c24a51653ece62deb50e356,Bob Green,2016-05-26 09:08:52+00:00,Prepare 1.2 release,False,6,3,3,,,,897,458,581,38,1.9230769230769231,61.67078346821325,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
41,63e86e37a7f3d0eb06f1c1a13c81016e02bba316,Bob Green,2016-05-27 13:00:17+00:00,Keep width of docstrings in check,False,16,8,8,,,,897,458,581,38,1.9230769230769231,61.67078346821325,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
42,b5ba2455b84a32f23c6283530debb37f4f29860e,Bob Green,2016-05-27 14:54:56+00:00,Update jitter keyword arg documentation,False,20,12,8,,,,901,458,581,38,1.9230769230769231,61.65778886603933,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
43,a4a331fcf69c9b00afafbf9a36192213bc0260c0,Bob Green,2016-05-27 14:55:48+00:00,Fix simple typos,False,4,2,2,,,,901,458,581,38,1.9230769230769231,61.65778886603933,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
44,6f4788eb3bc97604e5dec04889da1c118a8f6c57,Bob Green,2016-05-27 14:57:05+00:00,Prepare for 1.2.1 release,False,7,2,5,,,,898,458,578,38,1.9230769230769231,61.65778886603933,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
45,be95650da8dc3d308e58f2560ef7d65e4670a357,Bob Green,2016-05-27 15:06:25+00:00,Fix tiny typo,False,2,1,1,,,,898,458,578,38,1.9230769230769231,61.65778886603933,79.0,127.33333333333333,897.2139537746315,3.963812744032524,4844.734781325156,269.151932295842,0.2990713179248772
46,f29930ee55b8c55029562a695e439e6dd7eba78d,Bob Green,2016-08-03 15:52:09+00:00,"Remove superfluous is None check

Since tries is always an int, a None-values max_tries will never
be equal so we can skip this check.",False,5,3,2,,,,899,458,578,38,1.9230769230769231,61.80095281428189,77.66666666666667,123.33333333333333,870.6111203901229,3.873109796186719,4612.424532994485,256.24580738858253,0.29020370679670765
47,cc8dc948ac7bbf5f2af3926545285ece8aba1491,Bob Green,2016-08-03 16:20:05+00:00,"Add giveup kwarg for exception inspection

https://github.com/litl/backoff/issues/11
https://github.com/litl/backoff/issues/8",False,45,43,2,1.0,1.0,0.9375,923,470,592,38,1.9,61.47659152098327,79.66666666666667,126.0,893.501779715972,4.029976909120897,5110.390148540803,283.9105638078224,0.29783392657199065
48,ce9d114ecc14ee7d9c2506c8f1a8c913ea5c6cc6,Bob Green,2016-08-08 13:46:59+00:00,"Support runtime configuration with optionally callable kwargs

This makes the max_tries kwarg on on_exception and on_predicate
optionally accept a callable to be evaluated at runtime rather
than a fixed value.

Similarly, wait_gen_kwargs also optionally accept callables to be
evaluated before passing into the wait_gen. This means that all
current kwargs on backoff.expo, backoff.fibo, backoff.constant now
accept callables, and also that all future and user-space wait
generators will as well.

This addresses https://github.com/litl/backoff/issues/10",False,115,105,10,0.9047619047619048,0.9047619047619048,0.9523809523809523,987,500,629,43,1.8604651162790697,60.80530707319756,81.0,129.0,919.0883976620465,4.045172469374598,5284.534378236636,293.5852432353687,0.30636279922068216
49,1324f301ba4d6b7d97c9dcc36468fdab8c861cbe,Bob Green,2016-08-08 17:29:39+00:00,Prepare 1.3.0 release,False,21,17,4,1.0,1.0,1.0,992,503,632,43,1.8409090909090908,60.80530707319756,81.0,129.0,919.0883976620465,4.045172469374598,5284.534378236636,293.5852432353687,0.30636279922068216
50,e20b979da030a893b6b141819219884d3f5f276e,Bob Green,2016-08-08 17:53:26+00:00,Include README.rst in source distribution,False,9,7,2,,,,992,503,632,43,1.8409090909090908,60.80530707319756,81.0,129.0,919.0883976620465,4.045172469374598,5284.534378236636,293.5852432353687,0.30636279922068216
51,a0d7430ca6bd9200fd936bce9511de7cb6b372ea,Bob Green,2016-09-14 20:36:29+00:00,"Don't log retried args and kwargs by default

This behavior, while convenient for debugging in some cases, has the
potential to leak sensitive information. It's not a good default.

The full details of the function invocation are still available in the
on_backoff and on_giveup handlers, so this information can still be
logged by way of custom handlers.

This addresses: https://github.com/litl/backoff/issues/16",False,21,4,17,0.0,1.0,0.0,979,497,623,42,1.744186046511628,61.232020438598106,79.0,126.0,897.0432285740768,3.8465909090909087,5043.382750111077,280.18793056172655,0.29901440952469227
52,31968ccad016a0cf0b2792f2741005cd82062b18,Bob Green,2016-11-18 14:53:30+00:00,Prepare 1.3.2 release,False,11,8,3,,,,979,497,623,42,1.744186046511628,61.232020438598106,79.0,126.0,897.0432285740768,3.8465909090909087,5043.382750111077,280.18793056172655,0.29901440952469227
53,28ab7011cc3c2534affb7ec899bbeea9dc767dc9,Bob Green,2017-01-22 19:40:19+00:00,Refactor a function that gets next jittered wait time,False,37,17,20,1.0,1.0,0.0,965,492,605,39,1.7826086956521738,61.10745986885228,78.66666666666667,124.0,884.9460568822856,3.7490299334811525,4927.300730790358,273.7389294883532,0.29498201896076187
54,9c2d47651eb2959685120f65e4aff9283d2e5314,Bob Green,2017-01-22 19:40:19+00:00,Refactor a wait generator init helper func,False,27,14,13,1.0,1.0,1.0,980,500,625,41,1.75,61.150589231994786,79.0,126.0,897.0432285740768,3.8465909090909087,5043.382750111077,280.18793056172655,0.29901440952469227
55,bc12d60ef38564702894bedc8190fdfd07660340,Bob Green,2017-01-22 19:40:19+00:00,Refactor a handler calling function,False,60,24,36,1.0,1.0,0.0,968,496,609,41,1.7555555555555555,61.051560596876136,79.0,126.0,897.0432285740768,3.8465909090909087,5043.382750111077,280.18793056172655,0.29901440952469227
56,f886ca52ae662cf06d97e5796c693fd58f10c183,Bob Green,2017-01-23 23:12:17+00:00,"Convert backoff to a package

This is the first step in making room for forthcoming async support.",False,6,3,3,,,,965,492,605,39,1.7826086956521738,61.10745986885228,78.66666666666667,124.0,884.9460568822856,3.7490299334811525,4927.300730790358,273.7389294883532,0.29498201896076187
57,05b918f8cd0ccef14fd007d41c49fc46cb4e8ddf,Bob Green,2017-01-23 23:12:23+00:00,"Refactor into submodules

This lays more groundwork for an async implementation which
is only compatible with Python >= 3.4.",False,750,403,347,1.0,1.0,0.125,1021,510,645,45,1.75,75.17328540189432,30.25,46.5,316.5927235442129,1.9459438131313131,1658.2254716239459,92.12363731244143,0.10553090784807097
58,fe60a13cec11f48b4ad18b0b9164d22fc28b089d,Bob Green,2017-01-25 02:03:18+00:00,Add stub for Python >= 3.4 async implementation,False,58,50,8,1.0,1.0,0.6153846153846154,1063,531,672,54,1.72,74.93602424039968,27.77777777777778,42.666666666666664,285.4157542615226,1.8778759820426485,1479.3115303323964,82.18397390735535,0.09513858475384086
59,2d0f29ada3a2dfb7b79a9f5132c9d6db4109bbde,Vladimir Rutsky,2017-01-25 08:26:09+00:00,implement async version of backoff decorators,False,876,847,29,0.4674657534246575,0.9606164383561644,0.9383561643835616,1881,1023,1258,98,1.6627906976744187,66.84788587146181,45.9,71.7,498.82286103359166,2.7033057220557217,2776.0295628295776,154.2238646016432,0.1662742870111972
60,4c75a7a1610f22a663deb2a6be7f815c62d80e59,Bob Green,2017-01-27 02:10:43+00:00,"Make 'check' target work across all platforms

- Add custom ""no pragma"" for 3.4 only coverage
- Conditional pep8 checks by python version
- Switch to flake8 (skip check for < 2.7)",False,45,36,9,,,,1881,1023,1258,100,1.6627906976744187,66.79593309207127,45.9,71.7,498.82286103359166,2.7033057220557217,2776.0295628295776,154.2238646016432,0.1662742870111972
61,00813103991b9f7bb3226437863e7c0b62a83072,Bob Green,2017-01-27 02:17:47+00:00,"Remove dummy asserts

pyflakes wanted these. flake8 is okay without them.",False,9,0,9,,,,1872,1016,1251,99,1.6627906976744187,66.79593309207127,45.9,71.7,498.82286103359166,2.7033057220557217,2776.0295628295776,154.2238646016432,0.1662742870111972
62,43ef9f5164e80b4f0224b4f669a18397d779f7cf,Bob Green,2017-02-05 13:04:23+00:00,"Extract common helper funcs to common module

- make tests a module
- implements shared tests helper funcs only once",False,74,28,46,0.0,0.0,0.0,1854,1005,1240,97,1.6785714285714286,72.27403459260366,38.25,59.75,415.68571752799306,2.252754768379768,2313.357969024648,128.519887168036,0.13856190584266434
63,3f7967db7b66d68b4e0cdf8870d48c1bce858869,Bob Green,2017-02-05 13:06:10+00:00,Remove stray unused tests,False,32,0,32,0.0,0.0,0.16666666666666666,1822,983,1218,95,1.6951219512195121,72.44427706737667,36.583333333333336,57.25,393.07561521641856,2.2583927441030274,2193.680290936359,121.87112727424217,0.13102520507213952
64,4590738706da8c00de916f499771499713f13f75,Bob Green,2017-02-05 13:08:37+00:00,"Move jitter tests to separate file

No need to implement this set twice between sync and async.",False,26,10,16,0.0,0.0,0.0,1816,978,1213,96,1.6790123456790123,74.19797153020629,33.69230769230769,52.38461538461539,355.96100093073676,2.184054819750177,1973.2150748447302,109.62305971359613,0.11865366697691225
65,50c5cb409b83372fa6c2ea697607154ae5450394,Bob Green,2017-02-05 13:18:36+00:00,"Move python 3.4+ tests to subdir

This prepares for some refactoring sharing more code between the sync
and async versions of the tests.",False,4,2,2,,,,1816,978,1213,96,1.6790123456790123,74.19797153020629,33.69230769230769,52.38461538461539,355.96100093073676,2.1840548197501763,1973.2150748447307,109.62305971359613,0.11865366697691225
66,826bbe08c95729835ef5bb490081ed5b5499bbcf,Bob Green,2017-02-05 13:22:33+00:00,Share wait_gen test funcs between sync and async,False,155,53,102,0.0,0.0,0.0,1767,944,1179,97,1.643835616438356,73.60635679017548,29.357142857142858,45.42857142857143,289.8447917913525,2.153622322335472,1555.3425309100446,86.40791838389137,0.0966149305971175
67,04ae83ef59b4cab862384df0cbbe0d2df133fe8a,Bob Green,2017-02-05 13:52:08+00:00,Prepare 1.4.0 release,False,11,9,2,,,,1767,944,1179,97,1.643835616438356,73.60635679017548,29.357142857142858,45.42857142857143,289.8447917913525,2.153622322335472,1555.3425309100446,86.40791838389137,0.0966149305971175
68,a460156f9d40b015b2025e7c12497d1180a70303,Vladimir Rutsky,2017-04-20 15:28:48+00:00,fix checking for running sync version in coroutine in case when event loop is not set,False,153,139,14,0.8958333333333334,0.4583333333333333,1.0,1892,1039,1270,103,1.6103896103896105,73.26595107812624,31.357142857142858,49.285714285714285,322.46330138533006,2.1639682539682537,1767.5060322878178,98.19477957154542,0.10748776712844335
69,909c39bb5d6c42ca4eefff71f3113135a54aadd3,Bob Green,2017-04-21 14:05:08+00:00,Expose __version__ at module root,False,14,10,4,,,,1898,1043,1274,103,1.6103896103896105,72.07617785929752,31.571428571428573,49.5,322.8029362069132,2.1996825396825392,1767.6758496986092,98.20421387214495,0.10760097873563772
70,9642ee668d5b7dde212067ad84ab185679edf181,Quentin Pradet,2017-04-25 06:05:44+00:00,"Use documented logger name

Commit 05b918f (""Refactor into submodules"", 2017-01-23) moved the logger
declaration from __init__ to _common. As a result, the logger name is no
longer backoff but backoff._common. This commit set its back to
backoff as documented.",False,2,1,1,,,,1898,1043,1274,103,1.6103896103896105,72.07617785929752,31.571428571428573,49.5,322.8029362069132,2.1996825396825392,1767.6758496986092,98.20421387214495,0.10760097873563772
71,6b57cccb07fe29e7c3e49c94d126673ee627e10f,Bob Green,2017-04-25 16:12:36+00:00,Prepare 1.4.2 release,False,8,7,1,,,,1898,1043,1274,103,1.6103896103896105,72.07617785929752,31.571428571428573,49.5,322.8029362069132,2.1996825396825392,1767.6758496986092,98.20421387214495,0.10760097873563772
72,34a716e223e6cd9979a31ab29e51ba25f1fa9c0e,Bob Green,2017-05-22 16:23:19+00:00,Prepare 1.4.3 release,False,7,6,1,,,,1898,1043,1274,103,1.6103896103896105,72.07617785929752,31.571428571428573,49.5,322.8029362069132,2.1996825396825392,1767.6758496986092,98.20421387214495,0.10760097873563772
73,3b82e87bd56ebd8486829cdf069e8c1854160377,Bob Green,2018-03-30 11:50:33+00:00,"Add max_time keyword argument

This addresses https://github.com/litl/backoff/issues/43

The core issue is that with `full_jitter`, `max_tries` is no longer a
reliable way to control the total retry time. This adds a similar
`max_time` keyword argument which triggers a giveup after a total
elapsed amount of time rather than a set number of retries.

Further, since full_jitter is actually the default behavior, you
probably generally want to use `max_time` rather than `max_tries` so
this updates the examples in the README to show that.",False,261,204,57,0.14563106796116504,0.0,0.8446601941747572,2025,1133,1377,104,1.6153846153846154,70.58283011579469,34.57142857142857,55.0,356.7175462682335,2.7456047843665767,2012.1837857748903,111.78798809860503,0.1189058487560778
74,9903416c39d16b2e0b52e07810d0499341125975,Bob Green,2018-03-30 11:50:33+00:00,"Implement timedelta total_seconds() for python 2.6

Python 2.6's timedelta doesn't have total_seconds() so we implement
our own here.

It keeps being just easy enough to keep python 2.6 support...",False,21,15,6,1.0,1.0,1.0,2034,1135,1382,106,1.6075949367088607,70.4525571904105,35.92857142857143,56.92857142857143,369.4005697392248,2.86346192722372,2099.2669336256317,116.62594075697953,0.12313352324640826
75,88c9ec803366bd092d88acaed699203359a129a3,Bob Green,2018-04-11 14:51:16+00:00,Prepare 1.5.0 release,False,7,6,1,,,,2034,1135,1382,106,1.6075949367088607,70.4525571904105,35.92857142857143,56.92857142857143,369.4005697392248,2.86346192722372,2099.2669336256317,116.62594075697953,0.12313352324640826
76,d4ea3098441dc92b883544cd104662bebb0f58a9,Marek Łabonarski,2018-05-21 07:57:23+00:00,Change log level on backoff retry,False,3,1,2,0.0,0.0,0.0,2033,1134,1381,106,1.6075949367088607,70.4733549822876,35.92857142857143,56.92857142857143,369.4005697392248,2.86346192722372,2099.2669336256317,116.62594075697953,0.12313352324640826
77,61f2104433104cd08b971bf1466d36b0e4a8acf3,Marek Łabonarski,2018-05-24 08:31:12+00:00,Configure logger level,False,2,1,1,,,,2033,1134,1381,106,1.6075949367088607,70.4733549822876,35.92857142857143,56.92857142857143,369.4005697392248,2.86346192722372,2099.2669336256317,116.62594075697953,0.12313352324640826
78,b0705256dbd0ca9b97e670a24b84a9f73bf1d4df,Bob Green,2018-07-14 13:27:11+00:00,Prepare 1.6.0 release,False,8,7,1,,,,2033,1134,1381,106,1.6075949367088607,70.4733549822876,35.92857142857143,56.92857142857143,369.4005697392248,2.86346192722372,2099.2669336256317,116.62594075697953,0.12313352324640826
79,11c3714570ff09574118faca82e091334c490174,Hugo,2018-09-25 20:03:23+00:00,Drop support for EOL Python 2.6,False,19,7,12,0.0,0.0,0.0,2029,1128,1379,105,1.6103896103896105,70.56116228736464,35.714285714285715,56.714285714285715,367.7900529266823,2.8245963810052324,2078.027623276578,115.445979070921,0.12259668430889412
80,e0bc48976c88bda4c90026aa37e9c76351f6bb85,Hugo,2018-09-26 05:26:17+00:00,No need for custom implementation of total_seconds(),False,23,8,15,0.0,0.0,0.0,2022,1128,1376,103,1.618421052631579,70.6783178267787,34.357142857142854,54.785714285714285,355.2807489064276,2.706715895477688,2001.0301611304915,111.16834228502731,0.11842691630214253
81,13984c05831b23fdbb2b4c07c8e14439fe60274c,Hugo,2018-09-26 05:35:02+00:00,Upgrade Python syntax with pyupgrade https://github.com/asottile/pyupgrade,False,14,7,7,,,,2022,1129,1376,103,1.618421052631579,71.8909993307973,34.142857142857146,54.57142857142857,354.9411140848445,2.671001609763402,2000.8603437197,111.15890798442777,0.11831370469494816
82,0586926b58792c3c638acf4985adad1ff1aaa25b,Hugo,2018-09-26 05:46:52+00:00,Add python_requires to help pip,False,1,1,0,,,,2023,1129,1377,103,1.618421052631579,71.8909993307973,34.142857142857146,54.57142857142857,354.9411140848445,2.671001609763402,2000.8603437197,111.15890798442777,0.11831370469494816
83,0899e09cad719594e5a708c44dd78db97de15253,Hugo,2018-09-26 06:53:14+00:00,flake8,False,5,2,3,0.0,0.0,0.0,2022,1129,1376,103,1.618421052631579,71.90235244437692,34.142857142857146,54.57142857142857,354.9411140848445,2.671001609763402,2000.8603437197,111.15890798442777,0.11831370469494816
84,620880f61f46a814daf1321ab75c94fc47c20348,Bob Green,2018-11-12 22:02:54+00:00,"Support python 3.7; drop async python 3.4

To maintain async python 3.4 support we'd have to fork the
implementations like we did for sync vs async.  The maintenance
burden for doing that would be high and I think it's more
important that we support 3.7 than that we support async 3.4.

Note that syncronous 3.4 is still supported.",False,285,126,159,1.0,0.7142857142857143,0.09523809523809523,2005,1109,1354,103,1.6538461538461537,71.76866129597099,34.857142857142854,55.42857142857143,359.90538219540815,2.678354550939873,2012.9988405176107,111.83326891764503,0.11996846073180271
85,edb8e3a75e2c9b797e7dc89b1477cc4240e98d14,Bob Green,2018-11-23 14:29:36+00:00,"Add smoke tests

This adds a framework for writing smoke tests which require network.

These tests are not included in `make check` and that is the target
which will continue to be run in travis. However `make supercheck`
may be run by developers locally as an extra check.",False,141,138,3,0.2127659574468085,1.0,1.0,2129,1180,1453,103,1.6219512195121952,69.27347510564925,32.25,51.125,324.91151609138336,2.410867924380081,1766.7555351985102,98.15308528880611,0.1083038386971278
86,5e2d76233c987293cee5b40efb9c9ef4f3efff7f,Bob Green,2018-11-23 16:11:59+00:00,Refactor smoke tests to use pytest marker,False,27,13,14,,,,2131,1183,1456,103,1.6219512195121952,69.22325511368638,32.25,51.125,324.91151609138336,2.4108679243800815,1766.7555351985102,98.1530852888061,0.10830383869712779
87,9804de19a0b74542864267a85eb4a5395eca13a9,Bob Green,2018-11-23 19:48:38+00:00,"Revert ""Refactor smoke tests to use pytest marker""

This reverts commit 5e2d76233c987293cee5b40efb9c9ef4f3efff7f.",False,27,14,13,,,,2129,1180,1453,103,1.6219512195121952,69.27347510564925,32.25,51.125,324.91151609138336,2.410867924380081,1766.7555351985102,98.15308528880611,0.1083038386971278
88,dd23fbfebb185fdc539f70410769dce7011bed35,Bob Green,2018-11-23 19:48:45+00:00,"Revert ""Add smoke tests""

This reverts commit edb8e3a75e2c9b797e7dc89b1477cc4240e98d14.",False,141,3,138,0.7872340425531915,0.0,0.0,2005,1109,1354,103,1.6538461538461537,71.76866129597099,34.857142857142854,55.42857142857143,359.90538219540815,2.678354550939873,2012.9988405176107,111.83326891764503,0.11996846073180271
89,8d202531ba0096da7a335941891fc0af1e29e63b,Bob Green,2018-11-23 21:01:49+00:00,Use poetry for 1.7.0 release,False,108,50,58,0.0,0.0,0.0,1955,1099,1314,102,1.6623376623376624,69.59701985719951,37.53846153846154,59.69230769230769,387.59041159505495,2.884381824089094,2167.8449051728117,120.43582806515619,0.1291968038650183
90,be0b856a826a0201501ab95f666167365e681097,Bob Green,2018-11-27 20:57:25+00:00,Fix pyproject.toml keywords,False,6,3,3,,,,1955,1099,1314,102,1.6623376623376624,69.59701985719951,37.53846153846154,59.69230769230769,387.59041159505495,2.884381824089094,2167.8449051728117,120.43582806515619,0.1291968038650183
91,742486ff5a2c514f24c82b076d38ad90c2bbb2be,Bob Green,2018-11-27 22:00:17+00:00,"Give up on StopIteration exception

Since wait times are defined by generators, it makes sense that if
a generator runs out of values that would imply giving up.  Since
all the built in generators are infinite this hasn't come up before,
but it should be possible to define a custom generator that yields a
finite number of values and implicitly triggers a giveup once it is
exhausted.",False,27,21,6,0.0,0.0,1.0,1970,1115,1329,102,1.6623376623376624,69.3807924329339,37.53846153846154,59.69230769230769,387.59041159505495,2.884381824089094,2167.8449051728117,120.43582806515619,0.1291968038650183
92,cb235b0025f800c5c883f36e9b0fa1e0e843efed,Bob Green,2018-11-27 22:00:42+00:00,"Support iterable intervals in constant wait gen

https://github.com/litl/backoff/pull/49 suggested the same thing by
way of a new built in wait generator, but I think it makes sense
to extend the constant wait generator to do the same thing, taking
advantage of give up on StopIteration.",False,125,122,3,0.13043478260869565,1.0,1.0,2089,1182,1420,102,1.6666666666666667,68.93338721973372,39.84615384615385,63.23076923076923,419.2544010528566,2.873736043931277,2335.6727502873046,129.75959723818363,0.13975146701761887
93,7fbae2599ad38c49137ca2abd574048d220c1f9c,Bob Green,2018-11-29 01:00:55+00:00,"Support custom loggers

This adds a `logger` kwarg to both decorators.  This allows the user
to specify an alternative logger to use for the backoff and giveup
events. This logger can be specified either as a string name or as a
Logger object.

In addition, the default logging can be disabled entirely by
specifying logger=None.  In this case, a user could specify their own
alterative logging behavior by way of event handlers.

This should address multiple issues that have been filed around making
logging more customizable, including:

https://github.com/litl/backoff/issues/37
https://github.com/litl/backoff/issues/50
https://github.com/litl/backoff/issues/52",False,212,158,54,0.8450704225352113,0.8450704225352113,0.8873239436619719,2193,1256,1489,113,1.6705882352941177,68.9378088538105,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
94,a469847e4bd17666e50cd6c987a790092554f482,Bob Green,2018-11-29 01:38:49+00:00,Use basestring for 2.7 and 3.x compatibility,False,11,9,2,,,,2200,1260,1493,115,1.6705882352941177,68.90399237879264,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
95,c0dafcf901ef005f0b8e9f0aa9958c46cc8fc865,Bob Green,2018-12-15 16:54:22+00:00,Replace deprecation comment with warning,False,224,122,102,0.0,0.8421052631578947,0.631578947368421,2109,1185,1439,100,1.6666666666666667,68.6744739605411,39.84615384615385,63.23076923076923,419.2544010528566,2.873736043931277,2335.6727502873046,129.75959723818363,0.13975146701761887
96,f1c05b2d03da48e14889003bdb6f619b6980b94d,Bob Green,2018-12-21 05:19:56+00:00,Prepare 1.8.0 release,False,4,2,2,,,,2220,1263,1512,113,1.6705882352941177,68.71990722468905,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
97,229d30adce4128f093550a1761c49594c78df4b4,Bob Green,2019-01-26 00:13:09+00:00,Remove outdated comment,False,1,0,1,,,,2219,1263,1512,112,1.6705882352941177,68.67768401454914,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
98,23d5369e3c77755f8f0e28631b7b24a2a29587af,Lee Bernick,2019-10-04 15:52:02+00:00,Update _common.py,False,20,10,10,,,,2219,1263,1512,112,1.6705882352941177,68.67768401454914,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
99,ec9419931fd952249daaf9d400fee592d3ed8ebc,Bob Green,2019-10-11 13:05:31+00:00,Prepare for 1.8.1 release,False,4,2,2,,,,2219,1263,1512,112,1.6705882352941177,68.67768401454914,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
100,4ccb6c32fd985bd1eabcefa9d8ba190203b0264b,Bob Green,2019-11-16 13:16:36+00:00,"Remove asyncio.coroutine references

These generate a warning in python 3.8 and were only required for python
3.4. Python 3.4 has been end of lifed.",False,42,24,18,1.0,1.0,1.0,2225,1254,1517,113,1.6627906976744187,68.67575700325952,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
101,80de0ae6df4ceed3deb32baf599dd0d9315ef024,Bob Green,2019-11-16 13:19:44+00:00,Prepare 1.9.0 release,False,5,3,2,,,,2225,1254,1517,113,1.6627906976744187,68.67575700325952,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
102,61f0a799fab19b3a3e5664ef74e0236e24d40548,Bob Green,2019-11-19 01:55:05+00:00,Prepare 1.9.1 release,False,9,7,2,,,,2225,1254,1517,113,1.6627906976744187,68.67575700325952,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
103,c1f5b2ee7344905083d7c0804363108fb8e887f6,Bob Green,2019-11-20 02:26:37+00:00,Bump version,False,4,2,2,,,,2225,1254,1517,113,1.6627906976744187,68.67575700325952,40.76923076923077,64.53846153846153,432.0415002339301,2.8612496572055397,2401.424171597422,133.41245397763456,0.14401383341131005
104,5d714ccdac49aada0f30fc73117ef4225ca4c8e2,Bob Green,2019-12-02 23:45:05+00:00,"Allow sync decorator call from async function

https://github.com/litl/backoff/issues/83",False,64,0,64,0.27906976744186046,1.0,0.0,2161,1219,1474,105,1.646341463414634,68.94882819617789,39.38461538461539,62.69230769230769,420.34904292388603,2.740502629297386,2267.6700701543864,125.98167056413257,0.14011634764129535
105,0777a0f1d184e03455a1eddf978043163f94b47d,Bob Green,2019-12-07 21:03:37+00:00,Prepare 1.10.0 release,False,9,7,2,,,,2161,1219,1474,105,1.646341463414634,68.94882819617789,39.38461538461539,62.69230769230769,420.34904292388603,2.740502629297386,2267.6700701543864,125.98167056413257,0.14011634764129535
106,915001e0e46fef2cf1e6b1c78614d0254b9db21e,Mike Royal,2020-03-07 19:13:10+00:00,Fix spelling of exponential in pydoc,False,2,1,1,,,,2161,1219,1474,105,1.646341463414634,68.94882819617789,39.38461538461539,62.69230769230769,420.34904292388603,2.740502629297386,2267.6700701543864,125.98167056413257,0.14011634764129535
107,891bdeceff7dab9bd44281dbebab7765474ab09e,Tim Gates,2020-12-31 01:42:59+00:00,"docs: fix simple typo, alloted -> allotted

There is a small typo in backoff/_common.py.

Should read `allotted` rather than `alloted`.",False,2,1,1,,,,2161,1219,1474,105,1.646341463414634,68.94882819617789,39.38461538461539,62.69230769230769,420.34904292388603,2.740502629297386,2267.6700701543864,125.98167056413257,0.14011634764129535
108,dfc80b291d970ee312fff7426fc728dc94514185,Dmitry Ryzhikov,2021-01-04 14:22:18+00:00,"Make logging level for backoff and give up events configurable (#99)

Make backoff and give up event log levels configurable",False,160,136,24,0.391304347826087,0.6956521739130435,0.0,2273,1254,1565,105,1.686046511627907,68.85317465449067,40.46153846153846,65.0,439.82296225741425,2.802180597271541,2516.3919173308263,139.7995509628237,0.14660765408580476
109,9e895b4ccb427d95886f95cd93d0a2122faaf3ac,Andrew Eckart,2021-02-22 14:38:20+00:00,Fix typo in docstring (#117),False,2,1,1,,,,2273,1254,1565,105,1.686046511627907,68.85317465449067,40.46153846153846,65.0,439.82296225741425,2.802180597271541,2516.3919173308263,139.7995509628237,0.14660765408580476
110,7438a6343160e1e534ddaf5565a4a84199d7d559,Bob Green,2021-07-12 16:39:09+00:00,Deprecate python 2.7 support,False,15,13,2,,,,2284,1258,1573,106,1.686046511627907,68.85317465449067,40.69230769230769,65.23076923076923,440.1887228345037,2.8406421357330793,2516.5747976193716,139.80971097885396,0.14672957427816793
111,a2d0b627b99f3564933839137752a68cbd9f573a,Bob Green,2021-07-12 17:56:33+00:00,Drop python 2.7 support,False,122,42,80,1.0,0.0,0.0,2254,1247,1558,96,1.686046511627907,70.19079705498808,39.84615384615385,64.07692307692308,437.0537314881835,2.699616494707439,2512.6996096385187,139.5944227576955,0.1456845771627278
112,b80e4ded4c65d8b03f7463db003f6aa4ad0b9b4a,Bob Green,2021-07-12 17:56:35+00:00,Add type hints for public API,False,101,66,35,0.0,1.0,0.23846153846153847,2285,1260,1585,99,1.686046511627907,72.33188984784981,37.0,59.5,405.8356078104561,2.5067867450854786,2333.22106609291,129.62339256071724,0.13527853593681868
113,a1dba6e564304c7452cdcf84c969517b075c156b,Bob Green,2021-07-12 17:56:35+00:00,Update __init__.py,False,2,1,1,,,,2285,1260,1585,99,1.686046511627907,72.33188984784981,37.0,59.5,405.8356078104561,2.5067867450854786,2333.22106609291,129.62339256071724,0.13527853593681868
114,39edc855af320e9cab3e20d33e2ff9d67ad55bbe,Bob Green,2021-07-12 18:04:09+00:00,Remove unused imports,False,3,0,3,,,,2282,1258,1583,99,1.686046511627907,72.33188984784981,37.0,59.5,405.8356078104561,2.5067867450854786,2333.22106609291,129.62339256071724,0.13527853593681868
115,24e78de1e7b2beab462af8a96889168afa2b5f01,Bob Green,2021-07-12 18:26:39+00:00,Require keyword args names,False,2,2,0,0.0,1.0,0.0,2284,1258,1585,99,1.686046511627907,72.33188984784981,37.0,59.5,405.8356078104561,2.5067867450854786,2333.22106609291,129.62339256071724,0.13527853593681868
116,e2519713d9f0aa24e8b8a6f51a1ce11f3f1d3cd3,Bob Green,2021-07-12 18:27:54+00:00,Used named kwargs in sync/async implementations,False,37,29,8,0.19047619047619047,1.0,0.8095238095238095,2305,1258,1606,99,1.686046511627907,72.31667973652114,37.0,59.5,405.8356078104561,2.5067867450854786,2333.22106609291,129.62339256071724,0.13527853593681868
117,6cf3cd121e4d26bf65b6ecbd5ad3e98f5301875b,Bob Green,2021-07-12 19:02:20+00:00,Require named kwargs for config handler helper,False,22,17,5,0.0,1.0,1.0,2317,1258,1618,99,1.686046511627907,72.31667973652114,37.0,59.5,405.8356078104561,2.5067867450854786,2333.22106609291,129.62339256071724,0.13527853593681868
118,be3a4b457689a6b3969acb1f73ff691cd6471636,Bob Green,2021-07-12 19:07:44+00:00,Remove python3 specific tests dir,False,0,0,0,,,,2317,1258,1618,99,1.686046511627907,72.31667973652114,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
119,b1cbbb5baf733d84c4f19a2d1322050855a26bd6,Bob Green,2021-07-12 19:13:30+00:00,Use nonlocal for variable names from outer function,False,35,21,14,0.0,0.0,1.0,2324,1260,1620,101,1.686046511627907,72.60837119965748,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
120,751fb5e6b5cbea6ab5d9784e13caa009b296dba7,Bob Green,2021-07-12 19:20:38+00:00,Require named kwargs in call_handlers helpers,False,73,50,23,0.1111111111111111,0.1111111111111111,0.8888888888888888,2351,1264,1647,101,1.686046511627907,72.46221765681464,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
121,b2292a8bef9d170ec8d11131cfe28fa0d4d5ba0f,Leonhard S,2021-07-13 08:31:56+00:00,"Use explicit optional types for arguments

This was permitted in older versions of PEP484 but is no longer allowed.",False,22,11,11,,,,2351,1264,1647,101,1.686046511627907,72.46221765681464,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
122,af179d48c787d6d5464faa02ba6c20060a4797bc,Leonhard S,2021-07-13 08:33:58+00:00,"Fully type decorator return values

This ensures the type information of the decorated function is preserved through the decorator.",False,8,5,3,,,,2353,1265,1649,101,1.686046511627907,72.46221765681464,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
123,75b7e88571538c3357c117b171b5ae97710287cb,Leonhard S,2021-07-13 08:47:56+00:00,"Complete Handler argument type

Some type checkers like Pyright may complain that ""dict"" on its own is not a complete type; this silences these warnings.",False,4,2,2,,,,2353,1265,1649,101,1.686046511627907,72.46221765681464,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
124,4a4b5658abc1c168c75731c842379f1e06ac662a,Bob Green,2021-07-14 14:03:26+00:00,Prepare v1.11.1 release,False,9,7,2,,,,2353,1265,1649,101,1.686046511627907,72.46221765681464,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
125,36ba667cf58cb98d16f592b898ca9ad45a8255cb,Leonhard S,2021-07-14 17:36:27+00:00,Add decorator-specific detail and handler types,False,71,61,10,,,,2404,1299,1675,102,1.6629213483146068,71.57779817187058,37.214285714285715,59.714285714285715,406.17524263203916,2.5425010307997646,2333.390883503702,129.63282686131677,0.13539174754401304
126,d557a2633a8e6723c30d10f321fdf3bfb3b551fe,Leonhard S,2021-07-14 17:37:03+00:00,Reimport user-visible types to `.types`,False,2,2,0,,,,2406,1300,1676,103,1.6629213483146068,73.47261162707922,34.733333333333334,55.733333333333334,379.09689312323655,2.37300096207978,2177.8314912701217,120.99063840389564,0.12636563104107884
127,d1fa8ee9d9ab394a1cabac281541035eb0ddf114,Leonhard S,2021-07-14 20:07:13+00:00,Fix handler-specific details types,False,90,72,18,,,,2460,1308,1685,104,1.6483516483516483,72.86695150351885,34.733333333333334,55.733333333333334,379.09689312323655,2.37300096207978,2177.8314912701217,120.99063840389564,0.12636563104107884
128,36f0e1fe3fe6eec1960fde2baf97510050983dea,Leonhard S,2021-07-14 21:04:39+00:00,"Use TypedDict dummy in place of recasts

Mypy's --allow-redefinition flag does not yet work with classes. There are workarounds that trick Mypy, but this leaves Pylance with a Union between Dict[str, Any] and the actual TypedDict subclass, which makes any function annotated with this type incompatible with the required handler signature.

This solution always uses the TypedDict subclass, but reassigns the TypedDict name to equal the featureless ""object"" instead. That way inheritance works as intended and no typing_extensions dependency is required.",False,176,89,87,,,,2462,1304,1681,102,1.6483516483516483,72.83775163264302,34.733333333333334,55.733333333333334,379.09689312323655,2.37300096207978,2177.8314912701217,120.99063840389564,0.12636563104107884
129,cd50fbe3b480db64d538e0573e678d4f2d273580,Leonhard S,2021-07-17 12:06:48+00:00,"Revert ""Use TypedDict dummy in place of recasts""

This reverts commit 36f0e1fe3fe6eec1960fde2baf97510050983dea.",False,176,87,89,,,,2460,1308,1685,104,1.6483516483516483,72.86695150351885,34.733333333333334,55.733333333333334,379.09689312323655,2.37300096207978,2177.8314912701217,120.99063840389564,0.12636563104107884
130,e0cd03e5bdf49fa19a9e4be4018a73514015c5ca,Leonhard S,2021-07-17 12:13:54+00:00,"Revert to single-dict type with optional keys

The additional mixed-in types added too much complexity and maintenance effort while still requiring the user to be aware of use-case specific keys.",False,122,22,100,,,,2382,1291,1671,104,1.6704545454545454,72.91466454830545,34.733333333333334,55.733333333333334,379.09689312323655,2.37300096207978,2177.8314912701217,120.99063840389564,0.12636563104107884
131,c788884c7207499ec170d9401f5f9d46b7c9b0dc,mrname,2021-07-18 14:04:29+00:00,test failing due to missing kwarg,False,9,7,2,0.0,1.0,1.0,2358,1269,1654,101,1.697674418604651,72.44404712358394,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
132,3837f14b6dcaea8cf4759c5812435dd097679f4b,mrname,2021-07-18 14:24:53+00:00,passing test for sync raise_on_giveup,False,15,11,4,0.0,0.5714285714285714,0.5714285714285714,2365,1272,1659,101,1.697674418604651,72.40875851926864,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
133,48378904e1f31010cdee0e2d539cce0b837d4da4,mrname,2021-07-18 14:28:27+00:00,passing raise_on_giveup for async handler,False,20,14,6,0.0,0.5714285714285714,1.0,2373,1279,1667,101,1.7093023255813953,72.354692418224,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
134,c2feb757893c2e92c53d114944848d51363f3e85,mrname,2021-07-18 14:37:47+00:00,more docs and shorten raise_on_giveup code,False,10,6,4,1.0,1.0,0.0,2371,1277,1665,101,1.7093023255813953,72.37726483167982,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
135,0c151d552ea76b23cf3108060cd96b3e64afb6a7,mrname,2021-07-25 13:43:10+00:00,return None instead of handler result,False,8,4,4,,,,2371,1277,1665,101,1.7093023255813953,72.37726483167982,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
136,b9027666444fc0c54a4215674e3804abf4bf0192,mrname,2021-07-25 13:44:07+00:00,remove raise_on_giveup from nonlocals,False,4,2,2,,,,2371,1277,1665,101,1.7093023255813953,72.37726483167982,37.0,59.5,405.8356078104561,2.5067867450854786,2333.2210660929104,129.62339256071724,0.13527853593681868
137,8d64de6bfa66ab6f696932a56d4f44bcbc5685aa,Bob Green,2021-07-27 14:32:40+00:00,Make python 3.6/3.7 support more robust,False,25,18,7,,,,2411,1308,1691,108,1.6931818181818181,74.79931097959519,32.5625,52.25,355.4033373030343,2.224688401949794,2041.717023065739,113.42872350365217,0.11846777910101142
138,f59aefaf4e39611d264a73a6d1b4f5c74b3722cd,Gleb Chipiga,2021-08-19 13:52:47+00:00,Make _MaybeLogger type optional,False,2,1,1,,,,2411,1308,1691,108,1.6931818181818181,74.79931097959519,32.5625,52.25,355.4033373030343,2.224688401949794,2041.717023065739,113.42872350365217,0.11846777910101142
139,b9762195912cc83d59ca207742ebf6cecfbbf68d,Gleb Chipiga,2021-08-19 13:52:47+00:00,"Update decorators on_success, on_backoff, on_giveup parameters (add iterable of callable)",False,14,7,7,,,,2411,1308,1691,108,1.6931818181818181,74.79931097959519,32.5625,52.25,355.4033373030343,2.224688401949794,2041.717023065739,113.42872350365217,0.11846777910101142
140,7e706e85626c14e4f9c162d1f55291f342645258,Sherif Nada,2021-08-19 14:58:38+00:00,Add new generator function,False,46,33,13,0.8888888888888888,1.0,0.9444444444444444,2431,1327,1709,112,1.696629213483146,74.42651791191881,32.6875,52.4375,356.60382789317356,2.224688401949794,2043.517758950948,113.52876438616377,0.11886794263105784
141,56a4217e48b88ca970959d18ff8bef194f764f45,Sherif Nada,2021-08-19 14:59:48+00:00,style,False,1,1,0,,,,2432,1327,1710,112,1.696629213483146,74.42651791191881,32.6875,52.4375,356.60382789317356,2.224688401949794,2043.517758950948,113.52876438616377,0.11886794263105784
142,ed932f749b9c6cfe1e374662c23bfaadcb8d12bc,Bob Green,2021-08-19 16:45:44+00:00,"Add runtime wait generator

This renames `from_value` from the original PR.",False,37,28,9,1.0,1.0,1.0,2451,1332,1714,116,1.7,74.22595569992576,32.6875,52.4375,356.60382789317356,2.224688401949794,2043.517758950948,113.52876438616377,0.11886794263105784
143,b1a5a534e261a588da8fd1f3358f1ca9202a90d6,Bob Green,2021-08-19 16:46:23+00:00,"Handle wait_gen_kwargs which take an argument

All wait_gen args are subject to maybe_call() as a way to dynamically
look up a value at runtime.  These callables do not take an argument.
If a callable which takes an argument is passed (as is the case with
the `value` kwargs for the `runtime` wait generator, we pass through
the function.",False,8,7,1,1.0,1.0,0.0,2457,1338,1720,116,1.711111111111111,74.12675439841489,32.6875,52.4375,356.60382789317356,2.224688401949794,2043.517758950948,113.52876438616377,0.11886794263105784
144,c2f4e1826b1996348177215f4c009c055777603f,Bob Green,2021-08-19 16:49:26+00:00,"Add integration test module

This is for higher level tests, perhaps relying on 3rd party libraries
(dev only dependencies.)  This first set uses the `requests` module
to test some idiomatic patterns using the `runtime` wait generator.",False,80,80,0,0.20833333333333334,1.0,1.0,2535,1387,1770,116,1.6956521739130435,73.74077641554135,31.294117647058822,50.05882352941177,337.86472625341673,2.123236143011571,1924.429629013166,106.91275716739811,0.11262157541780557
145,80512463f7734c0cb35898a05679035c48f8e08d,Bob Green,2022-04-26 15:52:25+00:00,Prepare 2.0.0 release,False,16,14,2,,,,2535,1387,1770,116,1.6956521739130435,73.74077641554135,31.294117647058822,50.05882352941177,337.86472625341673,2.123236143011571,1924.429629013166,106.91275716739811,0.11262157541780557
146,23bb428d8664a0c20b754660cdbcf87d34d32e1f,Bob Green,2022-04-27 14:07:24+00:00,Allow None for jitter kwarg (typing),False,4,2,2,,,,2535,1387,1770,116,1.6956521739130435,73.74077641554135,31.294117647058822,50.05882352941177,337.86472625341673,2.123236143011571,1924.429629013166,106.91275716739811,0.11262157541780557
147,92e7b6e910accee30118a6f3d2cef4c62caa38f5,Bob Green,2022-04-27 14:07:24+00:00,Prepare 2.0.1 release,False,9,7,2,,,,2535,1387,1770,116,1.6956521739130435,73.74077641554135,31.294117647058822,50.05882352941177,337.86472625341673,2.123236143011571,1924.429629013166,106.91275716739811,0.11262157541780557
148,12f8cbeaedb8d726a990657540500ecd12b1fef6,Christian Clauss,2022-05-01 14:58:49+00:00,pyupgrade --py37-plus **/*.py,False,23,1,22,0.0,0.0,0.0,2514,1386,1769,101,1.684782608695652,71.98359425962818,31.294117647058822,50.05882352941177,337.86472625341673,2.123236143011571,1924.429629013166,106.91275716739811,0.11262157541780557
149,732eaa34f782e31e891bbbd4aa524e42b27f3bc7,Javier Santacruz,2022-06-07 13:08:54+00:00,Get max_tries/max_time values for every call fixes #160,False,70,56,14,1.0,1.0,1.0,2577,1415,1801,114,1.6808510638297873,73.43473855264325,31.58823529411765,50.411764705882355,341.24565680729194,2.100307016019879,1938.1512681845406,107.67507045469671,0.11374855226909732
150,61b66373d479b341aa65f9f465e6fe74a63fff05,Bob Green,2022-06-07 14:25:55+00:00,Fix flake8 complaints,False,8,5,3,,,,2579,1415,1801,114,1.6808510638297873,73.43473855264325,31.58823529411765,50.411764705882355,341.24565680729194,2.100307016019879,1938.1512681845406,107.67507045469671,0.11374855226909732
151,f56d31b4abdb366f6730b552e12dabed399fbef5,Bob Green,2022-06-07 14:40:25+00:00,Prepare 2.1.0 release,False,9,7,2,,,,2579,1415,1801,114,1.6808510638297873,73.43473855264325,31.58823529411765,50.411764705882355,341.24565680729194,2.100307016019879,1938.1512681845406,107.67507045469671,0.11374855226909732
152,65e396690022cae744991d7ac2c0467fce0fa7df,Bob Green,2022-06-08 10:44:05+00:00,Fix async test,False,6,3,3,,,,2579,1415,1801,114,1.6808510638297873,73.43473855264325,31.58823529411765,50.411764705882355,341.24565680729194,2.100307016019879,1938.1512681845406,107.67507045469671,0.11374855226909732
153,90aad75df76fe2ac4dd05be2bc2ea1b9464973ca,Bob Green,2022-06-08 10:44:44+00:00,Update async to lookup callabale kwargs every time,False,29,14,15,,,,2578,1413,1801,113,1.6808510638297873,73.4242183257388,31.58823529411765,50.411764705882355,341.24565680729194,2.100307016019879,1938.1512681845406,107.67507045469671,0.11374855226909732
154,2776b3aee346759b33491644544322084ab08db2,Bob Green,2022-06-08 11:02:30+00:00,"Improve callable kwarg tests

This would have caught a bug where we were passing the original
non-called kwarg to _next_wait.",False,98,92,6,0.6956521739130435,1.0,0.8260869565217391,2664,1478,1866,113,1.653061224489796,73.24229973174256,32.64705882352941,52.529411764705884,359.92310103005735,2.105734554959914,2065.790717369135,114.76615096495192,0.11997436701001911
155,b87ebb6a8713e0d17233d6d80d97a801472b856b,Bob Green,2022-06-08 11:02:30+00:00,"Use maybe-called keyword values everywhere

We were still passing in the maybe callable original arg rather than
using the looked-up value in a couple places.",False,10,6,4,0.0,0.0,1.0,2666,1478,1868,113,1.653061224489796,73.24146628851204,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
156,596a29505351ec0e497cbe114a6e4d57d7cbada6,Bob Green,2022-06-08 11:15:51+00:00,"Use importlib.metadata to set __version__

This way we don't have to remember to update the version in two places
every release.  The version will only need to be set in pyproject.toml",False,6,4,2,,,,2668,1479,1869,113,1.653061224489796,73.24146628851204,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
157,a3d6359bf0515e4cf1824be3e0c321c33c560a9b,Bob Green,2022-06-08 11:59:31+00:00,"Don't use importlib.metadata for __version__

Fixes https://github.com/litl/backoff/issues/166",False,4,1,3,,,,2666,1478,1868,113,1.653061224489796,73.24146628851204,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
158,f7a949c61ffcfacc5d0f56bb62cd174861b58edf,Tamás PEREGI,2022-07-19 17:56:06+00:00,Add exception field to details in sync backoff,False,6,3,3,,,,2666,1478,1868,113,1.653061224489796,73.24146628851204,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
159,8bf80032426147038e17588918d1d4afca1d8493,Tamás PEREGI,2022-07-19 17:58:02+00:00,Fix sync tests after change,False,6,6,0,0.0,1.0,1.0,2672,1484,1874,113,1.653061224489796,73.20898376120209,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
160,36aba2ca507120501ce26ec8c51b9b66d6050800,Tamás PEREGI,2022-07-19 17:59:05+00:00,Add exception field to details in async backoff,False,6,3,3,,,,2672,1484,1874,113,1.653061224489796,73.20898376120209,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
161,fe0383aaa597fa1a33294ca8eb864fa6a7614b27,Tamás PEREGI,2022-07-19 18:00:37+00:00,Fix async tests after change,False,6,6,0,0.0,1.0,1.0,2678,1490,1880,113,1.653061224489796,73.17385304552347,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
162,15613afc62a5b14ce406a72fa76847422222c28f,Marc Mueller,2022-08-23 19:58:33+00:00,Fix on_* handler typing,False,33,18,15,1.0,1.0,1.0,2669,1478,1873,113,1.65,73.20393141394666,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
163,c810d70914603c2054bd9904d718d234b0ca2342,Shantanu,2022-10-03 22:45:46+00:00,"Improve type annotation for backoff.expo

`backoff.expo` accepts floats. Most usage in our codebase has a floating point `factor`. If we want to preserve exact inference in cases where the return type is `Generator[int, Any, None` we could use an overload (TypeVar could work, but would be a little worse for cases involving defaults).",False,8,4,4,,,,2666,1478,1868,113,1.653061224489796,73.24146628851204,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
164,52aef92a1d44de03c84d65b3e4eeedaf40221547,Shantanu,2022-10-03 22:53:09+00:00,Update backoff/_wait_gen.py,False,2,1,1,,,,2666,1478,1868,113,1.653061224489796,73.24146628851204,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
165,e7677e8770e6f9da1f54108018022574fc4e8078,Bob Green,2022-10-05 13:29:55+00:00,Make flake8 happy with line lengths,False,6,4,2,0.0,0.0,1.0,2680,1490,1882,113,1.653061224489796,73.16862415219914,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
166,d9b9f01b4a40ee6b82f3e6b8b7caf7360e6e0ea8,Bob Green,2022-10-05 14:06:10+00:00,"Improve type hints for runtime, constant wait gens

This generators will work fine with floats for arguments. In the type
hinting world, float can be used to mean int or float.",False,9,6,3,1.0,1.0,1.0,2669,1478,1871,113,1.653061224489796,73.28016432606677,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
167,77f4209b63ac47daa7db9798ce4ce28a54fae1ee,Bob Green,2022-10-05 14:22:46+00:00,"Refrain from adding Details to backoff namespace

If needed, I want to make sure we put this in the right place. There
may ultimately be some other types which it would be helpful to expose
as well, and in that case I think it might be better to have a typing
submodule where only these types are exposed.",False,2,0,2,,,,2667,1477,1871,113,1.65,73.20393141394666,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
168,d322dc46a7f3ee6d03e5a0153d8015c3076f8bbb,Bob Green,2022-10-05 14:28:57+00:00,Prepare v2.2.0 release,False,10,8,2,,,,2684,1489,1888,113,1.65,73.1697873151885,32.588235294117645,52.529411764705884,359.7677937700245,2.1276852470014362,2069.133140232938,114.95184112405208,0.11992259792334148
169,6cb1a4ecaf6905fe46069a0676e25c5bd5b6883a,Bob Green,2022-10-05 19:15:18+00:00,"Fix type hint for wait generator

I picked this up in one of the type hinting improvement PRs but it
doesn't seem to work and isn't necessary.

This also adds a test file which will be picked up by mypy when
running make check which would have caught the error.

Fixes https://github.com/litl/backoff/issues/177",False,40,37,3,1.0,1.0,1.0,2718,1500,1913,115,1.6310679611650485,74.6603546865669,30.77777777777778,49.611111111111114,339.78069411613427,2.0094805110569123,1954.1812991088857,108.56562772827141,0.11326023137204472
170,d9d80a92d5a4483373acdaf9faa4068c85b3d268,Bob Green,2022-10-05 19:16:50+00:00,Prepare v2.2.1 release,False,8,6,2,,,,2718,1500,1913,115,1.6310679611650485,74.6603546865669,30.77777777777778,49.611111111111114,339.78069411613427,2.0094805110569123,1954.1812991088857,108.56562772827141,0.11326023137204472
171,a1e19d96a8bd6a4cfb44c88f42f0d8e0415998ac,Bob Green,2022-10-20 11:23:39+00:00,"Revert ""pyupgrade --py37-plus **/*.py""

This reverts commit 12f8cbeaedb8d726a990657540500ecd12b1fef6.

This commit introduced a series of unit test failures, although
I'm not completely sure why.",False,23,22,1,1.0,1.0,1.0,2718,1500,1913,115,1.6310679611650485,74.6603546865669,30.77777777777778,49.611111111111114,339.78069411613427,2.0094805110569123,1954.1812991088857,108.56562772827141,0.11326023137204472
172,48fa04eaccf2b9617cd702676fd5b3be39efa18e,Marwan Baghdad,2023-01-16 14:06:42+00:00,"Update decorator's argument ""max_time"" description

* Add that the `max_time` is in seconds",False,2,1,1,,,,2718,1500,1913,115,1.6310679611650485,74.6603546865669,30.77777777777778,49.611111111111114,339.78069411613427,2.0094805110569123,1954.1812991088857,108.56562772827141,0.11326023137204472
173,d82b23c42d7a7e2402903e71e7a7f03014a00076,Nimrod Milo,2023-01-20 19:02:28+00:00,"Add exponential decay (#189)

* added exponential decay
* updated docstring
* fixed flake8",False,62,61,1,0.4444444444444444,1.0,0.4444444444444444,2778,1533,1950,117,1.6666666666666667,73.91910437636456,33.333333333333336,53.5,365.9101350241848,2.0971241892178316,2043.6447415905839,113.53581897725468,0.1219700450080616
