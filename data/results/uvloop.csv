ID,hash,author,date,commit_message,is_merge,lines_changed,insertions,deletions,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing,radon_LOC,radon_LLOC,radon_SLOC,radon_comments,radon_avg_cc,radon_avg_MI,radon_avg_vocabulary,radon_avg_length,radon_avg_volume,radon_avg_difficulty,radon_avg_effort,radon_avg_time,radon_avg_bugs
0,4e693ffcfd12f597e39ec617fa8a8cbf686d14e5,Yury Selivanov,2015-11-01 17:00:43+00:00,Initial commit,False,138,138,0,1.0,1.0,1.0,59,29,46,0,3.3333333333333335,55.70715496672811,10.0,13.0,43.18506523353572,1.0,43.18506523353572,2.399170290751984,0.014395021744511906
1,edded47158d878487cbc584d25258f1f97c0e38b,Yury Selivanov,2015-11-02 20:11:19+00:00,Bindings for Signal and Idle handlers,False,290,247,43,,,,72,30,59,0,3.3333333333333335,77.85357748336406,5.0,6.5,21.59253261676786,0.5,21.59253261676786,1.199585145375992,0.007197510872255953
2,8ff280329bf161c6ba8c8ef86f0ef175c8f2270e,Yury Selivanov,2015-11-02 21:44:19+00:00,Add Async handlers; implement call_soon & call_soon_threadsafe,False,184,165,19,,,,86,34,69,0,2.75,77.85357748336406,5.0,6.5,21.59253261676786,0.5,21.59253261676786,1.199585145375992,0.007197510872255953
3,e290a915f543b4863c3689ab4063f0ab3a94b7b8,Yury Selivanov,2015-11-02 22:45:14+00:00,Enough code to run asyncio.sleep() in a loop,False,199,177,22,,,,92,34,75,0,2.75,77.85357748336406,5.0,6.5,21.59253261676786,0.5,21.59253261676786,1.199585145375992,0.007197510872255953
4,ec9f87668afe697e86b97db268dee85b45da8aca,Yury Selivanov,2015-11-03 23:32:12+00:00,Correctly close handlers and finalize the loop,False,435,323,112,,,,98,34,81,0,2.75,77.85357748336406,5.0,6.5,21.59253261676786,0.5,21.59253261676786,1.199585145375992,0.007197510872255953
5,0c89f76a0bc4bc65eeb6c961f1ceec94e588e406,Yury Selivanov,2015-11-04 07:10:52+00:00,Implement getaddrinfo (and restructure all imports & files),False,352,201,151,,,,68,34,51,0,2.75,77.85357748336406,5.0,6.5,21.59253261676786,0.5,21.59253261676786,1.199585145375992,0.007197510872255953
6,d79f62ebabd60ded5ccc0012ad5cad80284894d7,Yury Selivanov,2015-11-06 22:01:13+00:00,setup.py: Use -O2 by default,False,2,1,1,,,,68,34,51,0,2.75,77.85357748336406,5.0,6.5,21.59253261676786,0.5,21.59253261676786,1.199585145375992,0.007197510872255953
7,d344c20a02b05c8b37ddba51f0973bc3cc408bab,Yury Selivanov,2015-11-10 22:41:22+00:00,wip,False,117,88,29,1.0,1.0,1.0,90,52,68,0,2.2222222222222223,83.39693447367031,3.25,4.0,11.984988183924797,0.375,11.390627246154363,0.6328126247863535,0.0039949960613082655
8,7b4a6e9e6175d1f33f669b6eee17487f5d42ce54,Yury Selivanov,2015-11-11 02:48:18+00:00,Add basic unittests; fix many nits & bugs,False,671,553,118,0.611764705882353,1.0,0.8980392156862745,438,284,317,15,1.375,75.32090394884759,7.25,13.25,53.27554144281978,1.1166666666666667,158.0577534410949,8.780986302283049,0.01775851381427326
9,57026aa7e733fea14f7291518d00b79ee4fb3a1c,Yury Selivanov,2015-11-11 02:51:40+00:00,Implement set/get_task_factory,False,54,53,1,0.2692307692307692,1.0,1.0,475,309,342,15,1.3529411764705883,74.84291247991871,7.25,13.25,53.27554144281978,1.1166666666666667,158.0577534410949,8.780986302283049,0.01775851381427326
10,f7129fce07d6c8bc37ff393af402ac4343df1184,Yury Selivanov,2015-11-11 09:08:22+00:00,Implement Future in C,False,672,648,24,0.5802139037433155,0.8449197860962567,0.8689839572192514,623,418,456,21,1.2916666666666667,79.74095242169616,6.2,11.0,44.73830760971215,0.9933333333333334,133.94152095941396,7.441195608856331,0.014912769203237383
11,cfa952146d1f149daee1cf01ae528ff7ca3fa8ca,Yury Selivanov,2015-11-11 21:29:53+00:00,Fix bugs in Future; add benchmarks,False,140,130,10,0.9743589743589743,1.0,0.9743589743589743,715,491,530,23,1.392156862745098,74.418424781976,8.571428571428571,13.142857142857142,54.57428264943923,1.4700280112044817,187.95147034715774,10.441748352619877,0.018191427549813073
12,91c758a7195c09fdb3c7bfdacf97a39e12b2f613,Yury Selivanov,2015-11-11 22:35:03+00:00,Improve benchmarks,False,22,21,1,1.0,1.0,1.0,735,508,548,23,1.4230769230769231,73.69854232875616,8.714285714285714,13.428571428571429,55.5007250823837,1.4700280112044817,188.87791278010224,10.493217376672346,0.0185002416941279
13,116830fa9db02960aaf78066afdb5d6d76d33a00,Yury Selivanov,2015-11-13 18:00:25+00:00,Monkey patch asyncio.Future to be compatible with CFuture,False,41,34,7,1.0,1.0,1.0,761,524,565,24,1.4482758620689655,70.83404524087477,9.571428571428571,14.285714285714286,57.71640722585897,1.6128851540616245,191.0935949235775,10.61631082908764,0.01923880240861966
14,45a3f039a8b6de15b7dec6c07ea9e7cce81a7b0b,Yury Selivanov,2015-11-17 18:49:39+00:00,Turn off C Futures for now,False,14,10,4,1.0,1.0,1.0,770,531,573,24,1.4406779661016949,65.55836516272358,9.857142857142858,14.571428571428571,58.00212151157326,1.6843137254901959,191.23645206643465,10.624247337024148,0.019334040503857758
15,788b66fec181162652533b430b9873a248a7bb49,Yury Selivanov,2015-11-19 23:46:49+00:00,"Add tests for sock_{recv,sendall,connect,accept}",False,421,416,5,0.8427947598253275,0.9126637554585153,0.7991266375545851,1170,797,860,29,1.6990291262135921,55.74436545053233,13.777777777777779,19.11111111111111,80.96154652098822,2.4236581501287384,325.4903004180416,18.08279446766898,0.026987182173662746
16,8d8fb8ce78b22a1de4f367596fb0e101b167a044,Yury Selivanov,2015-11-20 01:29:48+00:00,Tune how loops are closed; fix unittests,False,42,27,15,,,,1173,798,861,29,1.6990291262135921,54.65506704039356,15.444444444444445,21.77777777777778,92.94300069174145,2.653816880287468,357.39413286952396,19.85522960386244,0.030981000230580494
17,2718a91b45e0cf1c3c87b55f58a82e7b4fece125,Yury Selivanov,2015-11-21 00:08:48+00:00,Refactor exceptions; translate exceptions for EAI* errors; tests for dns,False,403,303,100,0.5365853658536586,1.0,0.5365853658536586,1261,857,922,30,1.7130434782608697,59.00436402007503,13.818181818181818,19.363636363636363,81.76313467582469,2.3935269424574237,306.39282037390115,17.02182335410562,0.0272543782252749
18,63c17ec735e457feca552b8e36f8d782092194ad,Yury Selivanov,2015-11-25 17:02:12+00:00,Implement TCPTransport.get_extra_info('socket'),False,64,52,12,,,,1261,857,922,30,1.7130434782608697,59.00436402007503,13.818181818181818,19.363636363636363,81.76313467582469,2.3935269424574237,306.39282037390115,17.02182335410562,0.0272543782252749
19,b22d4042040c2ef2377c99de93eacba0b4eaf31f,Yury Selivanov,2015-11-26 01:36:18+00:00,tests/call_later: Increase timeout -- it's going to be cancelled anyways,False,2,1,1,,,,1261,857,922,30,1.7130434782608697,59.00436402007503,13.818181818181818,19.363636363636363,81.76313467582469,2.3935269424574237,306.39282037390115,17.02182335410562,0.0272543782252749
20,8f210e9c7551166114475a449dc4aace524c004b,Yury Selivanov,2015-11-26 16:31:00+00:00,Don't close the loop on error,False,13,12,1,1.0,1.0,1.0,1272,864,929,30,1.706896551724138,58.95328232912154,13.818181818181818,19.363636363636363,81.76313467582469,2.3935269424574237,306.39282037390115,17.02182335410562,0.0272543782252749
21,a474ccba4f3ec96694abc6844591a1066e8bbeec,Yury Selivanov,2015-11-26 19:37:17+00:00,Significantly enhance robustness & debugging of UVHandles,False,343,272,71,1.0,1.0,1.0,1309,889,958,31,1.7435897435897436,58.59438740782355,14.636363636363637,20.454545454545453,87.47573108967457,2.500478814115178,336.2490537457854,18.680502985876963,0.02915857702989152
22,c300da7cee2d5d2bd5fc73d2d21d1cac108a8efb,Yury Selivanov,2015-11-26 21:22:39+00:00,Add debug stats for Handles and TimerHandles,False,58,53,5,,,,1313,892,961,31,1.7435897435897436,58.537259217325214,14.636363636363637,20.454545454545453,87.47573108967457,2.500478814115178,336.2490537457854,18.680502985876963,0.02915857702989152
23,20fa09979fd38bf070b1caa4200cefbe85a2b11f,Yury Selivanov,2015-11-26 23:38:57+00:00,Some minor tweaks for debug logging,False,34,23,11,1.0,1.0,1.0,1315,894,963,31,1.7521367521367521,58.49614269847263,14.636363636363637,20.454545454545453,87.47573108967457,2.500478814115178,336.2490537457854,18.680502985876963,0.02915857702989152
24,3f45658b9eb5cf6ecb8ded2a73aa0a5961127b4e,Yury Selivanov,2015-11-30 16:13:07+00:00,Move handles & headers into separate sub-packages,False,52,26,26,,,,1315,894,963,31,1.7521367521367521,61.95479747359991,13.416666666666666,18.75,80.1860868322017,2.29210557960558,308.22829926696994,17.12379440372055,0.026728695610733894
25,a4d6022a7d72f0162a0734cabd06eab24c7dfbc9,Yury Selivanov,2016-01-11 21:05:27+00:00,"Drop custom Future implementation.  It should be part of CPython.

See http://bugs.python.org/issue26081 for more details.",False,736,19,717,0.41935483870967744,0.21588089330024815,0.12406947890818859,1138,770,831,25,1.8541666666666667,63.67625544049338,13.909090909090908,19.727272727272727,85.88393336200849,2.3641151777515415,334.7481651090284,18.597120283834908,0.028627977787336167
26,2c61d5d3831676a04a33b117e77b782491cd6765,Yury Selivanov,2016-01-19 21:05:14+00:00,Implement Server and create_server,False,290,202,88,,,,1139,771,832,25,1.8541666666666667,63.67625544049338,13.909090909090908,19.727272727272727,85.88393336200849,2.3641151777515415,334.7481651090284,18.597120283834908,0.028627977787336167
27,679e9d01cb9e8b9547aed81d0dc0df53d6f887bd,Yury Selivanov,2016-01-21 16:56:50+00:00,Drop dead module,False,145,0,145,0.0,0.0,0.22784810126582278,994,674,726,24,1.794871794871795,65.58532075668487,13.2,19.2,83.49153314126244,2.2005266955266958,324.29980739214363,18.016655966230196,0.027830511047087482
28,722dcd9100d88a4ec2ba734811bf03eecf1f378c,Yury Selivanov,2016-01-21 17:07:29+00:00,tests: Check that all resources were GCed when compiled with DEBUG,False,36,28,8,1.0,1.0,1.0,1009,685,737,24,1.8205128205128205,65.4561086694105,13.2,19.2,83.49153314126244,2.2005266955266958,324.29980739214363,18.016655966230196,0.027830511047087482
29,2e571c9d83a02089887b2e04654dd4bed157ac85,Yury Selivanov,2016-01-21 17:56:45+00:00,tests: Add a test for loop.create_server,False,61,59,2,0.5306122448979592,1.0,1.0,1066,724,782,29,1.8227848101265822,62.97831620438965,13.5,19.5,83.96702189147878,2.2505266955266956,324.5375517672518,18.02986398706954,0.027989007297159595
30,f06f796091be39c4f8cdc95816dd5da918819c25,Yury Selivanov,2016-01-21 18:08:03+00:00,test: Test that server close all proxy-sockets,False,9,8,1,0.0,0.0,1.0,1073,728,786,30,1.8227848101265822,62.716828296452334,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
31,43d5238c127ef4dc11ceb213e3ba83365c4c7f4f,Yury Selivanov,2016-01-21 18:22:45+00:00,tests: Add one more send/recv cycle to test_create_server_1,False,10,10,0,1.0,1.0,1.0,1083,734,792,30,1.8227848101265822,62.54225521293032,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
32,080180fb986f6fd1040569f79a5b2060eb9ca74c,Yury Selivanov,2016-01-21 18:33:53+00:00,Fix loop.create_server to accept a list of hosts,False,4,2,2,,,,1083,734,792,30,1.8227848101265822,62.54225521293032,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
33,b219a5151276e0f7d3bd9a4b10502b6b9247c0b3,Yury Selivanov,2016-02-03 23:33:39+00:00,examples/bench: Add an arg to parametrize server/client host,False,31,22,9,,,,1096,744,804,30,1.8227848101265822,62.273610045371605,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
34,a49c72f870c5d38fb7ffee649374d1d22c6afe36,Yury Selivanov,2016-02-03 23:36:51+00:00,Add much more detailed debug stats,False,190,169,21,0.0,1.0,1.0,1101,747,808,30,1.8481012658227849,62.231012629996215,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
35,1639e4a05853fb7d2000538b8843ad9bf86055a3,Yury Selivanov,2016-02-03 23:37:27+00:00,Fix tests,False,8,4,4,,,,1101,747,808,30,1.8481012658227849,62.231012629996215,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
36,abdfbbc716547d68f9174041acf02e62fc1ed239,Yury Selivanov,2016-03-30 22:40:32+00:00,transport: Implement correct semantics of transports closing,False,180,120,60,,,,1101,747,808,30,1.8481012658227849,62.231012629996215,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
37,b1c130b80a986ffaa9ea49bce5c42d474b36753b,Yury Selivanov,2016-04-01 19:35:56+00:00,"Implement basic loop.create_unix_server

ToDo:
- tests
- ssl support
- sock param",False,262,200,62,0.0,1.0,0.0,1121,768,827,30,1.8734177215189873,61.74563219120946,13.7,19.7,84.65249718870612,2.300526695526696,325.4607714395873,18.08115396886596,0.02821749906290204
38,c93da26c35607518f286dbdf9023034288074fab,Yury Selivanov,2016-04-02 19:17:57+00:00,tests: Add a test for loop.create_unix_server,False,92,92,0,0.5423728813559322,0.5423728813559322,1.0,1213,830,894,36,1.8433734939759037,62.511218023058994,12.909090909090908,18.363636363636363,78.01223748740891,2.18229699593336,296.9288504427554,16.496047246819742,0.026004079162469638
39,55228cb6adcf051d01f64d966b31dcbf61479397,Yury Selivanov,2016-04-02 19:58:35+00:00,Add support for 'sock' param to start_unix_server,False,104,99,5,0.1,0.1,1.0,1264,863,933,39,1.8433734939759037,61.98553676894847,13.0,18.545454545454547,78.60179176291902,2.18229699593336,297.5184047182656,16.52880026212586,0.026200597254306342
40,368cac62843d94f56b0c84d9a24ad7de149829b9,Yury Selivanov,2016-04-02 20:10:03+00:00,Fix 'sock' param for loop.create_server; add tests,False,54,53,1,0.1,0.1,1.0,1316,895,972,42,1.8433734939759037,61.446395551103315,13.090909090909092,18.727272727272727,79.19134603842915,2.18229699593336,298.1079589937757,16.56155327743198,0.02639711534614305
41,1d5a3701a598b7bd42d2d4c044d9bcfabc817d82,Yury Selivanov,2016-04-06 17:35:11+00:00,examples: Fix server.py to work again in poll mode,False,2,1,1,,,,1316,895,972,42,1.8433734939759037,61.446395551103315,13.090909090909092,18.727272727272727,79.19134603842915,2.18229699593336,298.1079589937757,16.56155327743198,0.02639711534614305
42,800cde0d9a062a7e1af3bcb6bb90b6f7f8f44432,Yury Selivanov,2016-04-08 22:37:30+00:00,Basic implementation of subprocess_shell and subprocess_exec,False,782,765,17,0.34328358208955223,1.0,1.0,1413,943,1047,42,1.797752808988764,64.6591959218447,12.0,17.166666666666668,72.59206720189339,2.0004389129389133,273.2656290776277,15.18142383764598,0.024197355733964462
43,28d166e19342ab151280fa7d73c7101f0ef28cd7,Yury Selivanov,2016-04-08 22:56:54+00:00,subprocess: Support None for stdin/out/err; support 'executable' param,False,107,65,42,1.0,1.0,1.0,1429,951,1059,42,1.788888888888889,64.6591959218447,12.0,17.166666666666668,72.59206720189339,2.0004389129389133,273.2656290776277,15.18142383764598,0.024197355733964462
44,644ebb9303023fcab5833de2999cc25cb4872812,Yury Selivanov,2016-04-09 23:31:21+00:00,tests/process: Test Process.communicate,False,5,1,4,0.0,0.0,0.0,1426,949,1057,42,1.788888888888889,64.6591959218447,12.0,17.166666666666668,72.59206720189339,2.0004389129389133,273.2656290776277,15.18142383764598,0.024197355733964462
45,5bcb103a9adc9200b597f2c847fe850db5185990,Yury Selivanov,2016-04-09 23:52:12+00:00,test/process: Add a test for Process.send_signal,False,42,42,0,0.08823529411764706,1.0,1.0,1468,965,1089,42,1.7802197802197801,64.6591959218447,12.0,17.166666666666668,72.59206720189339,2.0004389129389133,273.2656290776277,15.18142383764598,0.024197355733964462
46,704eb6fa08d63cd55fcf6fc3e028d361e0f028e4,Yury Selivanov,2016-04-09 23:56:31+00:00,test/process: Add a test for Process.pid,False,22,22,0,1.0,1.0,1.0,1490,975,1106,42,1.7717391304347827,64.6591959218447,12.0,17.166666666666668,72.59206720189339,2.0004389129389133,273.2656290776277,15.18142383764598,0.024197355733964462
47,1f4e720c229ed5eaa13f2aade5c7a401ea7ab7ed,Yury Selivanov,2016-04-10 21:10:52+00:00,"process: Add support for None, DEVNULL, STDOUT values for std* args",False,253,218,35,0.9523809523809523,1.0,1.0,1567,1013,1167,43,1.7578947368421052,64.6591959218447,12.0,17.166666666666668,72.59206720189339,2.0004389129389133,273.2656290776277,15.18142383764598,0.024197355733964462
48,e293b283f8db181d9c9be580806b6560043a4067,Yury Selivanov,2016-04-10 22:26:28+00:00,Implement loop.connect_read_pipe and loop.connect_write_pipe,False,353,344,9,0.3619631901840491,1.0,1.0,1804,1191,1340,51,1.7168141592920354,62.98528503138114,13.76923076923077,20.23076923076923,89.49799526066028,2.0901487401487406,323.4633179607768,17.970184331154265,0.02983266508688676
49,fdd1986af84e651ee7ed7082c865100cfd34b306,Yury Selivanov,2016-04-11 16:03:48+00:00,Close attached sock/file objects in UVStreams (when created via open()),False,66,36,30,1.0,1.0,0.0,1799,1187,1336,51,1.7168141592920354,63.038606716665996,13.76923076923077,20.23076923076923,89.49799526066028,2.0901487401487406,323.4633179607768,17.970184331154265,0.02983266508688676
50,b8c410a646e5d9d0be8ac5be51d8b131c4f0ef6b,Yury Selivanov,2016-04-11 16:37:37+00:00,subprocess: Fix return code on signal kill; port a few tests from asyncio,False,242,240,2,1.0,1.0,1.0,2027,1323,1505,69,1.640625,59.21987610548084,14.076923076923077,20.692307692307693,90.4210721837372,2.128610278610279,323.92485642231526,17.995825356795294,0.030140357394579067
51,254ad33852dcbc8d9a2f2686df7e291831bb6ff2,Yury Selivanov,2016-04-11 16:42:12+00:00,Call uv_disable_stdio_inheritance when the loop is constructed,False,5,4,1,,,,2026,1323,1505,69,1.640625,59.21987610548084,14.076923076923077,20.692307692307693,90.4210721837372,2.128610278610279,323.92485642231526,17.995825356795294,0.030140357394579067
52,91d17cdb394ee17ba1fcff8dba9cd3dee9171d98,Yury Selivanov,2016-04-11 17:38:53+00:00,subprocess: Implement pass_fds,False,84,70,14,0.08823529411764706,1.0,1.0,2064,1332,1535,69,1.6356589147286822,59.14719029803749,14.076923076923077,20.692307692307693,90.4210721837372,2.128610278610279,323.92485642231526,17.995825356795294,0.030140357394579067
53,8d6d539f0884aa4d6831d5ec008cc917fa914476,Yury Selivanov,2016-04-11 20:41:17+00:00,tcp: Fix bugs in connect; add tests,False,102,74,28,1.0,1.0,1.0,2125,1370,1579,69,1.633587786259542,58.54691996302741,14.23076923076923,20.923076923076923,91.33686160642581,2.128610278610279,324.84064584500385,18.04670254694466,0.030445620535475275
54,a9e4a37051abcbc62f09a686a91ac089ea2cae11,Yury Selivanov,2016-04-11 20:51:23+00:00,tests/tcp: Test 'sock' param for create_connection,False,48,36,12,1.0,1.0,1.0,2149,1386,1598,69,1.6259541984732824,58.32530098746248,14.384615384615385,21.153846153846153,92.35109739362088,2.128610278610279,325.85488163219895,18.103048979566605,0.030783699131206956
55,bb4940d8de053c5cd2d7b6f39ebf8c7919e611ab,Yury Selivanov,2016-04-11 21:04:23+00:00,tests/tcp: Add anoter create_connection test,False,50,50,0,1.0,1.0,1.0,2199,1417,1634,69,1.6194029850746268,58.02111625058333,14.384615384615385,21.384615384615383,93.11769618474871,2.147841047841048,327.64361214483057,18.202422896935033,0.03103923206158291
56,203a181bcab56e211de27d724d2cfe4ac56331e1,Yury Selivanov,2016-04-11 22:07:55+00:00,"tcp, unix, tests: Implement create_unix_connection; fix bugs in tcp; tests",False,380,358,22,0.8451612903225807,0.8451612903225807,0.8451612903225807,2392,1535,1777,69,1.6285714285714286,56.56624318301086,15.076923076923077,22.923076923076923,100.8858417273136,2.1781440781440784,362.4048644441254,20.13360358022919,0.033628613909104536
57,4b9471279321133e648abfb5bf40521fe22da687,Yury Selivanov,2016-04-11 23:44:35+00:00,dns: Implement loop.getnameinfo,False,187,182,5,0.3333333333333333,1.0,0.3333333333333333,2432,1563,1807,70,1.6369863013698631,56.11561717722914,15.23076923076923,23.384615384615383,102.95899622659032,2.1999000999001,369.4275385686759,20.523752142704215,0.034319665408863435
58,5457d1eda3af9831882a9d14663ab15e5ee76e35,Yury Selivanov,2016-04-12 01:53:20+00:00,Implement loop.{add|remove}_signal_handler.,False,338,305,33,0.07547169811320754,1.0,1.0,2625,1631,1959,70,1.6143790849673203,59.25021595028419,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
59,3a54394fb6b9de7b9c9e7d2fd4c87bfeb080a021,Yury Selivanov,2016-04-12 13:52:03+00:00,Update includes modules list,False,2,2,0,,,,2627,1633,1961,70,1.6143790849673203,59.25021595028419,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
60,2ab14e93a6fd37ea2a9188c2e9be1ea1cb35aee3,Yury Selivanov,2016-04-12 13:52:32+00:00,"Update setup.py to make sdist builds; add ""sdist"" make target",False,12,10,2,,,,2627,1633,1961,70,1.6143790849673203,59.25021595028419,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
61,11ab1119187d636944e53eea4cf4221c8efa19a7,Yury Selivanov,2016-04-12 14:15:06+00:00,Bump version to v0.4.2,False,2,1,1,,,,2627,1633,1961,70,1.6143790849673203,59.25021595028419,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
62,a3036ee383e3c38b7f8f469fbe6f82acae269f27,Yury Selivanov,2016-04-12 14:44:53+00:00,setup.py: Removed unused variable,False,1,0,1,0.0,0.0,0.0,2626,1632,1960,70,1.6143790849673203,59.273961956171526,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
63,b6e994ae7d2ee5ea2ba2eb8e8eca145a1cebdf87,Yury Selivanov,2016-04-12 14:48:21+00:00,tests: Fix test_call_later test,False,16,10,6,1.0,1.0,1.0,2630,1633,1961,70,1.6143790849673203,59.26967660502499,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
64,bc9bc0034a11df9ebe0c2718cda4318875122363,Yury Selivanov,2016-04-12 17:12:50+00:00,tests: Fix test_read_pty_output (emits error logs on Linux),False,4,4,0,0.0,1.0,1.0,2634,1635,1962,72,1.6143790849673203,59.357703836749145,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
65,e2544ac56dd64f581b32f4181c0854578d7f9d3d,Yury Selivanov,2016-04-12 17:13:58+00:00,"transports: When force_close, pass exception to  proto.connection_lost",False,31,30,1,1.0,1.0,1.0,2663,1653,1983,72,1.6103896103896105,59.24560977865353,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
66,cfac61eb1ae300d72711b3cd89aa6827e32afff5,Yury Selivanov,2016-04-12 17:15:38+00:00,Bump version to 0.4.3,False,2,1,1,,,,2663,1653,1983,72,1.6103896103896105,59.24560977865353,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
67,78b575d12fe5409bfd0dfb0dd32bd0ccab53bc90,Yury Selivanov,2016-04-12 17:26:42+00:00,tests: Fix test to pass loop explicitly in asyncio.sleep,False,2,1,1,,,,2663,1653,1983,72,1.6103896103896105,59.24560977865353,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
68,eb80fc16c24dd4df78e16040444fdb6bd82ceb7a,Andrew Svetlov,2016-04-12 17:52:52+00:00,Introduce uvloop.new_event_loop() (#5),False,19,10,9,1.0,1.0,1.0,2664,1654,1984,72,1.6064516129032258,59.24560977865353,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
69,d5671c9f5a15a63bafb221db0b9ef382182d9cc9,Yury Selivanov,2016-04-12 18:48:26+00:00,tests: Add a test for Handle.repr,False,5,4,1,1.0,1.0,1.0,2667,1655,1985,72,1.6064516129032258,59.241342929064565,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
70,6aa85d691c625652e32d838e6d53d5360e91ce9a,Yury Selivanov,2016-04-12 18:50:54+00:00,tests: Test TimerHandle.run without arguments,False,4,2,2,,,,2667,1655,1985,72,1.6064516129032258,59.241342929064565,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
71,bf888f2b19c2c2e70d0e1cd293bb718863c8a6a7,Yury Selivanov,2016-04-12 19:06:12+00:00,tests: Add a basic test for Server.wait_closed,False,3,2,1,0.0,0.0,1.0,2668,1656,1986,72,1.6064516129032258,59.23563964814879,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
72,9b59c78a399608e9ca4bcd4acca723e987ed7af3,Yury Selivanov,2016-04-12 19:25:58+00:00,tests: Add tests for loop.is_running(),False,5,4,1,1.0,1.0,1.0,2671,1658,1988,72,1.6064516129032258,59.22716086522975,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
73,ecf61627ff43320e2a9fb4933290d74a32df0f51,Yury Selivanov,2016-04-12 19:26:12+00:00,tests: Test that run_until_complete() propagates errors correctly,False,7,7,0,1.0,1.0,1.0,2678,1664,1994,72,1.6025641025641026,59.19254620260164,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
74,0cef40e4ee30acbee12e179196dfc65c69890518,Yury Selivanov,2016-04-12 19:26:51+00:00,tests: Add a failed-connect test for sock_connect,False,15,15,0,1.0,1.0,1.0,2693,1676,2006,72,1.5987261146496816,59.04482921125808,14.142857142857142,21.714285714285715,95.6047822104053,2.0427643784786644,343.0398572423419,19.05776984679677,0.03186826073680176
75,e75a6e4da97afaaa88bac303a5ac65ead0e5c74f,Yury Selivanov,2016-04-12 20:10:10+00:00,streams: Ignore UV_ECANCELED in shutdown callback; add a test,False,77,76,1,0.5869565217391305,1.0,1.0,2753,1711,2049,75,1.5949367088607596,58.92007337993946,14.142857142857142,21.928571428571427,96.31662394502402,2.0606215213358072,345.05674215709496,19.169819008727497,0.032105541315008
76,d5f6671bc3fab3c66237b235c3abc327578f7c75,Yury Selivanov,2016-04-12 21:06:09+00:00,Fix broken examples/bench/server.py,False,2,1,1,,,,2753,1711,2049,75,1.5949367088607596,58.92007337993946,14.142857142857142,21.928571428571427,96.31662394502402,2.0606215213358072,345.05674215709496,19.169819008727497,0.032105541315008
77,2bb40f88eede4f6cc1456ef54916a6b495bc6ac3,Yury Selivanov,2016-04-12 22:20:39+00:00,transports: Avoid duplicating socket for get_extra_info(),False,60,55,5,1.0,1.0,1.0,2802,1735,2079,82,1.5911949685534592,58.99622551949591,14.142857142857142,21.928571428571427,96.31662394502402,2.0606215213358072,345.05674215709496,19.169819008727497,0.032105541315008
78,f88333f36999d7361195d534533638db7ddee300,Yury Selivanov,2016-04-12 22:23:51+00:00,Bump version to 0.4.4,False,2,1,1,,,,2802,1735,2079,82,1.5911949685534592,58.99622551949591,14.142857142857142,21.928571428571427,96.31662394502402,2.0606215213358072,345.05674215709496,19.169819008727497,0.032105541315008
79,8cf90c7c1b1ffd736e07221a6b4fa5fd7d7a158b,Yury Selivanov,2016-04-12 22:46:45+00:00,setup: uvloop requires unix/linux and Python >= 3.5 for now,False,7,7,0,,,,2809,1739,2083,82,1.5911949685534592,58.78073494387282,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
80,9b7dbef0be0cec7771d275f4d74ff838864d3008,Yury Selivanov,2016-04-12 23:09:36+00:00,tests: Test Transport.writelines(),False,5,2,3,,,,2809,1739,2083,82,1.5911949685534592,58.78073494387282,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
81,68d54f324fb33a73d315382f8a6c5e3f695202e8,Yury Selivanov,2016-04-12 23:17:58+00:00,tests: Add test for Transport.abort(),False,5,4,1,1.0,1.0,1.0,2812,1741,2085,82,1.5911949685534592,58.771722970151664,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
82,23b98a57f0a9f3a20e0b6a30765362494ed630f5,Yury Selivanov,2016-04-13 00:03:33+00:00,streams: When a transport opened via socket use it in get_extra_info,False,18,18,0,1.0,1.0,1.0,2827,1749,2096,82,1.5875,58.72201745280317,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
83,5077127d3e769cf5a652775712331dc0cebc887c,Yury Selivanov,2016-04-13 00:51:37+00:00,loop: Warn if there are any open handles when loop is closing,False,43,38,5,1.0,1.0,1.0,2843,1758,2108,82,1.5838509316770186,58.673888015374914,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
84,81d782bc33b8e7cdd0648d21c7bdc6daa5330466,Yury Selivanov,2016-04-13 01:24:26+00:00,streams: Fix loop.close() and tests on Linux,False,60,27,33,,,,2840,1758,2108,82,1.5838509316770186,58.66498475267393,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
85,c9d4bf9cdf99996b268a30da000b5a24b469d29c,Yury Selivanov,2016-04-13 03:13:19+00:00,loop: Make create_unix_connection accept only UNIX sockets,False,6,5,1,,,,2840,1758,2108,82,1.5838509316770186,58.66498475267393,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
86,15e8dd177aee1bfd2dec85e2356e651d1f315303,Yury Selivanov,2016-04-13 03:36:38+00:00,transport: Expose _paused property & _force_close method (used by SSLProto),False,19,15,4,0.0,1.0,1.0,2846,1763,2113,82,1.5838509316770186,58.64279383932648,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
87,e49c67130877252c6040f8c26676c444c539f85e,Yury Selivanov,2016-04-13 03:47:56+00:00,loop: Expose readonly _closed property (some packages use it),False,4,3,1,1.0,1.0,1.0,2848,1765,2115,82,1.5838509316770186,58.63459738731764,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
88,0e384e25f5645d20865332e0e32bb5e4b4599fc3,Yury Selivanov,2016-04-13 04:35:07+00:00,Normalize reprs of TimerHandle and Handle,False,39,27,12,0.0,1.0,1.0,2854,1770,2120,82,1.5838509316770186,58.614400945421714,14.571428571428571,22.357142857142858,98.73048019641483,2.1320500927643784,354.9324140363446,19.71846744646359,0.0329101600654716
89,08246bd04bcae939355c8071c04939915d652ad4,Yury Selivanov,2016-04-13 21:54:42+00:00,testutils: Refactor test harness for sokets; implement tcp_client(),False,160,91,69,1.0,0.8571428571428571,0.0,2876,1787,2135,82,1.5857988165680474,58.51606452816772,14.357142857142858,21.928571428571427,96.09337294880088,2.0701453308596167,325.3120215049703,18.072890083609458,0.032031124316266944
90,494894701e9b3d140a875d46325bb680f07b8ad5,Yury Selivanov,2016-04-13 21:56:02+00:00,Implement SSL support for create_server and create_unix_server,False,640,466,174,0.6825396825396826,1.0,0.9603174603174603,3083,1913,2274,81,1.5824175824175823,57.44779977073507,15.785714285714286,25.142857142857142,112.60686184801754,2.2552185909328766,387.5111779974976,21.528398777638756,0.03753562061600585
91,2ed225eff9fd7e41bc34c6fe1a99a8b48cb3ce44,Yury Selivanov,2016-04-13 23:57:03+00:00,Implement SSL for create_connection and create_unix_connection,False,193,181,12,1.0,1.0,1.0,3212,1989,2369,81,1.576086956521739,56.971212123675514,16.5,27.285714285714285,124.23020633420374,2.27671882982442,420.4989758448824,23.361054213604582,0.04141006877806791
92,8a19d7eea2b1572a83e8da9a8c79510feac98bbb,Yury Selivanov,2016-04-14 02:56:39+00:00,build: Include only needed libuv files into distribution; fix build,False,11,7,4,1.0,1.0,1.0,3215,1990,2371,81,1.5869565217391304,56.90049155067334,16.714285714285715,27.5,125.50500584251814,2.3124331155387057,427.45081812090746,23.74726767338375,0.04183500194750605
93,6ab7ef56b452b42f8351f359fcdd4f2aa3ed3062,Yury Selivanov,2016-04-14 03:07:31+00:00,Bump version to 0.4.5,False,2,1,1,,,,3215,1990,2371,81,1.5869565217391304,56.90049155067334,16.714285714285715,27.5,125.50500584251814,2.3124331155387057,427.45081812090746,23.74726767338375,0.04183500194750605
94,629cdab72ee9e0769fac529bcc2e134f4fd35925,Yury Selivanov,2016-04-14 04:45:01+00:00,setup: Add description & classifiers,False,11,9,2,,,,3222,1990,2378,81,1.5869565217391304,56.90049155067334,16.714285714285715,27.5,125.50500584251814,2.3124331155387057,427.45081812090746,23.74726767338375,0.04183500194750605
95,4afe59e3fe8440080c11967f60cfec4f0486fe6c,Yury Selivanov,2016-04-14 19:03:41+00:00,Fix tests to run on Python 3.5.0,False,12,9,3,0.0,1.0,1.0,3228,1993,2381,83,1.5869565217391304,56.92424489021882,16.857142857142858,27.642857142857142,126.65761564844831,2.370145330859617,447.9365417605977,24.885363431144324,0.042219205216149434
96,9f6b55dbb4c65e67952535b04438b5d63295c1bb,Yury Selivanov,2016-04-14 20:04:23+00:00,tests/process: Another attempt to fix process tests under travis,False,14,4,10,1.0,0.0,0.0,3222,1991,2377,83,1.5869565217391304,56.93377451801103,16.857142857142858,27.642857142857142,126.65761564844831,2.370145330859617,447.9365417605977,24.885363431144324,0.042219205216149434
97,cb9afcec6f28eec9995c356f2980a3ed7bfa9af4,Yury Selivanov,2016-04-14 23:35:21+00:00,process: Refactor process transport to handle late stdio init,False,317,267,50,0.25925925925925924,1.0,0.9259259259259259,3308,2028,2451,83,1.5837837837837838,56.43670710431469,17.428571428571427,28.285714285714285,129.64150404207814,2.441573902288188,453.2695172081853,25.181639844899184,0.04321383468069271
98,18750c1e6d4bdf54e45b15a1443bbc0f12fb71f4,Yury Selivanov,2016-04-14 23:47:46+00:00,Bump version to 0.4.6,False,2,1,1,,,,3308,2028,2451,83,1.5837837837837838,56.43670710431469,17.428571428571427,28.285714285714285,129.64150404207814,2.441573902288188,453.2695172081853,25.181639844899184,0.04321383468069271
99,82fbf4d666929fff529162ab216514563a7471d8,Yury Selivanov,2016-04-15 05:08:57+00:00,tests/process: Add a test for read/write notimpl methods,False,8,8,0,0.0,1.0,1.0,3316,2033,2456,85,1.5837837837837838,56.46183985163499,17.428571428571427,28.285714285714285,129.64150404207814,2.441573902288188,453.2695172081853,25.181639844899184,0.04321383468069271
100,f7e888f03da787684f58a0553d892c77df046b06,Yury Selivanov,2016-04-15 05:24:13+00:00,tests/process: Test returncode & pid right after subprocess is spawned,False,3,3,0,0.0,1.0,1.0,3319,2035,2458,85,1.5837837837837838,56.455625312392044,17.428571428571427,28.285714285714285,129.64150404207814,2.441573902288188,453.2695172081853,25.181639844899184,0.04321383468069271
101,054c9dbfd0e0171f3c1de0b4af13ea7653f7699f,Yury Selivanov,2016-04-16 17:47:41+00:00,"Better seperate transports from servers; make many methods ""inline""",False,418,232,186,1.0,1.0,1.0,3322,2037,2460,85,1.5837837837837838,56.44937966239484,17.428571428571427,28.285714285714285,129.64150404207814,2.441573902288188,453.2695172081853,25.181639844899184,0.04321383468069271
102,de9f096fdb19210ad69fe43c77e208360e5e662a,Yury Selivanov,2016-04-16 19:27:19+00:00,streams: Test invalid 'write' call; fix possible refleak,False,8,7,1,1.0,1.0,1.0,3326,2040,2463,85,1.5837837837837838,56.44007859146268,17.428571428571427,28.285714285714285,129.64150404207814,2.441573902288188,453.2695172081853,25.181639844899184,0.04321383468069271
103,5df6ac428a3b62a569af9ebde51818479cd583c5,Yury Selivanov,2016-04-16 20:32:57+00:00,Fix tests on Travis,False,28,20,8,1.0,1.0,1.0,3338,2048,2471,85,1.5837837837837838,56.28955051716904,18.571428571428573,30.0,141.3984548483725,2.5183557763281263,513.9034625152655,28.550192361959198,0.04713281828279082
104,ee0ccd41564ea36b68f137d32651e4c31e003be1,Yury Selivanov,2016-04-16 23:13:13+00:00,signals: Use PyErr_SetInterrupt directly to interrupt running py code,False,65,52,13,0.08823529411764706,1.0,1.0,3377,2061,2503,85,1.5806451612903225,52.218329407387905,19.714285714285715,32.142857142857146,149.96988341980105,2.5659748239471747,519.6177482295512,28.867652679419514,0.04998996113993368
105,97a64505d154a6dc29f3826fde3265845da4462f,Yury Selivanov,2016-04-18 21:54:11+00:00,signals: Use 'sigaction' syscall for setting up signal handlers,False,114,101,13,0.046153846153846156,1.0,1.0,3456,2088,2561,87,1.5828877005347595,52.352485807213746,19.928571428571427,32.57142857142857,152.32169702579884,2.5659748239471747,521.1856239668831,28.95475688704906,0.05077389900859961
106,e7202088a367160c8894ef68dba54949f7726641,Yury Selivanov,2016-04-19 14:39:28+00:00,tests/signals: Silence resource warnings in subprocesses,False,29,25,4,0.0,1.0,1.0,3477,2088,2581,87,1.5828877005347595,52.337432136883706,19.928571428571427,32.57142857142857,152.32169702579884,2.5659748239471747,521.1856239668831,28.95475688704906,0.05077389900859961
107,cc10f73bf3f55f6e09f371e2b9caeb478fd38559,Yury Selivanov,2016-04-19 16:18:54+00:00,tests: Another attempt to fix test_signals_restore on Travis,False,138,47,91,1.0,0.0,0.0,3433,2078,2550,85,1.5775401069518717,52.10232939893883,19.928571428571427,32.5,152.26994570303734,2.5600224429947933,530.1544070613506,29.45302261451948,0.05075664856767911
108,deff28dc5ea1b9fe63809b9f65183b588c812696,Yury Selivanov,2016-04-19 18:46:38+00:00,Implement loop.create_datagram_endpoint,False,758,753,5,0.30120481927710846,0.5903614457831325,0.927710843373494,3561,2171,2646,91,1.6363636363636365,52.150761760745674,20.266666666666666,32.666666666666664,152.9542804323092,2.6314595432863688,534.1613507951762,29.675630599732013,0.05098476014410306
109,193ee328d3a6726158fb2edfd061783b561a9d3d,Yury Selivanov,2016-04-19 19:28:26+00:00,Add EventLoopPolicy,False,46,43,3,1.0,1.0,1.0,3598,2190,2663,91,1.6336633663366336,52.09808323564109,20.266666666666666,32.666666666666664,152.9542804323092,2.6314595432863688,534.1613507951762,29.675630599732013,0.05098476014410306
110,d82d5c838fff7385fc1c1581578c2bffa1ef8fe7,Yury Selivanov,2016-04-19 20:10:20+00:00,Make sure that getaddrinfo() accepts bytes (as asyncio/socket version),False,50,32,18,0.6666666666666666,0.0,0.6666666666666666,3606,2196,2669,91,1.6274509803921569,51.97301553791927,20.333333333333332,32.86666666666667,153.89704818570948,2.6385302503570762,537.4678891125305,29.859327172918363,0.05129901606190315
111,de89ae0ba230a86797731419ccb7b40c072d184e,Yury Selivanov,2016-04-19 20:47:49+00:00,tests: Add a macro test -- aiohttp client/server (optional),False,60,60,0,1.0,1.0,0.6666666666666666,3665,2237,2712,91,1.6201923076923077,52.445916713279004,19.25,31.0,144.57566314298785,2.504872109709759,504.0247362774399,28.001374237635552,0.04819188771432928
112,91b35f54d0337660f418eb45b4731a83dd7b62ee,Yury Selivanov,2016-04-19 21:00:52+00:00,Bump the version to v0.4.7,False,2,1,1,,,,3665,2237,2712,91,1.6201923076923077,52.445916713279004,19.25,31.0,144.57566314298785,2.504872109709759,504.0247362774399,28.001374237635552,0.04819188771432928
113,17fe7baa302f8d4279529acc58211e01e4346440,Yury Selivanov,2016-04-20 00:09:03+00:00,tcp: Cache peername & sockname in TCPTransport._call_connection_made,False,71,66,5,0.0,1.0,1.0,3673,2241,2718,93,1.6201923076923077,52.46995104481574,19.25,31.0,144.57566314298785,2.504872109709759,504.0247362774399,28.001374237635552,0.04819188771432928
114,b1b8a90a9fe336bc19c2028011ecac2a83c88a57,Yury Selivanov,2016-04-20 00:45:02+00:00,tests/udp: Unbreak tests under 3.5.0,False,18,12,6,0.0,1.0,1.0,3679,2246,2723,94,1.6394230769230769,52.43480157545721,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
115,39416708f60c5d86f3847630e3f2eecd0b86a4fc,Yury Selivanov,2016-04-25 20:07:00+00:00,bench/server: Use TCP_NODELAY; raise the number of bytes to recv,False,6,4,2,1.0,0.0,1.0,3681,2248,2725,94,1.6442307692307692,52.410727095610426,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
116,814b153e220e5b3a1feed760e58c8bb17b711b7f,Yury Selivanov,2016-04-25 22:27:17+00:00,examples/bench/server: Add --proto option,False,27,27,0,1.0,1.0,1.0,3708,2269,2746,94,1.6367924528301887,52.205712349303276,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
117,23a27e57aa5ed5986548204e520c97561f7c2e6a,Yury Selivanov,2016-04-25 23:34:50+00:00,examples/bench: Drop TCP_NODELAY setting,False,4,1,3,0.0,1.0,0.0,3706,2267,2744,94,1.6320754716981132,52.226782220583054,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
118,358d1cb5a7e17a685e1d62f37dab150ca83a9e7e,Yury Selivanov,2016-04-26 20:04:16+00:00,examples/bench: Try to remove UNIX socket file before binding to it,False,3,3,0,,,,3709,2270,2747,94,1.6320754716981132,52.199466962245054,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
119,4ecf55d4cbc0d81aefb4d5944672b3af9cb621e8,Yury Selivanov,2016-04-28 01:04:43+00:00,Bump version to 0.4.8,False,2,1,1,,,,3709,2270,2747,94,1.6320754716981132,52.199466962245054,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
120,8e93e3bf1f6b8eae6b49528a60d056bda9dc8bed,Yury Selivanov,2016-04-28 04:18:37+00:00,Bump version to 0.4.9,False,2,1,1,,,,3709,2270,2747,94,1.6320754716981132,52.199466962245054,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
121,ad88546c2bf22cd48ea87fb7779167670aab86d5,Yury Selivanov,2016-05-04 00:29:19+00:00,Fix create_server to accept only proto and sock args,False,8,7,1,1.0,1.0,1.0,3713,2273,2750,94,1.6291079812206573,52.18311216044635,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
122,6502900a2f9d4bd1be9f35f098d567a126600274,Yury Selivanov,2016-05-04 00:30:00+00:00,Bump version to v0.4.10,False,2,1,1,,,,3713,2273,2750,94,1.6291079812206573,52.18311216044635,19.4375,31.1875,145.83469566774244,2.538315092165899,514.7063591685056,28.59479773158365,0.04861156522258081
123,f27f985137c4e2dc7bad224475f6f78debd9dcaf,Chris Laws,2016-05-04 15:26:35+00:00,fix port value mismatch in create_server,False,28,28,0,1.0,1.0,1.0,3739,2287,2766,95,1.6261682242990654,52.147469771340106,19.5,31.3125,146.67116654557094,2.535479910714286,516.8744978747493,28.715249881930518,0.04889038884852363
124,01007e1f6ac18013646771bfbd9a254898b77051,Yury Selivanov,2016-05-04 15:32:26+00:00,Bump version to v0.4.11,False,2,1,1,,,,3739,2287,2766,95,1.6261682242990654,52.147469771340106,19.5,31.3125,146.67116654557094,2.535479910714286,516.8744978747493,28.715249881930518,0.04889038884852363
125,448eea338ae4b07dbf0afc5dd00593164531e482,Yury Selivanov,2016-05-05 16:42:42+00:00,loop: Make loop.getaddrinfo behave like socket.getaddrinfo in edge cases,False,74,58,16,0.9333333333333333,0.0,0.9333333333333333,3759,2304,2781,95,1.6153846153846154,51.92387632304769,19.5625,31.3125,146.81329366260275,2.5797507440476193,521.9820314142369,28.999001745235386,0.0489377645542009
126,b6fa37a1419845995d4ef4345c86236043f8ec8c,Yury Selivanov,2016-05-05 17:06:10+00:00,Package libuv/configure in the sdist,False,21,15,6,1.0,1.0,1.0,3761,2305,2782,95,1.6199095022624435,51.879698886291244,19.625,31.4375,147.4713939087202,2.5797507440476193,523.9563321525893,29.108685119588298,0.049157131302906734
127,f72398a8719fe595719b90adcf7fb701e1d262b0,Yury Selivanov,2016-05-05 17:14:15+00:00,Bump the version to v0.4.12,False,2,1,1,,,,3761,2305,2782,95,1.6199095022624435,51.879698886291244,19.625,31.4375,147.4713939087202,2.5797507440476193,523.9563321525893,29.108685119588298,0.049157131302906734
128,00b3a398ecab5ef4e27b0e73a6395b9cae751811,Yury Selivanov,2016-05-05 18:05:56+00:00,Another fix for getaddrinfo: don't set `host` to None if it's empty,False,8,4,4,0.0,0.0,0.0,3763,2306,2783,95,1.6199095022624435,51.875445281947734,19.5625,31.4375,147.32926679168838,2.535479910714286,518.8487986131017,28.82493325628343,0.049109755597229465
129,aebe59e292da87e6068c64d387e1d2ce4f021c1c,Yury Selivanov,2016-05-05 22:22:28+00:00,loop: Add support for reuse_port in create_server/create_datagram,False,67,57,10,0.0,0.5,1.0,3765,2306,2785,95,1.6199095022624435,51.87034318095006,19.5625,31.4375,147.32926679168838,2.535479910714286,518.8487986131017,28.82493325628343,0.049109755597229465
130,57b3553ed2ccb53e6669a0b3d5c08397ac002913,Yury Selivanov,2016-05-05 22:36:35+00:00,Fix tests under CPython 3.5.0,False,20,16,4,0.0,0.0,1.0,3777,2314,2795,95,1.6334841628959276,51.73967860340542,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
131,25a6bca1ec2f1e733bb989fbcfb7f5be1fca5ad8,Yury Selivanov,2016-05-05 22:45:19+00:00,Cut v0.4.13 release.,False,2,1,1,,,,3777,2314,2795,95,1.6334841628959276,51.73967860340542,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
132,d350f916fbf828bad39a58b25c5bea5384fc96e2,Yury Selivanov,2016-05-06 02:08:20+00:00,Fix add_signal_handler to raise the same exc asyncio raises for inv signal,False,22,21,1,1.0,1.0,1.0,3789,2323,2804,95,1.6278026905829597,51.663933740663396,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
133,51f69418a7bdba95fd9191c1e2a383c63593323d,Yury Selivanov,2016-05-06 02:26:07+00:00,tests/sockets: Test that loop.sock_*() methods error on blocking socks,False,17,17,0,1.0,1.0,1.0,3806,2335,2816,95,1.625,51.55521392846602,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
134,db68cec9e1139dc18c0642ad68290772335b3ce1,Yury Selivanov,2016-05-07 01:04:13+00:00,Bump version to v0.4.14,False,2,1,1,,,,3806,2335,2816,95,1.625,51.55521392846602,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
135,77dc53e7b38754578ef38dc72e1ffce310ab2c92,Yury Selivanov,2016-05-07 01:25:15+00:00,setup.py: Add some metadata,False,5,5,0,,,,3811,2335,2821,95,1.625,51.55521392846602,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
136,f894ac74032fbf8875337303803c23ab38152a97,claws,2016-05-07 15:05:33+00:00,Fix code style in unittest,False,111,38,73,0.0,0.0,0.0,3776,2304,2786,93,1.6278026905829597,51.691859884582954,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
137,f28a30c708631b9d7a7123550e512dfa3c40bfff,Yury Selivanov,2016-05-09 02:46:30+00:00,loop: Let 'create_server' fail on socket bind errors,False,23,20,3,1.0,1.0,1.0,3790,2311,2796,93,1.625,51.66331129067158,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
138,291f3cd9d4bba77c3fa74d61f7471f04ba8ff736,Yury Selivanov,2016-05-09 02:52:17+00:00,Bump version to v0.4.15,False,2,1,1,,,,3790,2311,2796,93,1.625,51.66331129067158,20.25,32.1875,152.86213677296513,2.6490476190476193,585.4917952264324,32.52732195702402,0.05095404559098837
139,8511fec1f9a610b0b26547a1620ce034ad9d9947,Chris Laws,2016-05-09 19:37:35+00:00,Add documentation; integrate sphinx,False,338,335,3,,,,3871,2345,2851,99,1.625,54.50664592063208,19.058823529411764,30.294117647058822,143.87024637455542,2.4932212885154064,551.0511013895834,30.61395007719908,0.04795674879151847
140,268565d2e0c75f6835b06d91b10cb75760087ea2,Yury Selivanov,2016-05-09 19:37:39+00:00,Rename uvloop._Loop -> uvloop.Loop,False,19,11,8,,,,3871,2345,2851,99,1.625,54.50664592063208,19.058823529411764,30.294117647058822,143.87024637455542,2.4932212885154064,551.0511013895834,30.61395007719908,0.04795674879151847
141,fadd27590d6d07ebc3d0ddb72d86f26b07e7f2f1,Yury Selivanov,2016-05-09 19:37:40+00:00,docs: A bunch of small customizations,False,41,21,20,,,,3874,2350,2855,99,1.625,53.38082950931907,19.176470588235293,30.41176470588235,143.98789343337896,2.5226330532212886,551.1099249189951,30.61721805105529,0.04799596447779299
142,d65265689baf9b7a51952e980ec870df4a3a660b,Massimiliano Torromeo,2016-05-09 20:06:14+00:00,"Allow dynamic linking to system libuv

Added build_ext option --use-system-libuv to switch between
dynamic and static linking.",False,37,28,9,0.0,0.0,1.0,3893,2360,2869,100,1.6355555555555557,53.554764859605804,19.529411764705884,30.764705882352942,146.216724928748,2.5814565826330536,566.8455580819165,31.49141989343981,0.04873890830958266
143,60f43562b4d0b5769f4f698658da9e7130e50570,Yury Selivanov,2016-05-09 22:17:38+00:00,Bump version to v0.4.16,False,2,1,1,,,,3893,2360,2869,100,1.6355555555555557,53.554764859605804,19.529411764705884,30.764705882352942,146.216724928748,2.5814565826330536,566.8455580819165,31.49141989343981,0.04873890830958266
144,e1d32b2127f1ca2a55c77b469358d22a278ec7df,Yury Selivanov,2016-05-11 03:31:48+00:00,streams: Optimize stream.write for bytes & bytearrays,False,41,35,6,1.0,1.0,1.0,3895,2362,2871,100,1.6355555555555557,53.55013398699207,19.529411764705884,30.764705882352942,146.216724928748,2.5814565826330536,566.8455580819165,31.49141989343981,0.04873890830958266
145,2d69a4cb421cfd7766110906312cc767d7c7f78f,Yury Selivanov,2016-05-11 15:51:44+00:00,Bump version to v0.4.17,False,2,1,1,,,,3895,2362,2871,100,1.6355555555555557,53.55013398699207,19.529411764705884,30.764705882352942,146.216724928748,2.5814565826330536,566.8455580819165,31.49141989343981,0.04873890830958266
146,a20025558296cfd030d2709be664284d8e12a07e,Yury Selivanov,2016-05-11 16:17:10+00:00,setup.py: Enable tests discovery,False,10,9,1,1.0,1.0,1.0,3903,2367,2877,100,1.6327433628318584,53.47586278073199,19.529411764705884,30.764705882352942,146.216724928748,2.5814565826330536,566.8455580819165,31.49141989343981,0.04873890830958266
147,9bc6076200b4284b9ad08c0da469ed8065e08920,Yury Selivanov,2016-05-11 16:18:01+00:00,Bump version to v0.4.18,False,2,1,1,,,,3903,2367,2877,100,1.6327433628318584,53.47586278073199,19.529411764705884,30.764705882352942,146.216724928748,2.5814565826330536,566.8455580819165,31.49141989343981,0.04873890830958266
148,8f93b011795de3947bcf78dbd540c433f0568df6,Elvis Pranskevichus,2016-05-11 16:57:15+00:00,setup.py: Fix use-system-libuv for setup.py test,False,3,2,1,1.0,1.0,1.0,3904,2368,2878,100,1.6371681415929205,53.43304445694315,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
149,904d15fba1d9b5259e1ddc21240100e1368d2a2f,Yury Selivanov,2016-05-11 16:57:42+00:00,Bump version to v0.4.19,False,2,1,1,,,,3904,2368,2878,100,1.6371681415929205,53.43304445694315,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
150,dbacc2b1b9a288a2edf904e6422ecb9e8b69efec,Yury Selivanov,2016-05-13 14:28:25+00:00,setup.py: Call `make` with CFLAGS=fPIC & O2,False,5,4,1,1.0,1.0,1.0,3907,2369,2880,100,1.6371681415929205,53.41765094341092,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
151,ebdb030c0ed0636ea914c82a3d3d450bd190439b,Yury Selivanov,2016-05-13 15:13:50+00:00,setup.py: Fix timestamps before building libuv,False,6,6,0,0.0,1.0,1.0,3913,2370,2883,102,1.6371681415929205,53.66314424294453,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
152,fbc8bb4248fa949c07097a95f655b43d0215a244,Yury Selivanov,2016-05-13 15:24:38+00:00,Bump version to v0.4.20,False,2,1,1,,,,3913,2370,2883,102,1.6371681415929205,53.66314424294453,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
153,b28b30c9fac739de938a4f620dca1532e3230aad,Yury Selivanov,2016-05-13 15:25:47+00:00,Bump version to v0.4.21,False,2,1,1,,,,3913,2370,2883,102,1.6371681415929205,53.66314424294453,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
154,b310767199e69fe1b82aaffe5f092a2ddb15e13d,Yury Selivanov,2016-05-14 17:41:24+00:00,"Use Cython 'async def' coroutines without @asyncio.coroutine

This commit boosts the performance of 'async def' coroutines
compiled with Cython up to 50%.",False,63,47,16,1.0,1.0,1.0,3917,2372,2885,104,1.6371681415929205,54.208752778722456,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
155,dba39bd2d88d3eada264125dd1ebdee640bda7d2,Yury Selivanov,2016-05-14 18:02:45+00:00,"Optimize sock_recv & sock_sendall methods.

Echo-server with 100kb messages is now 100% faster.",False,55,43,12,0.0,1.0,1.0,3921,2372,2889,104,1.6371681415929205,54.19540954919676,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
156,47971d69369ecdd2d5324615ac34337638a3308c,Yury Selivanov,2016-05-14 19:04:09+00:00,examples/bench: Update server to use bigger bufs and TCP_NODELAY,False,27,18,9,0.0,0.0,1.0,3930,2380,2897,104,1.6460176991150441,54.13439256374132,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
157,fa5ab570503b9da2f50e1b1bd8378fa32ab72f5f,Yury Selivanov,2016-05-14 20:43:30+00:00,Bump version to v0.4.22,False,2,1,1,,,,3930,2380,2897,104,1.6460176991150441,54.13439256374132,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
158,aca23901e8c48765dd334d1a104605a463c1f429,Yury Selivanov,2016-05-14 21:42:56+00:00,test: Check that Cython coroutines are supported by ensure_future,False,13,12,1,1.0,1.0,1.0,3941,2390,2907,104,1.6563876651982379,54.08772209025987,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
159,e2cf01841b777e2cc73ac81aef9cd8cc68524fd7,Yury Selivanov,2016-05-14 22:37:26+00:00,test: Test that cython coroutines have __qualname__ and __name__,False,4,4,0,1.0,1.0,1.0,3945,2392,2911,104,1.6563876651982379,54.079462700581516,19.705882352941178,30.941176470588236,147.3674021850831,2.610868347338936,576.5481750738318,32.03045417076844,0.04912246739502771
160,85a460566cefb65fd8baf649c7c353dc3e367343,Yury Selivanov,2016-05-14 23:30:48+00:00,Fix another Cython bug; patch asyncio to work with Cython coroutines,False,44,44,0,0.0,1.0,1.0,3973,2408,2928,106,1.6710526315789473,55.675262456329804,19.055555555555557,29.666666666666668,140.51365761924515,2.5491534391534394,546.5177209030634,30.36209560572574,0.04683788587308172
161,a3caa1960994ae90fb71a8220f6ad98901ecba83,Yury Selivanov,2016-05-14 23:31:23+00:00,Bump version to v0.4.23,False,2,1,1,,,,3973,2408,2928,106,1.6710526315789473,55.675262456329804,19.055555555555557,29.666666666666668,140.51365761924515,2.5491534391534394,546.5177209030634,30.36209560572574,0.04683788587308172
162,76bb934d802f33aced864514c7ff9904df3d4d20,Yury Selivanov,2016-05-16 00:37:53+00:00,Fix create_server to bind correctly to ipv6 addresses on Linux,False,37,33,4,1.0,1.0,1.0,3997,2425,2947,106,1.6782608695652175,55.58665118233424,19.166666666666668,29.833333333333332,141.62704063204654,2.546549272486773,551.5537681362399,30.641876007568882,0.04720901354401552
163,19afc973284a1a1a7775814ff8e38d66f05f85de,Yury Selivanov,2016-05-16 00:40:23+00:00,Bump the version to v0.4.24,False,2,1,1,,,,3997,2425,2947,106,1.6782608695652175,55.58665118233424,19.166666666666668,29.833333333333332,141.62704063204654,2.546549272486773,551.5537681362399,30.641876007568882,0.04720901354401552
164,66c35f18d3b45e7a50a215222561c293efb58018,Yury Selivanov,2016-05-16 00:52:38+00:00,Add a doc comment to the test_create_server_5 test.,False,4,4,0,,,,4001,2425,2947,109,1.6782608695652175,55.62924818254509,19.166666666666668,29.833333333333332,141.62704063204654,2.546549272486773,551.5537681362399,30.641876007568882,0.04720901354401552
165,1ecfe5be3fd0b2d2892392e1aad7f4ad53909c50,Yury Selivanov,2016-05-16 02:44:16+00:00,tests: Add a dedicated test for create_server/reuse_port,False,34,27,7,1.0,1.0,1.0,4021,2434,2961,109,1.683982683982684,55.587884520777465,19.055555555555557,29.77777777777778,141.01255672862482,2.5072635582010587,531.0687565426847,29.503819807926927,0.047004185576208286
166,b89ba762701912bd4a8eb90fd77656d3facceba8,Yury Selivanov,2016-05-16 02:49:15+00:00,tests/tcp: Fix test skipping logic,False,9,6,3,1.0,1.0,1.0,4024,2435,2964,109,1.683982683982684,55.584271171903914,19.055555555555557,29.77777777777778,141.01255672862482,2.5072635582010587,531.0687565426847,29.503819807926927,0.047004185576208286
167,f7e4c4ec9f88e10a0536e3750f3b4a2d8e16468a,Yury Selivanov,2016-05-16 02:57:20+00:00,tests/tcp: Use server.wait_closed() to avoid ResourceWarnings,False,6,6,0,0.75,1.0,1.0,4030,2439,2968,109,1.683982683982684,55.57591522079945,19.055555555555557,29.77777777777778,141.01255672862482,2.5072635582010587,531.0687565426847,29.503819807926927,0.047004185576208286
168,a6fe31d7f687df6934143fd2dda1cd323f3d31fb,Yury Selivanov,2016-05-16 18:59:22+00:00,Fix patched _format_coroutine to support Cython generators,False,17,15,2,0.0,0.0,1.0,4043,2447,2978,109,1.696969696969697,54.99337843584023,19.166666666666668,29.944444444444443,141.7092905643893,2.5072635582010587,532.1138572963314,29.5618809609073,0.047236430188129785
169,f3d6dc74f7217024c07b837cee0865702d462bc1,Yury Selivanov,2016-05-16 20:45:55+00:00,Add loop.get_exception_handler method (will be in asyncio in 3.5.2),False,10,10,0,0.0,1.0,1.0,4048,2451,2982,110,1.7056277056277056,54.987823147926775,19.166666666666668,29.944444444444443,141.7092905643893,2.5072635582010587,532.1138572963314,29.5618809609073,0.047236430188129785
170,a62541a2331d7a770bb54da234d10d120a936851,Yury Selivanov,2016-05-16 20:50:09+00:00,Add loop.create_future() method (will be available in Python 3.5.2),False,10,10,0,1.0,1.0,1.0,4054,2456,2987,110,1.7025862068965518,54.966478454909534,19.166666666666668,29.944444444444443,141.7092905643893,2.5072635582010587,532.1138572963314,29.5618809609073,0.047236430188129785
171,7d78e505f201beac087ce094936a90a057410004,Yury Selivanov,2016-05-17 22:34:01+00:00,setup.py: Make sure CFLAGS has at least one -O,False,10,6,4,,,,4056,2460,2988,110,1.7112068965517242,54.907466071593554,19.166666666666668,30.055555555555557,142.25975682109896,2.518627194564695,536.6739698093011,29.81522054496118,0.047419918940366325
172,ca548bc45a8c3c3b18f0e9e202a5217d5d209116,Yury Selivanov,2016-05-17 23:48:13+00:00,"Buffer sequential transport.write calls into one uv_write call

This increases throughput ~100% when many small writes are issued.",False,379,325,54,0.4,1.0,1.0,4106,2493,3025,110,1.7124463519313304,54.796177711003395,19.666666666666668,30.833333333333332,147.95369736774845,2.501094727032227,553.0414586537582,30.724525480764342,0.04931789912258282
173,0c099840ba55ad84f5ede7f685d66fff64a0aac1,Yury Selivanov,2016-05-18 01:22:11+00:00,streams: Don't use malloc for buffers for small writes,False,129,91,38,0.0,0.0,1.0,4116,2501,3033,111,1.7124463519313304,54.78041845104421,19.88888888888889,31.166666666666668,150.46416020120958,2.495412908850409,560.3186508291809,31.12881393495449,0.05015472006706987
174,46dd8f38c8ecf4e98fe3ebed9e54e5aa6f7e354a,Yury Selivanov,2016-05-18 23:34:47+00:00,"Introduce new way of scheduling transport writes (3x faster!)

Instead of making a `write` syscall on each `transport.write`
call, we now have an internal buffer of queued write calls.

After all callbacks are done, or after the selector poll is
complete, we flush the buffers using as low number of syscalls
as possible.

We now use zero-copy aggressively.  For instance, writelines
doesn't concat all buffers into one bytes object; instead each
buffer passed to writelines will be repackaged and passed to
the writev syscall (along with all other buffered data).

This commit (+ 2 before this one) completes the refactoring
of transport writes.  Sequential writes of small buffers are now
~3x faster. For instance: transport.write 15360 buffers by
0.01 MB:

 - before:  0.32 seconds (466.87 MB/sec)
 - after:   0.09 seconds (1657.38 MB/sec)",False,370,256,114,0.75,1.0,1.0,4126,2509,3041,111,1.7124463519313304,54.74147190000035,19.88888888888889,31.166666666666668,150.46416020120958,2.495412908850409,560.3186508291809,31.12881393495449,0.05015472006706987
175,14e883ec749ff3af051cf72dd125ef8c4453dab7,Yury Selivanov,2016-05-18 23:53:36+00:00,setup: Compile loop.c with -O2,False,3,2,1,,,,4127,2509,3042,111,1.7124463519313304,54.73837304950227,19.88888888888889,31.166666666666668,150.46416020120958,2.495412908850409,560.3186508291809,31.12881393495449,0.05015472006706987
176,f853407809e00b889c5887adb16ffb2d85fab34f,Yury Selivanov,2016-05-19 00:21:41+00:00,Bump version to v0.4.25,False,2,1,1,,,,4127,2509,3042,111,1.7124463519313304,54.73837304950227,19.88888888888889,31.166666666666668,150.46416020120958,2.495412908850409,560.3186508291809,31.12881393495449,0.05015472006706987
177,846a1523a65c034761ce3b745ea9aa35bf22f391,Yury Selivanov,2016-05-20 15:10:42+00:00,loop.time: Don't use libuv's time cache (issue #29),False,12,12,0,1.0,1.0,1.0,4136,2516,3049,111,1.7136752136752136,54.63742761382203,20.444444444444443,31.833333333333332,155.0584886017035,2.6033253667628666,603.5059627740569,33.528109043003155,0.05168616286723451
178,dc0d2d1ed88270451699719f00c2b44de469229f,Yury Selivanov,2016-05-20 15:46:13+00:00,tests: Fix test to pass under latest asyncio/master,False,2,1,1,,,,4136,2516,3049,111,1.7136752136752136,54.63742761382203,20.444444444444443,31.833333333333332,155.0584886017035,2.6033253667628666,603.5059627740569,33.528109043003155,0.05168616286723451
179,ced645ae51dae09283ce60274046f76bff04a6ad,Yury Selivanov,2016-05-20 16:19:07+00:00,"Don't cleanup UNIX server sockets paths when server is closing

Fixes issue #28.",False,61,50,11,0.7142857142857143,1.0,1.0,4157,2527,3063,113,1.7106382978723405,54.65740350491772,20.444444444444443,31.833333333333332,155.0584886017035,2.6033253667628666,603.5059627740569,33.528109043003155,0.05168616286723451
180,eac660a9469c5a0dd9c8cbd2ee0b84a9dfefacbf,Yury Selivanov,2016-05-20 19:27:06+00:00,tests: Test that callback handles are weak-refable,False,7,6,1,1.0,1.0,1.0,4162,2533,3068,114,1.7076271186440677,54.654452464129804,20.444444444444443,31.833333333333332,155.0584886017035,2.6033253667628666,603.5059627740569,33.528109043003155,0.05168616286723451
181,10cefd710b544c6c9d5cc20aa0d1b5fe8632ff7b,Yury Selivanov,2016-05-20 19:37:23+00:00,tests: Refactor test for coroutines compiled with Cython,False,56,32,24,1.0,0.0,0.0,4165,2536,3068,114,1.7004219409282701,57.080825099045164,19.36842105263158,30.157894736842106,146.8975155174033,2.4663082421964,571.7424910491065,31.763471724950357,0.04896583850580111
182,8246724aec77aab91709c46fc2176e7d9553ab53,Yury Selivanov,2016-05-20 20:31:00+00:00,Log tracebakcs for handles in debug mode,False,86,76,10,0.48484848484848486,1.0,0.48484848484848486,4203,2560,3098,115,1.7058823529411764,56.963319486553594,19.842105263157894,30.842105263157894,151.55542481357168,2.4763560890863525,600.365020067783,33.353612225987945,0.05051847493785724
183,0a321dec1b98f32fe8fb708556218d1fdf2b5372,Yury Selivanov,2016-05-20 20:31:13+00:00,"Implement fast Task & Future.

In some cases this can boost the performance up to 30%.",False,1393,1381,12,0.6442451420029895,1.0,0.9745889387144993,5116,3211,3778,163,1.6112852664576802,55.23745147165635,21.38095238095238,33.095238095238095,163.33123826333673,2.5969114615543187,627.484659306401,34.860258850355606,0.05444374608777891
184,9c8489f69f11cf5c31505254ff4bbd895f13d96d,Yury Selivanov,2016-05-20 21:36:25+00:00,Add tests for _chain_future (threough _wrap_future),False,66,59,7,1.0,1.0,1.0,5147,3239,3806,163,1.6055900621118013,55.156229114065376,21.38095238095238,33.095238095238095,163.33123826333673,2.5969114615543187,627.484659306401,34.860258850355606,0.05444374608777891
185,43d60ce36558f0eeba594514d3c41a1da46339a2,Yury Selivanov,2016-05-20 21:54:35+00:00,Mark files that were copied with modifications from CPython.,False,10,10,0,,,,5151,3239,3806,165,1.6055900621118013,55.185299239976715,21.38095238095238,33.095238095238095,163.33123826333673,2.5969114615543187,627.484659306401,34.860258850355606,0.05444374608777891
186,962213ec6b98dc744f425a86e58e34b08f7f6ea6,Yury Selivanov,2016-05-21 20:55:47+00:00,tests: Make call_at test more stable,False,5,2,3,0.0,0.0,0.0,5150,3238,3805,165,1.6055900621118013,55.18750427308711,21.38095238095238,33.095238095238095,163.33123826333673,2.5969114615543187,627.484659306401,34.860258850355606,0.05444374608777891
187,756d0c1e17fe7fa209e2fbe302d5c517e185f89e,Yury Selivanov,2016-05-21 20:58:59+00:00,Bump the version to v0.4.26,False,2,1,1,,,,5150,3238,3805,165,1.6055900621118013,55.18750427308711,21.38095238095238,33.095238095238095,163.33123826333673,2.5969114615543187,627.484659306401,34.860258850355606,0.05444374608777891
188,f5ca51bcc0a42bccdc0c177f32d1d06aa275c267,Yury Selivanov,2016-05-23 02:28:09+00:00,Fix call_later to update libuv time,False,20,19,1,1.0,1.0,1.0,5164,3247,3814,167,1.6037151702786379,55.184007761062404,21.476190476190474,33.23809523809524,164.32056312421804,2.592149556792414,631.3015875251824,35.07231041806568,0.054773521041406016
189,aa99a1895d4f15fd7c3078aa8a914fc4cf1873da,Yury Selivanov,2016-05-23 02:28:41+00:00,Bump the version to v0.4.27,False,2,1,1,,,,5164,3247,3814,167,1.6037151702786379,55.184007761062404,21.476190476190474,33.23809523809524,164.32056312421804,2.592149556792414,631.3015875251824,35.07231041806568,0.054773521041406016
190,14d83c1ce6b54f8773c4b0abcda2b1bfff0a9585,Yury Selivanov,2016-05-23 16:04:04+00:00,Fix loop.create_server() to error on non-int backlog argument,False,31,27,4,1.0,1.0,1.0,5177,3254,3823,168,1.6080246913580247,55.16961724009358,21.476190476190474,33.23809523809524,164.32056312421804,2.592149556792414,631.3015875251824,35.07231041806568,0.054773521041406016
191,c4bd13b2db6242f954214a645ca35706bce91cca,Yury Selivanov,2016-05-23 18:07:59+00:00,tests: Add more tests for getaddrinfo,False,49,32,17,1.0,1.0,1.0,5192,3263,3832,170,1.5957446808510638,55.2340409579401,21.476190476190474,33.23809523809524,164.32056312421804,2.592149556792414,631.3015875251824,35.07231041806568,0.054773521041406016
192,011b1295eb7e948a8c11223b75e2eeae2bb744bb,Yury Selivanov,2016-05-23 18:27:41+00:00,tests: More tests for getaddrinfo(),False,31,24,7,1.0,1.0,1.0,5209,3279,3849,170,1.5957446808510638,55.12460909633886,21.476190476190474,33.333333333333336,164.70151550517042,2.6000860647289223,633.2698414934364,35.181657860746455,0.054900505168390144
193,90214faa05617df0e4613674970f97d0b0acc7a2,Yury Selivanov,2016-05-23 19:46:51+00:00,Fix loop.create_connection() to skip DNS lookup if host is an IP address,False,102,71,31,1.0,1.0,1.0,5211,3279,3851,170,1.5957446808510638,55.12460909633886,21.476190476190474,33.333333333333336,164.70151550517042,2.6000860647289223,633.2698414934364,35.181657860746455,0.054900505168390144
194,67ab05da3e8e5fca4d2ff1a03b9a23b52e65d39d,Yury Selivanov,2016-05-23 22:38:03+00:00,test: Fix getaddrinfo tests,False,4,2,2,,,,5211,3279,3851,170,1.5957446808510638,55.12460909633886,21.476190476190474,33.333333333333336,164.70151550517042,2.6000860647289223,633.2698414934364,35.181657860746455,0.054900505168390144
195,25a76b2c996eacba893dee5c90db73e9f3a67296,Yury Selivanov,2016-05-23 22:48:52+00:00,tests/dns: Add a test for '::1' ipv6 address,False,4,4,0,1.0,1.0,1.0,5215,3282,3854,170,1.593939393939394,55.10172108577571,21.476190476190474,33.333333333333336,164.70151550517042,2.6000860647289223,633.2698414934364,35.181657860746455,0.054900505168390144
196,3d7a4b22ac8c1bc4c5563cb4df27a487c5e99319,Yury Selivanov,2016-05-23 22:48:52+00:00,Bump the version to v0.4.28,False,2,1,1,,,,5215,3282,3854,170,1.593939393939394,55.10172108577571,21.476190476190474,33.333333333333336,164.70151550517042,2.6000860647289223,633.2698414934364,35.181657860746455,0.054900505168390144
197,fb793bc049af49a41276457b942022cfe22bbd1b,Yury Selivanov,2016-05-23 23:24:04+00:00,tests: Make base test class complain if there are duplicate tests,False,93,92,1,0.7647058823529411,0.7647058823529411,0.6617647058823529,5306,3340,3920,171,1.6235294117647059,56.993122874849114,20.681818181818183,32.04545454545455,158.81729792770452,2.505134912436049,620.8602293248724,34.492234962492915,0.05293909930923484
198,26b3b048e9a355db86869f9454af2a7c84523981,Yury Selivanov,2016-05-24 14:23:53+00:00,tests: Drop dead code,False,6,0,6,1.0,1.0,1.0,5300,3335,3915,171,1.6088235294117648,57.02224385433305,20.681818181818183,32.04545454545455,158.81729792770452,2.505134912436049,620.8602293248724,34.492234962492915,0.05293909930923484
199,48a6b1829eff8aa96924327a42d2688dd6aae421,Yury Selivanov,2016-05-24 15:32:05+00:00,Rename benchmarks,False,0,0,0,,,,5300,3335,3915,171,1.6088235294117648,57.02224385433305,20.681818181818183,32.04545454545455,158.81729792770452,2.505134912436049,620.8602293248724,34.492234962492915,0.05293909930923484
200,9fe1a650fdf32dc9d1d940d37b723ad53df11c6f,Yury Selivanov,2016-05-24 15:52:45+00:00,examples/bench: Fix client to use TCP_NODELAY and end messages with b'\n',False,15,11,4,0.0,0.0,1.0,5307,3338,3918,171,1.611764705882353,56.95461054518439,20.863636363636363,32.31818181818182,160.51368488051412,2.497559154860291,627.6754974222538,34.87086096790299,0.05350456162683804
201,71d8ef8a872656df8a2319032855cb2b5ea5ed4b,Yury Selivanov,2016-05-24 15:53:44+00:00,examples/bench: Add a new benchmark - readline server,False,94,94,0,0.23809523809523808,0.23809523809523808,1.0,5401,3413,3994,172,1.6257309941520468,56.783622046548594,20.391304347826086,31.391304347826086,155.1235772354379,2.4541870176924525,602.7683807328359,33.487132262935326,0.051707859078479294
202,6a1678ed48b25eb037aa2529b95e1a380e669753,Yury Selivanov,2016-05-24 17:48:40+00:00,examples/bench: Add --mpr (messages/request) param to echoclient.py,False,12,10,2,0.0,0.0,1.0,5409,3419,4001,172,1.628654970760234,56.676891451931,20.565217391304348,31.782608695652176,157.4716652822397,2.497665278562018,626.030778397151,34.77948768873061,0.05249055509407992
203,9057fcb839d63e688ca143d29d428d6ef908c82f,Yury Selivanov,2016-05-29 08:17:42+00:00,Bump the version to 0.4.29,False,2,1,1,,,,5409,3419,4001,172,1.628654970760234,56.676891451931,20.565217391304348,31.782608695652176,157.4716652822397,2.497665278562018,626.030778397151,34.77948768873061,0.05249055509407992
204,b5b3b12dbba915f635b583c8b51c1f41ed219d9c,Yury Selivanov,2016-06-08 21:18:06+00:00,subprocess: Support 'preexec_fn' and 'restore_signals' arguments,False,269,248,21,0.575,1.0,1.0,5465,3450,4041,177,1.6366279069767442,56.550634932788725,20.956521739130434,32.17391304347826,159.71693400553858,2.5628826698663656,636.2736131003617,35.348534061131204,0.05323897800184619
205,7cb4451a38e28f9e179b75c08cfa6a9b3d85db68,Yury Selivanov,2016-06-09 15:17:21+00:00,Bump the version to v0.4.30,False,2,1,1,,,,5465,3450,4041,177,1.6366279069767442,56.550634932788725,20.956521739130434,32.17391304347826,159.71693400553858,2.5628826698663656,636.2736131003617,35.348534061131204,0.05323897800184619
206,70c552c9de6096ca96b095d03111ade5117a7b17,Yury Selivanov,2016-06-28 22:02:48+00:00,Fix uvloop tests under 3.5.2,False,27,18,9,0.0,1.0,1.0,5474,3459,4050,177,1.6434782608695653,56.39725953064928,21.52173913043478,32.82608695652174,164.25549766083634,2.6739632559469517,694.7571704587738,38.59762058104298,0.0547518325536121
207,335138799d98b758b5d5cf85b3c35f2717dc4a8e,Yury Selivanov,2016-06-28 22:11:47+00:00,Bump the version to 0.4.31,False,2,1,1,,,,5474,3459,4050,177,1.6434782608695653,56.39725953064928,21.52173913043478,32.82608695652174,164.25549766083634,2.6739632559469517,694.7571704587738,38.59762058104298,0.0547518325536121
208,a5e7bb62217e471aa6c1ebec4ce0dd9750d0d5cc,Yury Selivanov,2016-07-04 19:53:41+00:00,Issue #34: Fix UVPoll handler crash,False,59,46,13,0.0,1.0,1.0,5516,3480,4074,189,1.6445086705202312,56.675057074778216,21.652173913043477,32.95652173913044,165.11950581536183,2.6971516617440536,701.894497751811,38.9941387639895,0.055039835271787275
209,98b7a0bb3a309370610e75e9140e8b42fe4f36ad,Yury Selivanov,2016-07-04 21:22:02+00:00,Issue #36: Ingnore CancelledError in transport.connect,False,28,26,2,1.0,1.0,1.0,5534,3490,4087,189,1.6426512968299711,56.65340808541125,21.652173913043477,32.95652173913044,165.11950581536183,2.6971516617440536,701.894497751811,38.9941387639895,0.055039835271787275
210,28ddbfa45200ae56a6cbfa357bb706b18a331234,Yury Selivanov,2016-07-04 21:40:59+00:00,tests: Drop test_connect_silent_cancellation (not portable),False,17,0,17,0.0,0.0,0.0,5517,3481,4075,189,1.6445086705202312,56.67361271588445,21.652173913043477,32.95652173913044,165.11950581536183,2.6971516617440536,701.894497751811,38.9941387639895,0.055039835271787275
211,44a6ab6e023eb0572b6f2794fc55042807e49ccf,Yury Selivanov,2016-07-04 23:21:29+00:00,Issue #33: Add slow_callback_duration property to loop,False,127,112,15,1.0,1.0,1.0,5549,3505,4095,193,1.6408045977011494,56.654233520471784,21.869565217391305,33.21739130434783,167.0545501056251,2.718890792178836,721.3719615467023,40.076220085927915,0.05568485003520838
212,ca0f1ef363d1e18b4853c5ecf5be91a8fdf4b2f4,Yury Selivanov,2016-07-04 23:23:45+00:00,Bump the version to 0.4.32,False,2,1,1,,,,5549,3505,4095,193,1.6408045977011494,56.654233520471784,21.869565217391305,33.21739130434783,167.0545501056251,2.718890792178836,721.3719615467023,40.076220085927915,0.05568485003520838
213,956d6cd86a76daf388901825bf7ea14f1b1799d6,Yury Selivanov,2016-07-05 19:04:11+00:00,Dual-license uvloop under MIT and Apache 2.0,False,194,192,2,,,,5550,3505,4096,193,1.6408045977011494,56.651845648761466,21.869565217391305,33.21739130434783,167.0545501056251,2.718890792178836,721.3719615467023,40.076220085927915,0.05568485003520838
214,32f5fc7d21cfe20cd6b6bcbb009caa06b3dc8358,Yury Selivanov,2016-07-05 21:09:41+00:00,"tests: Do GC after each test

This makes it easier to understand which test causes
ResourceWarnings.",False,5,5,0,0.0,1.0,1.0,5555,3508,4099,194,1.6408045977011494,56.67692302054034,21.869565217391305,33.21739130434783,167.0545501056251,2.718890792178836,721.3719615467023,40.076220085927915,0.05568485003520838
215,6e9c43bdecfad711c38c423fbada8fd8b86ddf7f,Yury Selivanov,2016-07-05 21:10:29+00:00,"transport: Return duplicate sockets from get_extra_info('socket')

It appears that people use sockets returned from
`transport.get_extra_info('socket')` with low-level APIs such as
add_writer and remove_writer.

If the returned socket fileno is the same as the one that transport
is using, libuv will crash, since one fileno can't point to two
different handles (uv_poll_t and uv_tcp_t).

See also https://github.com/python/asyncio/issues/372",False,72,23,49,1.0,0.0,0.0,5528,3495,4081,188,1.6397694524495676,56.47075639492322,21.73913043478261,33.08695652173913,166.19054195109962,2.695702386381734,714.234634253665,39.6797019029814,0.055396847317033204
216,034c3cc3caf075a2dcfe9ffc43a9a5a6ced5de2f,Yury Selivanov,2016-07-05 21:23:22+00:00,Bump the version to v0.4.33,False,2,1,1,,,,5528,3495,4081,188,1.6397694524495676,56.47075639492322,21.73913043478261,33.08695652173913,166.19054195109962,2.695702386381734,714.234634253665,39.6797019029814,0.055396847317033204
217,575f71bdbec5480274c76e502f1110e80bb7ae0a,Yury Selivanov,2016-07-09 16:49:27+00:00,"Add a test that uvloop doesn't set FD_CLOEXEC to stdin/stdout/stderr

Issue #40.",False,7,7,0,1.0,1.0,1.0,5535,3500,4086,189,1.6436781609195403,56.45392163130535,21.869565217391305,33.21739130434783,167.21858470880105,2.720874011095693,731.2277494683194,40.62376385935109,0.05573952823626701
218,f79d4d7b5aef9add2a76f453094f35814df377da,Yury Selivanov,2016-07-12 18:43:39+00:00,tests: Fix test_calls_debug_reporting in debug build,False,8,5,3,0.0,1.0,0.0,5537,3501,4087,189,1.6436781609195403,56.45204339746779,21.869565217391305,33.21739130434783,167.21858470880105,2.720874011095693,731.2277494683194,40.62376385935109,0.05573952823626701
219,7b56550e0595beca3ff5a63e3287452920e122d1,Yury Selivanov,2016-07-12 18:43:48+00:00,"handle: When warning about an unclosed recource, print its source tb",False,86,77,9,0.27906976744186046,1.0,1.0,5590,3528,4128,191,1.6457142857142857,56.391692368231304,21.91304347826087,33.30434782608695,167.78574914684177,2.720011347189551,734.1589655746324,40.786609198590696,0.05592858304894725
220,05bba8253acb8e2df612ca8d7fa8b847bb345565,Yury Selivanov,2016-07-12 18:57:42+00:00,Gather stats on uv_handler_t allocs in debug mode,False,32,32,0,0.0,1.0,1.0,5595,3529,4132,191,1.6457142857142857,56.388014530812626,21.91304347826087,33.30434782608695,167.78574914684177,2.720011347189551,734.1589655746324,40.786609198590696,0.05592858304894725
221,94b0ad640bc56419655dbb5815eba8eecb7c1973,Yury Selivanov,2016-07-12 19:33:02+00:00,Bump the version to v0.4.34,False,2,1,1,,,,5595,3529,4132,191,1.6457142857142857,56.388014530812626,21.91304347826087,33.30434782608695,167.78574914684177,2.720011347189551,734.1589655746324,40.786609198590696,0.05592858304894725
222,87d4f11bfcbd8b5a51bbeb42e9ce2c651b2591eb,Yury Selivanov,2016-07-14 23:18:50+00:00,Fix crash in transport.get_extra_info('socket') when tr is closed,False,102,97,5,0.7192982456140351,1.0,1.0,5667,3567,4183,198,1.6392045454545454,56.3679525660233,22.043478260869566,33.43478260869565,168.89591815478832,2.74676720003236,757.8887203400567,42.10492890778094,0.05629863938492945
223,30378dfc13d9bb220a1b8f4ae0f8696da1dd5c02,Yury Selivanov,2016-07-14 23:32:48+00:00,Make sure connection_lost is called when connection_made is errored out,False,14,12,2,0.3333333333333333,1.0,1.0,5674,3571,4188,198,1.6392045454545454,56.362331494124554,22.043478260869566,33.43478260869565,168.89591815478832,2.74676720003236,757.8887203400567,42.10492890778094,0.05629863938492945
224,b34d8b9ec75c9614907c3fa15c736a8ae94dfbbd,Elvis Pranskevichus,2016-07-16 15:19:42+00:00,Mark uvloop as Python 3-only,False,1,1,0,,,,5675,3571,4189,198,1.6392045454545454,56.35997999277598,22.043478260869566,33.43478260869565,168.89591815478832,2.74676720003236,757.8887203400567,42.10492890778094,0.05629863938492945
225,08880225f6b914e7d0f2135bfb3704b88f7d8279,Yury Selivanov,2016-07-19 06:08:23+00:00,Bump the version to 0.5.0,False,2,1,1,,,,5675,3571,4189,198,1.6392045454545454,56.35997999277598,22.043478260869566,33.43478260869565,168.89591815478832,2.74676720003236,757.8887203400567,42.10492890778094,0.05629863938492945
226,ad5181b36a51a0ac2ab4aaec829359711afdeda9,Yury Selivanov,2016-07-27 17:55:55+00:00,tests: Add tests for process/thread pool executors,False,40,40,0,1.0,1.0,1.0,5715,3598,4216,198,1.6350974930362117,56.38964808495705,21.458333333333332,32.541666666666664,163.35858823167214,2.7323185666976784,729.9100236592211,40.55055686995673,0.05445286274389072
227,53203bf3e13ae41a56af6a429313b3be33ab3eb9,Yury Selivanov,2016-07-27 18:01:41+00:00,tests: Add an extra await to the process executor test,False,1,1,0,1.0,1.0,1.0,5716,3599,4217,198,1.6350974930362117,56.375292435942235,21.458333333333332,32.541666666666664,163.35858823167214,2.7323185666976784,729.9100236592211,40.55055686995673,0.05445286274389072
228,d2f5d0c5dbb6ab04af8ecdf2239a40f8a9abec6c,Yury Selivanov,2016-08-02 22:47:27+00:00,tests: Adjust test_call_later_1 to see why it fails on travis/mac,False,7,3,4,,,,5715,3599,4217,198,1.6350974930362117,56.375292435942235,21.458333333333332,32.541666666666664,163.35858823167214,2.7323185666976784,729.9100236592211,40.55055686995673,0.05445286274389072
229,b13336121fbfcce0b457da0e29c1b57d71c532f1,Yury Selivanov,2016-08-09 02:04:58+00:00,Add connect_accepted_socket.,False,215,188,27,0.6588235294117647,1.0,0.6588235294117647,5822,3681,4303,198,1.6457765667574933,56.16245194707116,22.125,33.416666666666664,170.38446270045907,2.772146998070227,805.2064707289034,44.73369281827241,0.05679482090015303
230,7c0c0f41d12dbc3df7b098f515523afa8b1e50d2,Yury Selivanov,2016-08-09 23:51:57+00:00,Fix a regression in loop.connect_accepted_socket,False,11,8,3,0.0,1.0,0.0,5824,3683,4305,198,1.6457765667574933,56.16036347771175,22.125,33.416666666666664,170.38446270045907,2.772146998070227,805.2064707289034,44.73369281827241,0.05679482090015303
231,004724126b062b4d7c25e64b2dd650db17137ab2,Yury Selivanov,2016-08-10 00:01:22+00:00,Bump the version to v0.5.1,False,2,1,1,,,,5824,3683,4305,198,1.6457765667574933,56.16036347771175,22.125,33.416666666666664,170.38446270045907,2.772146998070227,805.2064707289034,44.73369281827241,0.05679482090015303
232,03ad9fa62c0d6d539f5c0ffe5e208528b2e2af76,Yury Selivanov,2016-08-11 21:14:35+00:00,Fix create_connection when sock and ssl args are passed,False,25,24,1,0.15789473684210525,1.0,1.0,5848,3697,4323,198,1.6457765667574933,56.140899526878805,22.208333333333332,33.541666666666664,171.37532485171104,2.7704138047929168,810.6153862514326,45.034188125079595,0.057125108283903686
233,7ecb39d3adaa1b526b51def28d349510d1ee6001,Yury Selivanov,2016-08-11 21:15:26+00:00,Bump the version to v0.5.2,False,2,1,1,,,,5848,3697,4323,198,1.6457765667574933,56.140899526878805,22.208333333333332,33.541666666666664,171.37532485171104,2.7704138047929168,810.6153862514326,45.034188125079595,0.057125108283903686
234,7d5c37832f1c14360fef3fcaace3230d04d40fdd,Peter Cooner,2016-08-24 16:19:51+00:00,Include kstat lib for solaris,False,2,2,0,0.0,0.0,1.0,5850,3699,4325,198,1.6485013623978202,56.11703745585938,22.208333333333332,33.541666666666664,171.37532485171104,2.7704138047929168,810.6153862514326,45.034188125079595,0.057125108283903686
235,40c3470f6b6f0fc8494a1d5c0b63c46394824f31,Yury Selivanov,2016-08-24 16:22:46+00:00,Bump version to v0.5.3,False,2,1,1,,,,5850,3699,4325,198,1.6485013623978202,56.11703745585938,22.208333333333332,33.541666666666664,171.37532485171104,2.7704138047929168,810.6153862514326,45.034188125079595,0.057125108283903686
236,db70c2be6459f28df477a3ea8630029bc845b25f,Koichi Shiraishi,2016-09-11 10:21:42+00:00,"setup.py: add missing space after '-fPIC' for ARCHFLAGS

- Basically, if users want to set ARCHFLAGS, maybe run the
    ARCHFLAGS='-arch x86_64' python setup.py install
  but it will define of CFLAGS to
    CFLAGS=' -O2 -fPIC-arch x86_64'
  Needs one space after '-fPIC'

Signed-off-by: Koichi Shiraishi <zchee.io@gmail.com>",False,2,1,1,,,,5850,3699,4325,198,1.6485013623978202,56.11703745585938,22.208333333333332,33.541666666666664,171.37532485171104,2.7704138047929168,810.6153862514326,45.034188125079595,0.057125108283903686
237,71c5360559741ea3fcf5bf4114a380c0072be39d,Yury Selivanov,2016-10-05 18:15:13+00:00,"Completely rewrite signal handling.

Instead of using libuv signal handlers, we now simply use
signal.set_wakeup_fd function (exactly the same approach as
in asyncio).  As the result, the new code is *much* simpler,
and uvloop programs don't mess with low-level signal
processing APIs.",False,474,136,338,1.0,1.0,1.0,5854,3703,4328,198,1.6467391304347827,57.872355957625004,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
238,4c0ee668f45860f98c9ff5cef31863b8a60f2683,Yury Selivanov,2016-10-05 18:15:13+00:00,tests: Fix aiohttp test for the latest version of the library,False,2,1,1,,,,5854,3703,4328,198,1.6467391304347827,57.872355957625004,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
239,b87c5e3504464ff3e5f46c1df10a92e5bf5cef46,Yury Selivanov,2016-10-05 18:27:16+00:00,Bump the version to 0.5.4,False,2,1,1,,,,5854,3703,4328,198,1.6467391304347827,57.872355957625004,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
240,ad7d2b382133dbbeaa60b7c5dccbc1166394aa70,Yury Selivanov,2016-10-21 20:04:37+00:00,Add set_protocol and get_protocol to uvloop Transports (issue #42),False,19,19,0,0.0,1.0,1.0,5861,3709,4334,198,1.6467391304347827,57.86654382624287,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
241,dd812a4f008edcdab19eb69b7e638dd3f0d7ee7b,Yury Selivanov,2016-10-21 23:23:08+00:00,"Raise RuntimeError if Transport's socket is used with loop.add_writer

Some rules (for now at least):

* We dup sockets that are passed to loop.create_server,
  loop.create_connection, etc.  Since those sockets can be closed
  outside of uvloop, it's just safer to dup.

* We wrap Transport's FDs into Python sockets when
  get_extra_info('socket') is called.  We don't dup them in this
  case (they get detached with the transport they were created for
  is closed).

* If an FD from an active Transport is passed to loop.add_writer,
  loop.add_reader, loop.remove_writer or loop.remove_reader we now
  raise a RuntimeError (as does asyncio 3.6).",False,216,128,88,0.25,1.0,1.0,5869,3718,4342,196,1.6494565217391304,57.83579054922023,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
242,fafcc7ffcd4d9c9ffb3e0c2a5b0e16e1da0ecff7,Yury Selivanov,2016-11-03 17:40:34+00:00,examples/echosrv: Make uvloop dep optional,False,2,1,1,,,,5869,3718,4342,196,1.6494565217391304,57.83579054922023,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
243,89f3f1e1320fbb2977e509f06f932a7f617a5263,Yury Selivanov,2016-11-04 05:42:08+00:00,bench.readline: Make uvloop dep optional,False,2,1,1,,,,5869,3718,4342,196,1.6494565217391304,57.83579054922023,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
244,3c3c8dcdbbd8c11a1a8d4303823cc91d99496258,Yury Selivanov,2016-11-06 20:24:43+00:00,tests: Fix aiohttp deprecation warnigns,False,2,1,1,,,,5869,3718,4342,196,1.6494565217391304,57.83579054922023,21.32,32.2,164.52031185764258,2.6595972526012,778.1907708013754,43.23282060007641,0.05484010395254754
245,424381d45a8407eecb1415c626bd992213fc9cf4,Yury Selivanov,2016-11-06 21:53:39+00:00,setup.py: Require Python 3.6b3,False,7,6,1,,,,5874,3722,4346,196,1.6494565217391304,57.74424488732011,21.64,32.68,167.54748966724003,2.6574154344193817,791.8672088593104,43.99262271440613,0.055849163222413345
246,7dc78eb06c7c751aba0d2e4003bb1461844fd3bf,Yury Selivanov,2016-11-06 22:01:23+00:00,Bump the version to 0.5.5,False,2,1,1,,,,5874,3722,4346,196,1.6494565217391304,57.74424488732011,21.64,32.68,167.54748966724003,2.6574154344193817,791.8672088593104,43.99262271440613,0.055849163222413345
247,fb0801a36a5c55917565408e95cc6c356b6312f2,Yury Selivanov,2016-11-06 22:40:43+00:00,Bump the version to 0.6.0,False,2,1,1,,,,5874,3722,4346,196,1.6494565217391304,57.74424488732011,21.64,32.68,167.54748966724003,2.6574154344193817,791.8672088593104,43.99262271440613,0.055849163222413345
248,bf8b6e6bb94079c37c596cdeafd9a3d3e9eac6b8,Yury Selivanov,2016-11-08 00:08:16+00:00,Use asyncio._get_running_loop() and _set_running_loop() when available,False,41,39,2,0.1111111111111111,1.0,1.0,5898,3739,4365,196,1.6476964769647697,57.708964412313044,21.64,32.68,167.54748966724003,2.6574154344193817,791.8672088593104,43.99262271440613,0.055849163222413345
249,57a3abe51500d32b2b6eccd6a5834ed66fbe7c87,Yury Selivanov,2016-11-08 00:27:37+00:00,"tests: Do set_event_loop(None) in unittests

uvloop should consistently pass around the loop reference in its
internal APIs.

Even though explicit passing of event loop objects is discouraged
in asyncio programs, uvloop itself is too low-level to rely on
get_event_loop.",False,33,28,5,0.8571428571428571,0.0,1.0,5921,3756,4381,197,1.6522911051212938,57.667058014937396,21.64,32.68,167.54748966724003,2.6574154344193817,791.8672088593104,43.99262271440613,0.055849163222413345
250,84220e6cb13b4d711e2d1595bec2645783b69f14,Yury Selivanov,2016-11-08 01:26:27+00:00,Port another _get_current_loop/get_event_loop test from asyncio,False,27,27,0,0.23809523809523808,1.0,1.0,5948,3776,4402,197,1.653225806451613,57.61734764308481,21.76,32.8,168.49756625932764,2.6802575396825397,808.4833236953211,44.91574020529561,0.05616585541977589
251,92fb0fc37fa8ad9418412a1391bd3bf5b872fee0,Yury Selivanov,2016-11-09 20:38:30+00:00,"Make loop methods reject socket kinds they do not support.

More specifically:
* loop.create_connection() and loop.create_server() can accept
  AF_INET or AF_INET6 SOCK_STREAM sockets;

* loop.create_datagram_endpoint() can accept only SOCK_DGRAM
  sockets;

* loop.connect_accepted_socket() can accept only SOCK_STREAM
  sockets;

* fixed a bug in create_unix_server() and create_unix_connection()
  to properly check for SOCK_STREAM sockets on Linux;

* fixed static DNS resolution to decline socket types that aren't
  strictly equal to SOCK_STREAM or SOCK_DGRAM.  On Linux socket
  type can be a bit mask, and we should let system getaddrinfo()
  to deal with it.",False,128,110,18,1.0,1.0,1.0,6016,3831,4463,197,1.6437994722955145,57.45358344948194,22.0,33.04,170.47745250879348,2.7302342592592588,847.3361965705502,47.07423314280835,0.056825817502931156
252,4c1e8adc5e4dfe92fbb0a0215497f7c138363085,Yury Selivanov,2016-11-10 18:03:05+00:00,Move build logic to setup.py (closes #60),False,245,152,93,0.02127659574468085,0.5425531914893617,1.0,6149,3881,4568,202,1.6797900262467191,57.14092780390731,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
253,806a06295d6c9b33e1b04da6a306db38f9c7ea07,Yury Selivanov,2016-11-10 18:15:26+00:00,tests: test_call_at reorder asserts to debug ocasional test failure,False,4,2,2,,,,6149,3881,4568,202,1.6797900262467191,57.14092780390731,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
254,f5a504534f8e2c9a8ae8dd9e6d380d47981334ed,Yury Selivanov,2016-11-10 18:33:48+00:00,setup.py: Move the version into a constant,False,3,2,1,,,,6150,3882,4569,202,1.6797900262467191,57.136491817635964,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
255,109fe4baad0012354d6b15613795e019b8d53648,Yury Selivanov,2016-11-10 18:34:18+00:00,Bump the version to 0.6.1,False,2,1,1,,,,6150,3882,4569,202,1.6797900262467191,57.136491817635964,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
256,2544181ba4204a4f73c077b6ca0f30ae93f4d572,Yury Selivanov,2016-11-10 19:30:56+00:00,setup.py: Fix error message,False,2,1,1,,,,6150,3882,4569,202,1.6797900262467191,57.136491817635964,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
257,c31616cba871e66c257df511585298b3fd907ef4,Yury Selivanov,2016-11-10 23:06:54+00:00,Bump the version to 0.6.5,False,6,4,2,,,,6150,3882,4569,202,1.6797900262467191,57.136491817635964,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
258,e7bedb8b4dd1b53e99a20f6d9ccdf97e48c011a8,Elvis Pranskevichus,2016-11-11 00:22:15+00:00,Make sure ``setup.py sdist`` produces correct tarballs,False,99,62,37,0.9333333333333333,1.0,1.0,6185,3897,4591,208,1.6779220779220778,57.188565875827926,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
259,7474d966fcff85ee2a38dd1e8a0857ba84dc909b,Yury Selivanov,2016-11-22 01:00:15+00:00,cython: Make async def coroutines awaitable in cythonized coroutines,False,2,1,1,,,,6185,3897,4591,208,1.6779220779220778,57.188565875827926,22.6,33.96,176.69214016605423,2.728234259259259,875.4057903765015,48.63365502091674,0.05889738005535142
260,f20bf82cd79ef36ed8eff7c8915aea8f1d53b6d2,Yury Selivanov,2016-11-22 01:00:54+00:00,"Allow create_connection & create_server accept AF_UNIX

Internally, they will delegate to create_unix_connection and
create_unix_server.",False,99,73,26,0.11538461538461539,1.0,1.0,6216,3916,4616,208,1.6779220779220778,57.148509897554014,22.68,34.08,177.5160450396551,2.7249136973180077,877.3761228371125,48.743117935395134,0.05917201501321838
261,fc21f808cf10c630e2a573310fc3ed59e90451e2,Yury Selivanov,2016-11-24 03:39:12+00:00,Add a regression test for issue #61.,False,29,28,1,0.0,1.0,1.0,6239,3935,4634,209,1.6787564766839378,57.08416448661943,22.68,34.08,177.5160450396551,2.7249136973180077,877.3761228371125,48.743117935395134,0.05917201501321838
262,8d3568115e712c8b3d731525a4c06ff1b344a234,Yury Selivanov,2016-11-28 16:22:21+00:00,Bump the version to 0.6.6,False,2,1,1,,,,6239,3935,4634,209,1.6787564766839378,57.08416448661943,22.68,34.08,177.5160450396551,2.7249136973180077,877.3761228371125,48.743117935395134,0.05917201501321838
263,76ed636c6cf59ae68dc9dca0f9cacc1fd0e8c902,Yury Selivanov,2016-11-28 17:17:28+00:00,setup.py: Python 3.6 is supported,False,1,1,0,,,,6240,3935,4635,209,1.6787564766839378,57.08302074551473,22.68,34.08,177.5160450396551,2.7249136973180077,877.3761228371125,48.743117935395134,0.05917201501321838
264,6f0727952de9962dcdac307bcfc8a54b716a6ed8,Yury Selivanov,2016-11-28 23:23:10+00:00,Bump the version to v0.6.7,False,2,1,1,,,,6240,3935,4635,209,1.6787564766839378,57.08302074551473,22.68,34.08,177.5160450396551,2.7249136973180077,877.3761228371125,48.743117935395134,0.05917201501321838
265,41b412f44dcf62e52753f5ae7575a8c6d84180c8,Yury Selivanov,2016-12-23 18:00:16+00:00,Add loop.shutdown_asyncgens() method.,False,108,107,1,0.0967741935483871,1.0,1.0,6281,3958,4665,211,1.6847545219638242,57.03858838496087,22.76,34.16,178.1518630363136,2.749157599757032,893.3093273768925,49.62829596538291,0.059383954345437875
266,04fa0cc4e58625e907d9a08611b167d68c516659,Yury Selivanov,2016-12-23 18:31:36+00:00,Bump the version to 0.6.8,False,2,1,1,,,,6281,3958,4665,211,1.6847545219638242,57.03858838496087,22.76,34.16,178.1518630363136,2.749157599757032,893.3093273768925,49.62829596538291,0.059383954345437875
267,62fb3102780adcc3475d743fbd8424972d26f481,Elvis Pranskevichus,2016-12-23 23:35:39+00:00,"ci: Switch to staged release process

Uploading release artifacts directly to PyPI from the build matrix is
bad, as this may result in an incomplete or broken release if any of
the platforms fail to build.

To fix the process, implement a ""staged"" build process whereby artifacts
are built from a dedicated ""releases"" branch and are uploaded to an S3
bucket.  Once all artifacts have been successfully built, the release
tag may be pushed to master, and the previously built artifacts will be
uploaded to PyPI as a single transaction.",False,537,408,129,0.20869565217391303,1.0,1.0,6287,3961,4669,211,1.6847545219638242,57.025301194913425,22.76,34.16,178.1518630363136,2.749157599757032,893.3093273768925,49.62829596538291,0.059383954345437875
268,104c35b5f1883ffc7297ccbbeafe14b954822325,Elvis Pranskevichus,2016-12-24 00:35:08+00:00,tests: Skip strangely failing test on Travis macOS,False,11,9,2,0.0,1.0,1.0,6294,3967,4675,212,1.6925064599483204,57.012663813960536,22.88,34.28,179.08929318259834,2.7746525941952966,905.6020749770607,50.31122638761448,0.05969643106086611
269,ee3f34cdd5bd265981d3d2e188d05b3f14d8d035,Yury Selivanov,2017-01-01 23:58:28+00:00,Fix _asyncgen_finalizer_hook to correctly wakeup the loop (issue #68),False,91,73,18,0.6744186046511628,1.0,1.0,6349,3997,4715,215,1.6923076923076923,56.948266467927745,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
270,a897aed3605855eb541d2b436a7dcde912e576f6,Yury Selivanov,2017-01-02 00:04:59+00:00,Bump the version to v0.7.1,False,2,1,1,,,,6349,3997,4715,215,1.6923076923076923,56.948266467927745,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
271,ec11650be434b0d944734ddd333553cb2581de30,Elvis Pranskevichus,2017-01-04 21:49:30+00:00,ci: Make sure wheel builds on macOS start from a clean slate,False,4,2,2,,,,6349,3997,4715,215,1.6923076923076923,56.948266467927745,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
272,92709efa11d88e302a8149a7860b38957a3fffdf,Elvis Pranskevichus,2017-01-04 23:38:00+00:00,"Bump the timeout for SSL server test

Travis has problems completing the test in under 5s, try 10.",False,2,1,1,,,,6349,3997,4715,215,1.6923076923076923,56.948266467927745,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
273,f8a5376737ceea761ef2923f3bc344890dfa4864,Ben Jolitz,2017-02-06 01:03:42+00:00,setup.py: Add support DragonFlyBSD (closes #77),False,2,1,1,,,,6349,3997,4715,215,1.6923076923076923,56.948266467927745,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
274,3ad8bad3ee64aeba46cedc6d679d3484511771c6,Yury Selivanov,2017-02-09 17:32:20+00:00,Bump the version to 0.8.0; mark uvloop as stable and prod ready,False,4,2,2,,,,6349,3997,4715,215,1.6923076923076923,56.948266467927745,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
275,505e6e984e1e0e6b7699d39f87c1deb2b310e687,Yury Selivanov,2017-02-09 19:54:20+00:00,tests: Skip test_call_at on Travis/macOS,False,5,5,0,1.0,1.0,1.0,6354,4000,4718,216,1.6948717948717948,56.942029609015535,23.24,34.8,182.92766007110117,2.788082161144027,942.9692394468484,52.38717996926936,0.06097588669036706
276,a7a8be62f4bbd11f5382b8f765511770c9889645,Tim Turner,2017-02-11 15:21:54+00:00,"Address argument now has correct help message (#78)

Last argument for address was copied but not fully updated, left out was the 'help' message. This has been updated to be helpful.",False,2,1,1,,,,6354,4000,4718,216,1.6948717948717948,56.942029609015535,23.24,34.8,182.92766007110117,2.788082161144027,942.9692394468484,52.38717996926936,0.06097588669036706
277,58f9f09e3d15fe9d9a006d36159bacde907436c6,Yury Selivanov,2017-03-29 15:45:29+00:00,Skip test_call_at on Travis.,False,6,3,3,,,,6354,4000,4718,216,1.6948717948717948,56.9474033545381,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
278,ddbe854b43181d51b171c28d7fda0c40eaf52c33,Elvis Pranskevichus,2017-03-30 14:42:05+00:00,Fix documentation build.,False,2,1,1,,,,6354,4000,4718,216,1.6948717948717948,56.9474033545381,23.12,34.68,181.94984051328262,2.765685287500953,922.9356244271145,51.27420135706192,0.06064994683776088
279,be920ea74ea4237dce191232dc68dae35c670c29,Elvis Pranskevichus,2017-03-30 14:59:06+00:00,"Fix running of setup.py test with recent setuptools. (#84)

Referencing ""setup"" in the ""test_suite"" setup() argument leads to
setup.py being executed twice, which leads to a broken command
behaviour.",False,38,26,12,0.4,0.4,1.0,6368,4005,4723,222,1.7,58.68751762902678,22.23076923076923,33.34615384615385,174.9517697243102,2.6593127764432243,887.4381004106871,49.30211668948262,0.05831725657477008
280,490c41032172b1a7d365ea83642aff7696ef9fc1,Yury Selivanov,2017-04-04 16:43:12+00:00,Silence linter for uvloop/__init__.py,False,6,3,3,,,,6368,4005,4723,225,1.7,58.68751762902678,22.23076923076923,33.34615384615385,174.9517697243102,2.6593127764432243,887.4381004106871,49.30211668948262,0.05831725657477008
281,45e177555d78066b9d7fa01c0049d89e43b7f794,Yury Selivanov,2017-08-28 17:37:19+00:00,"Fix create_datagram_endpoint to work with AF_INET6 and no local_addr

A fix for #98.",False,23,22,1,1.0,1.0,0.8235294117647058,6386,4019,4738,225,1.6956521739130435,58.59202522953777,22.23076923076923,33.46153846153846,175.53381519962082,2.6716204687509166,893.0567793990186,49.614265522167706,0.05851127173320694
282,9dfbf0c1d75c64d159aeffec319d49efc0569582,Yury Selivanov,2017-09-11 22:10:08+00:00,Bump the version to 0.8.1,False,2,1,1,,,,6386,4019,4738,225,1.6956521739130435,58.59202522953777,22.23076923076923,33.46153846153846,175.53381519962082,2.6716204687509166,893.0567793990186,49.614265522167706,0.05851127173320694
283,954e8db094b7f1f6be65b8ec37303a611008f2ff,Elvis Pranskevichus,2017-09-12 14:21:06+00:00,Add a way to run tests on an installed version of uvloop,False,45,31,14,,,,6399,4028,4747,225,1.6956521739130435,57.38882481322527,22.423076923076923,33.65384615384615,175.980339833253,2.7100820072124545,893.5033040326508,49.63907244625838,0.058660113277751
284,78969a63a22639c2882e0ebe62421f68573d33f6,Yury Selivanov,2017-11-10 15:43:39+00:00,Implement Policy.set_child_watcher(). Closes issue #112.,False,10,10,0,1.0,1.0,1.0,6409,4035,4754,225,1.6903553299492386,57.38882481322527,22.423076923076923,33.65384615384615,175.980339833253,2.7100820072124545,893.5033040326508,49.63907244625838,0.058660113277751
285,ce02f94c3d786c4a8e47764f44138881df4e283d,Yury Selivanov,2017-11-10 17:01:38+00:00,Use new uv_loop_fork API; add a regr test for issue #39.,False,120,118,2,0.6081081081081081,1.0,0.8648648648648649,6519,4112,4838,225,1.6904176904176904,58.96701648680952,21.59259259259259,32.407407407407405,169.46254946905844,2.6097085995379192,860.4105890684785,47.80058828158215,0.05648751648968615
286,357cb60a1ac5afa391697debedc841ee5db56ea2,Frederik Aalund,2017-11-10 17:24:15+00:00,"Link with pthread (#87)

When importing uvloop, I got the following error:

    >>> import uvloop
    Traceback (most recent call last):
      File ""<stdin>"", line 1, in <module>
      File ""/projects/RedPitaya/OS/buildroot/buildroot-2017.02/output/target/usr/lib/python3.5/site-packages/uvloop/__init__.py"", line 7, in <module>
    ImportError: /usr/lib/python3.5/site-packages/uvloop/loop.cpython-35m-arm-linux-gnueabihf.so: undefined symbol: pthread_atfork

This is fixed by linking the plugin (`loop.cpython-35m-arm-linux-gnueabihf.so`) to pthread as done in this patch.",False,2,2,0,0.0,0.0,1.0,6521,4113,4839,225,1.6904176904176904,58.963192679419755,21.59259259259259,32.407407407407405,169.46254946905844,2.6097085995379192,860.4105890684785,47.80058828158215,0.05648751648968615
287,804364cd2bbff9184c5cdc3a70e97b262ed450bc,jimmylai,2017-11-10 20:06:14+00:00,Fix run_until_cleanup to clean up done callback,False,17,16,1,1.0,1.0,1.0,6535,4126,4852,225,1.6911764705882353,58.93720848962384,21.59259259259259,32.407407407407405,169.46254946905844,2.6097085995379192,860.4105890684785,47.80058828158215,0.05648751648968615
288,dc3b77b9c67e6e5aa9f21d69ba7541d22caf45d4,Yury Selivanov,2017-11-10 20:07:56+00:00,Rewrite test_run_until_complete_loop_orphan_future_close_loop test,False,26,16,10,1.0,1.0,1.0,6541,4126,4852,227,1.6911764705882353,58.95245217482613,21.59259259259259,32.407407407407405,169.46254946905844,2.6097085995379192,860.4105890684785,47.80058828158215,0.05648751648968615
289,e2ca8e84ed69b01472b5fb9407b1a8b35dd4e452,Yury Selivanov,2017-11-10 20:45:08+00:00,Fix a test to only run with asyncio version it supports,False,8,8,0,1.0,1.0,1.0,6549,4131,4857,227,1.696078431372549,58.92194178595209,21.85185185185185,32.74074074074074,172.02849930290708,2.6259968669301608,889.6808283099781,49.42671268388767,0.05734283310096904
290,8f2b6c66d47a7798b0ca0639ee9eb4bf4a842c38,Yury Selivanov,2017-11-10 22:24:25+00:00,"add_reader() & add_writer() now accept file-like objects.

Fixes issue #97.
More elaborate version of PR #101.  test_socket_fileno by @minrk.",False,141,124,17,0.5471698113207547,1.0,1.0,6613,4179,4906,228,1.6926829268292682,58.74258833586526,21.85185185185185,32.74074074074074,172.02849930290708,2.6259968669301608,889.6808283099781,49.42671268388767,0.05734283310096904
291,847fc43b572384f8afcd395ada275b053e24a193,Yury Selivanov,2017-11-11 20:29:50+00:00,Fix aiohttp test,False,28,11,17,0.0,0.0,1.0,6607,4175,4901,228,1.6926829268292682,58.77860733728985,21.85185185185185,32.74074074074074,172.02849930290708,2.6259968669301608,889.6808283099781,49.42671268388767,0.05734283310096904
292,201cdcf0c1c594a157c825724e0576020eed2398,Yury Selivanov,2017-11-11 20:32:54+00:00,"Revert ""Implement Policy.set_child_watcher(). Closes issue #112.""

This reverts commit 78969a63a22639c2882e0ebe62421f68573d33f6.",False,10,0,10,0.0,0.0,0.0,6597,4168,4894,228,1.6977886977886978,58.77860733728985,21.85185185185185,32.74074074074074,172.02849930290708,2.6259968669301608,889.6808283099781,49.42671268388767,0.05734283310096904
293,943c0dbea61983214b116a323597d66d799134eb,Yury Selivanov,2017-11-11 21:02:34+00:00,Add support for infinite timeouts.  Issue #102.,False,21,20,1,1.0,1.0,1.0,6606,4174,4901,228,1.696078431372549,58.7659108276167,21.85185185185185,32.74074074074074,172.02849930290708,2.6259968669301608,889.6808283099781,49.42671268388767,0.05734283310096904
294,2dbb637309609efc227d08868f643b7128d2ceda,Craig McQueen,2017-11-13 15:30:48+00:00,"Allow for cross-compile of libuv (#114)

If LIBUV_CONFIGURE_HOST environment variable is defined, then call
./configure with --host parameter set to LIBUV_CONFIGURE_HOST value.",False,6,5,1,0.0,1.0,1.0,6610,4178,4905,228,1.6985294117647058,58.73488063502683,22.0,32.96296296296296,173.6051888386175,2.625694523770675,896.7954527766285,49.82196959870158,0.05786839627953917
295,de40f5a0f414445dd39a8e7a02ed7169b226e626,Yury Selivanov,2017-11-13 15:43:48+00:00,"Support pathlib.Path for 'cwd' argument of loop.subprocess_exec()

Closes issue #90.",False,32,32,0,1.0,1.0,1.0,6632,4191,4924,228,1.6968215158924205,58.70756114116913,22.0,32.96296296296296,173.6051888386175,2.625694523770675,896.7954527766285,49.82196959870158,0.05786839627953917
296,84afb41ca64c9f5d5caf8a80088494d7860f16e6,Yury Selivanov,2017-11-13 21:38:21+00:00,"Fix loop.sock_connect() to support 4 element addr tuples for IPv6 socks.

Issue #99.",False,23,22,1,1.0,1.0,1.0,6653,4206,4939,232,1.6951219512195121,58.772167400756636,22.0,32.96296296296296,173.6051888386175,2.625694523770675,896.7954527766285,49.82196959870158,0.05786839627953917
297,cde3a94c5fd3ee2ac70a8c0881723b08f0d0f6d7,Yury Selivanov,2017-11-14 23:06:43+00:00,"Drop custom uvloop Future and Task implementations

C-accelerated Future and Task are part of asyncio since Python 3.6.  It
doesn't make any sense to keep alternative uvloop implementations any
longer, as they increase maintenance overhead and potential bugs
surface.",False,1081,5,1076,0.3808139534883721,0.0,0.00872093023255814,6177,3861,4580,213,1.75,59.62103100490751,21.884615384615383,32.96153846153846,174.3881863223118,2.6257212362233937,915.8155070203743,50.87863927890969,0.0581293954407706
298,8415fc3327e2748f1041c07a29d67c75a2246520,Yury Selivanov,2017-11-15 01:06:29+00:00,tests: unbreak travis,False,6,5,1,1.0,1.0,1.0,6181,3864,4583,213,1.7527777777777778,59.604991935048574,21.884615384615383,32.96153846153846,174.3881863223118,2.6257212362233937,915.8155070203743,50.87863927890969,0.0581293954407706
299,30c986eaa763c86da598649bf1ea991aa0872a4f,Yury Selivanov,2017-11-15 15:57:47+00:00,Fix tests to pass on linux,False,2,1,1,,,,6181,3864,4583,213,1.7527777777777778,59.604991935048574,21.884615384615383,32.96153846153846,174.3881863223118,2.6257212362233937,915.8155070203743,50.87863927890969,0.0581293954407706
300,f33c4f4548c3d800b7f1726b738aac2d15d1d91b,Yury Selivanov,2017-11-16 22:56:23+00:00,Fix unhandled errors in Handle.__dealloc__ producing unwanted stderr output,False,79,75,4,0.15151515151515152,1.0,1.0,6245,3881,4617,231,1.7513812154696133,61.101103344861585,21.074074074074073,31.74074074074074,167.92936460667062,2.528472301548453,881.8964141677678,48.99424523154266,0.05597645486889021
301,b35fff06263b672d841c315e3e75f699de3126ad,Yury Selivanov,2017-11-17 00:12:38+00:00,"Protect socket from closing while in use by loop.sock_*() methods.

Issue #100.",False,234,171,63,1.0,1.0,1.0,6335,3947,4686,232,1.7418478260869565,60.89193260556412,21.22222222222222,31.925925925925927,169.091428477574,2.5469908200669718,889.5402684914171,49.41890380507872,0.05636380949252467
302,e508c02386137a5e68ad2a0a6bffa62cc6ec0f91,Yury Selivanov,2017-11-17 00:29:36+00:00,tests: Speedup socket tests machinery,False,51,39,12,0.65,0.65,0.9,6362,3967,4707,232,1.7486486486486486,60.818684064279466,21.333333333333332,32.148148148148145,170.55857187714713,2.5497606839479467,898.9990257942746,49.94439032190415,0.05685285729238236
303,e1b7a1a0050fe1bd6b0ab2ceba024eeffc6d085f,Yury Selivanov,2017-11-17 02:59:53+00:00,"Make Transport.resume_reading() and pause_reading() idempotent. Add is_reading().

Fixes issue #93.
Implements https://github.com/python/cpython/pull/528 asyncio change.",False,28,17,11,0.0,1.0,1.0,6373,3975,4715,236,1.7486486486486486,60.8341128437713,21.333333333333332,32.148148148148145,170.55857187714713,2.5497606839479467,898.9990257942746,49.94439032190415,0.05685285729238236
304,af641e6c7ee6322c6a952a2f636960a29ae1f946,Yury Selivanov,2017-11-17 14:18:16+00:00,Close all reader/writer sockets the loop owns when it closes.,False,68,58,10,0.2962962962962963,1.0,1.0,6411,3999,4740,240,1.7493261455525606,60.828063728279126,21.37037037037037,32.2962962962963,171.34952427556075,2.5545306053845347,903.2678926705273,50.181549592807066,0.05711650809185359
305,cc80db62c1217969d697adffe1abf564eb65d3d1,Yury Selivanov,2017-11-17 14:44:10+00:00,"Implement loop.sock_recv_into()

Mirrors asyncio PR: https://github.com/python/cpython/pull/4051",False,79,79,0,1.0,1.0,1.0,6443,4025,4766,240,1.7473118279569892,60.76116501811704,21.37037037037037,32.370370370370374,171.70937471964427,2.5604228612767908,906.0730904505419,50.337393913919,0.05723645823988143
306,ab7ab938edd3cf9492adffee8ea4b1ac073af86d,Yury Selivanov,2017-11-17 21:24:28+00:00,Implement .cancelled() method for callback and timer Handles.,False,71,55,16,1.0,1.0,1.0,6470,4049,4788,240,1.7386666666666666,60.718402019531624,21.37037037037037,32.370370370370374,171.70937471964427,2.5604228612767908,906.0730904505419,50.337393913919,0.05723645823988143
307,f765546c946b66311676bfdd0c9b059987ff7c11,Yury Selivanov,2017-11-17 22:42:31+00:00,Rewrite socket test framework,False,524,227,297,0.0,0.0,0.3,6400,4004,4742,239,1.7375690607734806,60.80143252789483,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
308,00d110a3f4e1ab5d24a8ef425c7baa8436f159a3,Yury Selivanov,2017-11-17 22:58:38+00:00,tests: Add test.unix_server() & test.unix_client() helpers.,False,39,20,19,0.0,0.0,0.0,6401,4006,4741,239,1.7335164835164836,60.788946796073105,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
309,ec50b7c4a2bc3e9f0103a510102ee54beb95cfea,Yury Selivanov,2017-11-17 23:24:45+00:00,Support Path objects in create_unix_connection() and create_unix_server(),False,65,58,7,1.0,1.0,1.0,6434,4034,4770,239,1.7302452316076293,60.72779465025107,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
310,c40e8a229710b4039569e9225b7b0ab248f2829c,Yury Selivanov,2017-11-17 23:40:31+00:00,Make a GC test more reliable.,False,5,5,0,0.0,1.0,1.0,6439,4037,4773,239,1.7302452316076293,60.72525134345753,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
311,86a6bdcd5bad8be644f3f08c418c37b037efdb40,Yury Selivanov,2017-11-18 15:45:58+00:00,Remove existng stale UNIX socket paths in loop.create_unix_server(),False,38,37,1,1.0,1.0,1.0,6453,4049,4784,240,1.7282608695652173,60.719721147679955,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
312,135d0606900dc2d0ad871563002de6712e6e6b78,Yury Selivanov,2017-11-21 16:02:15+00:00,"create_server() now makes a strong ref to the Server object.

Fixes #81.

Also makes Server objects weak-refable.",False,88,78,10,0.25806451612903225,1.0,1.0,6498,4079,4814,245,1.7262872628726287,60.71556865120976,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
313,b45a4c022978cfd36b817c9389b8720c7a501cae,Yury Selivanov,2017-11-21 16:19:52+00:00,"Fix slow_callback_duration repr in warnings for TimerHandles

Issue #103.",False,5,2,3,1.0,1.0,1.0,6498,4081,4816,243,1.7262872628726287,60.6983713282013,21.444444444444443,32.333333333333336,171.6510552754156,2.631835366899823,934.0923795825371,51.89402108791873,0.05721701842513854
314,89343b58d564eb45e0f9444990edcf4dd459a27d,Yury Selivanov,2017-11-21 16:30:36+00:00,"Fix slow_callback_duration repr in warnings for Tasks.

Issue #103.",False,32,30,2,1.0,1.0,1.0,6516,4094,4828,244,1.7243243243243243,60.68272982244274,21.51851851851852,32.44444444444444,172.48854895818712,2.62985328189887,939.5137760389943,52.19520977994412,0.05749618298606238
315,6aa12780ed5e3bd03c6c2c10831fd501857e96b7,Yury Selivanov,2017-11-21 17:11:10+00:00,Fix test_aiohttp for debug build,False,3,3,0,0.0,1.0,1.0,6519,4096,4830,244,1.7243243243243243,60.66425833700925,21.51851851851852,32.44444444444444,172.48854895818712,2.62985328189887,939.5137760389943,52.19520977994412,0.05749618298606238
316,b7568a71c2c69342ece31cda1456203f1d6d9681,Yury Selivanov,2017-11-22 20:31:15+00:00,Fix tests under old Pythons,False,2,1,1,,,,6519,4096,4830,244,1.7243243243243243,60.66425833700925,21.51851851851852,32.44444444444444,172.48854895818712,2.62985328189887,939.5137760389943,52.19520977994412,0.05749618298606238
317,da95cf03abf29f86c576ef19a076e8676eef1a14,Yury Selivanov,2017-11-24 21:01:26+00:00,Fix sock_sendall() to correctly maintain add_writer/remove_writer calls,False,7,6,1,0.0,1.0,1.0,6523,4099,4833,244,1.7243243243243243,60.659889029417734,21.555555555555557,32.51851851851852,173.0505832809949,2.6290922468912594,943.0461455368719,52.39145252982621,0.05768352776033163
318,3b210ea61c5b2f61c6415923ff6e7a0bd397c762,Yury Selivanov,2017-11-24 21:02:07+00:00,Fix connect_accepted_socket() to return correct SSL transport,False,19,15,4,0.0,1.0,0.0,6530,4104,4838,245,1.718918918918919,60.655751292394285,21.555555555555557,32.51851851851852,173.0505832809949,2.6290922468912594,943.0461455368719,52.39145252982621,0.05768352776033163
319,e19a233fde04e248e8c8eecf8d7412ef4067e0b5,Yury Selivanov,2017-11-24 21:02:36+00:00,tests: Fix warnings,False,12,9,3,1.0,1.0,1.0,6536,4106,4841,247,1.718918918918919,61.00862285405548,21.555555555555557,32.51851851851852,173.0505832809949,2.6290922468912594,943.0461455368719,52.39145252982621,0.05768352776033163
320,318e593e3f0ddb175977dba75c1a9d454598280d,Yury Selivanov,2017-11-24 21:46:19+00:00,"Implement pseudo-socket objects; don't dup() sockets

* `transport.get_extra_info('socket')` from now on will return a
  socket-like object.  That object will allow socket calls like
  `getsockopt()` and `setsockopt()` but will deny `close()`,
  `send()`, `recv()` and other invasive operations that might
  interfere with libuv.

* We no longer dup sockets when they are passed to APIs like
  `loop.create_server(sock=sock)`.  We now use `socket._io_refs`
  private API and new pseudo-sockets to guarantee that transports
  will work correctly even when users try to close the original
  socket object.",False,506,391,115,0.36065573770491804,1.0,0.36065573770491804,6610,4151,4900,248,1.7169811320754718,60.89975734519149,21.77777777777778,32.81481481481482,175.0124926549032,2.6451790407558313,956.0762733861106,53.11534852145059,0.05833749755163441
321,1a8925c9fe40d0fb22c02136ee9ab78b2c7a0f6d,Yury Selivanov,2017-11-24 21:54:48+00:00,Fix test_pseudosocket on Linux,False,4,3,1,,,,6612,4151,4900,249,1.7169811320754718,60.89878795779535,21.88888888888889,33.03703703703704,176.40719928077692,2.6767527600690135,972.5052413491574,54.028068963842074,0.05880239976025897
322,ce654bdc1a974fef25d7a4ca0ff77b66ab4c6fca,Yury Selivanov,2017-11-24 22:04:04+00:00,Add test_socket_sync_remove_and_immediately_close test,False,17,17,0,1.0,1.0,1.0,6629,4165,4913,251,1.7150537634408602,60.89209504980257,21.925925925925927,33.111111111111114,176.87921177529572,2.6752201930192054,974.7292301222749,54.15162389568194,0.0589597372584319
323,eee6984ac11b8f8926ed19efb7abf9f05140ea54,Yury Selivanov,2017-11-24 23:35:18+00:00,"Rewrite UDP transport from scratch.

The new implementation follows asyncio pretty closely.  We no longer use
uv_udp_* functions from libuv.  Instead, we use uv_poll_* and inherit
asyncio logic from selector_events.py.

When `loop.create_datagram_endpoint()` is called with a `remote_addr`
argument, asyncio attempts to *connect* the socket.  The old uvloop
implementation didn't do that, as there's no 'uv_udp_connect()' function
in libuv (at least yet).

For UDP it doesn't really matter if the socket is connected or not.  The
main difference is that when a UDP socket is connected, we can use
`socket.send(data)` method, instead of `socket.sendto(data, addr)`.

The subtle difference appears in two scenarios:

* using getsockname();

* raising an exception from `create_datagram_endpoint()` when
  `remote_addr` is unreachable.

It doesn't seem practical to wait until we have `uv_udp_connect()`
function in libuv, hence the rewrite.

In the future, when `uv_udp_connect()` is available, it should be easy
to rollback to the current implementation.

Addresses issues #109, #108, #85.",False,772,262,510,0.0,1.0,1.0,6630,4164,4915,248,1.7016129032258065,60.85421963471705,21.666666666666668,32.592592592592595,173.8432112971034,2.613738711537724,950.1339978334129,52.785222101856256,0.05794773709903448
324,827e802e8fbbe3da45a7a3bc6742727063c586f6,Yury Selivanov,2017-11-25 00:03:37+00:00,Enable TCP_NODELAY for all TCP transports,False,31,31,0,0.0,1.0,1.0,6642,4172,4925,248,1.7016129032258065,60.84129490720461,21.814814814814813,32.81481481481482,175.6262612919855,2.610892242937831,960.7790208880463,53.376612271558116,0.0585420870973285
325,f56fc75752ae60c95cf5b58deeebe3aa5d6dc175,Yury Selivanov,2017-11-25 15:11:41+00:00,Fix travis tests,False,131,74,57,1.0,1.0,0.0,6659,4182,4936,248,1.6906666666666668,60.80876180733304,21.814814814814813,32.81481481481482,175.6262612919855,2.610892242937831,960.7790208880463,53.376612271558116,0.0585420870973285
326,796073dad5a2614ff8809b198a59a34a67797c69,Yury Selivanov,2017-11-25 15:17:21+00:00,Try fixing test_create_unix_connection_1 on slow MacOS Travis instances,False,4,4,0,1.0,1.0,1.0,6663,4183,4938,249,1.6906666666666668,60.81994739778077,21.814814814814813,32.81481481481482,175.6262612919855,2.610892242937831,960.7790208880463,53.376612271558116,0.0585420870973285
327,95b75a15aea907d20877f2091a839087f5c797ef,Yury Selivanov,2017-11-25 19:35:55+00:00,tests: Split test_create_unix_connection_1 into three tests,False,55,29,26,1.0,1.0,1.0,6666,4185,4940,249,1.6851851851851851,60.8147019809478,21.74074074074074,32.592592592592595,174.28747938593006,2.6064428547287095,953.6862487050487,52.982569372502695,0.05809582646197669
328,93ec1dbb1f370a6cda8ea009657b2a6c3f8933a7,Yury Selivanov,2017-11-25 19:49:42+00:00,tests: Split test_create_connection_1 into two tests,False,46,25,21,1.0,1.0,1.0,6670,4188,4943,249,1.681578947368421,60.804684718237986,21.74074074074074,32.48148148148148,173.56795344915602,2.600670848956704,943.0148380583479,52.389713225463765,0.05785598448305201
329,14a88197795e9a77e0a7c96a4a43eab4c5a49f9e,Yury Selivanov,2017-11-26 03:20:55+00:00,Split test_process_lated_stdio_init test into 3 separate tests,False,174,89,85,1.0,0.0,0.0,6674,4188,4946,249,1.6770833333333333,60.78845219931798,21.74074074074074,32.48148148148148,173.56795344915602,2.600670848956704,943.0148380583479,52.389713225463765,0.05785598448305201
330,016a024ec59c0547ff897e771f33fb73bf321438,Yury Selivanov,2017-11-26 04:43:57+00:00,Mask one unittest on travis+macOS,False,4,4,0,0.0,1.0,1.0,6678,4190,4948,250,1.6822916666666667,60.75176646939607,21.925925925925927,32.7037037037037,174.88638209350944,2.6191893674752227,949.5814793903754,52.75452663279862,0.05829546069783648
331,0674b69e1489c91c5284f15da1cedd24d0a7d16b,Yury Selivanov,2017-11-26 05:26:24+00:00,Test that NODELAY is set when a socket object is passed to uvloop,False,6,6,0,0.0,1.0,1.0,6684,4194,4953,250,1.6822916666666667,60.74596063599207,21.925925925925927,32.81481481481482,175.6059080302835,2.624961373247228,960.2528900370763,53.34738277983756,0.058535302676761165
332,2ecaa72e2319e470c788d293f5480b79b270b78f,Yury Selivanov,2017-11-26 06:06:34+00:00,"Prohibit DNS lookups in UDP.sendto()

See issue #91.",False,30,30,0,1.0,1.0,1.0,6701,4203,4965,250,1.6805194805194805,60.69864256467174,21.925925925925927,32.81481481481482,175.6059080302835,2.624961373247228,960.2528900370763,53.34738277983756,0.058535302676761165
333,ddceca8481d8120044ba7fa71768f5efcd072bbf,Yury Selivanov,2017-11-26 06:32:14+00:00,setup.py: trim whitespace,False,2,1,1,,,,6701,4203,4965,250,1.6805194805194805,60.69864256467174,21.925925925925927,32.81481481481482,175.6059080302835,2.624961373247228,960.2528900370763,53.34738277983756,0.058535302676761165
334,6033f09422c05f7cb9ec390b14fa4f320a40d208,Yury Selivanov,2017-11-26 21:22:37+00:00,Bump the version to 0.9.0,False,2,1,1,,,,6701,4203,4965,250,1.6805194805194805,60.69864256467174,21.925925925925927,32.81481481481482,175.6059080302835,2.624961373247228,960.2528900370763,53.34738277983756,0.058535302676761165
335,22b8213a3bb3a3651feb31b08d2251fb368efcba,Yury Selivanov,2017-11-27 00:17:19+00:00,Set version to wip 0.9.1.dev0,False,2,1,1,,,,6701,4203,4965,250,1.6805194805194805,60.69864256467174,21.925925925925927,32.81481481481482,175.6059080302835,2.624961373247228,960.2528900370763,53.34738277983756,0.058535302676761165
336,e1e0d818dcfb116b341e3e3bf06f386f6bf5be6d,Yury Selivanov,2017-11-27 21:02:36+00:00,Add a test that create_connection survives immediate cancellation,False,20,20,0,1.0,1.0,1.0,6721,4216,4982,250,1.6787564766839378,60.682337024846525,21.925925925925927,32.81481481481482,175.6059080302835,2.624961373247228,960.2528900370763,53.34738277983756,0.058535302676761165
337,b4f188e97e038881b7f0649d63c8ff08e77193f8,Yury Selivanov,2017-11-27 21:26:05+00:00,Fix remove_reader and remove_writer to only decref prev added sockets,False,54,48,6,0.0,1.0,1.0,6757,4252,5014,250,1.675257731958763,60.59514008716724,22.0,33.25925925925926,178.14737511179337,2.6430169288027834,981.7040700076861,54.539115000426996,0.059382458370597795
338,d8f0e6c8c8e694d267fc7834ef4cab966e3a4b59,Yury Selivanov,2017-11-27 22:31:58+00:00,"Remove reader/writer when sock_recv(), sock_sendall(), etc are cancelled",False,149,104,45,1.0,1.0,1.0,6816,4296,5061,250,1.6717948717948719,60.499068256759514,22.185185185185187,33.74074074074074,181.2495611092876,2.648084496370351,1003.2780828583885,55.73767126991047,0.06041652036976254
339,f38a6c36d9f8124d0a8529fc9c4e2742977db388,Yury Selivanov,2017-11-27 23:12:08+00:00,Make sure multiple add_reader/add_writer calls manage refs correctly,False,50,50,0,0.0,1.0,1.0,6858,4346,5099,250,1.6683673469387754,60.42043128520532,22.25925925925926,34.03703703703704,183.0976628241847,2.653166501452356,1017.6056786142047,56.533648811900264,0.061032554274728236
340,bf940f10ec3456eefaf51880fb7aa30ae7ce719b,Yury Selivanov,2017-11-27 23:46:51+00:00,Fix sock_* methods to support already closed sockets on cancellation,False,54,51,3,1.0,1.0,1.0,6898,4379,5132,250,1.6666666666666667,60.375473837241856,22.25925925925926,34.111111111111114,183.51136375016407,2.65744000572586,1022.5462223648427,56.808123464713475,0.061170454583388024
341,b2af6b06a0343fcd47272fc078fcce2d23c1c652,Yury Selivanov,2017-11-28 16:39:53+00:00,Strict tests: fail on any unexpected call of loop.call_exception_handler,False,20,20,0,0.0,0.6153846153846154,0.8461538461538461,6918,4393,5146,251,1.6700507614213198,60.343769603829344,22.333333333333332,34.22222222222222,184.40782006381264,2.6561248651702134,1027.9070865095869,57.105949250532596,0.06146927335460422
342,46dca86c96e56b075a9d8c82202df5d83ace5f04,Yury Selivanov,2017-11-28 17:14:21+00:00,tests: Call default loop exc handler in test exc handler,False,1,1,0,1.0,1.0,0.0,6919,4394,5147,251,1.6700507614213198,60.34230438249888,22.333333333333332,34.22222222222222,184.40782006381264,2.6561248651702134,1027.9070865095869,57.105949250532596,0.06146927335460422
343,0d67b308d5eb7677033035b95a01980d3e5b1ab4,Yury Selivanov,2017-11-28 18:28:55+00:00,Silence test_create_connection_5,False,5,4,1,1.0,1.0,1.0,6922,4397,5150,251,1.6700507614213198,60.33999010981082,22.333333333333332,34.22222222222222,184.40782006381264,2.6561248651702134,1027.9070865095869,57.105949250532596,0.06146927335460422
344,0c874030044d8b87fd95ff6646d5e03268dd0d50,Yury Selivanov,2017-11-28 22:56:13+00:00,An attempt to fix a test on Travis,False,7,5,2,0.0,1.0,1.0,6925,4399,5153,251,1.6700507614213198,60.32225938278371,22.51851851851852,34.44444444444444,186.02570592765747,2.6757076663622095,1041.5844100451402,57.865800558063334,0.06200856864255249
345,d27b45c7dd097fbb05c0ec8d3f3bda05d901e67f,Yury Selivanov,2017-11-29 00:03:24+00:00,Bump the version to 0.9.1,False,2,1,1,,,,6925,4399,5153,251,1.6700507614213198,60.32225938278371,22.51851851851852,34.44444444444444,186.02570592765747,2.6757076663622095,1041.5844100451402,57.865800558063334,0.06200856864255249
346,345c86e455bcba646a320a8a2a1281e83d75d48f,Yury Selivanov,2017-11-29 03:19:48+00:00,Bump to 0.9.2.dev0,False,2,1,1,,,,6925,4399,5153,251,1.6700507614213198,60.32225938278371,22.51851851851852,34.44444444444444,186.02570592765747,2.6757076663622095,1041.5844100451402,57.865800558063334,0.06200856864255249
347,28d35d9b7ff7108cd6195d51373f8058b5c57598,Yury Selivanov,2018-04-17 20:11:34+00:00,setup.py: Add framework classifier,False,1,1,0,,,,6926,4399,5154,251,1.6700507614213198,60.32113506349203,22.51851851851852,34.44444444444444,186.02570592765747,2.6757076663622095,1041.5844100451402,57.865800558063334,0.06200856864255249
348,6128b960c3078c547a9f60df8d8049c9fce8e000,Yury Selivanov,2018-05-22 22:08:54+00:00,tests: Fix hanging test_read_pty_output,False,1,1,0,0.0,1.0,1.0,6927,4400,5155,251,1.6700507614213198,60.317981136729905,22.51851851851852,34.44444444444444,186.02570592765747,2.6757076663622095,1041.5844100451402,57.865800558063334,0.06200856864255249
349,98bdb55382845faaf019ca72b432661f788ea204,Yury Selivanov,2018-05-22 22:29:57+00:00,"Upgrade to Cython 0.28.2

Use new @cython.iterable_coroutine instead of patching the
generated C code.

Fixes issue #122.",False,96,23,73,1.0,0.0625,0.0,6862,4392,5107,247,1.6743002544529262,60.35714782957095,22.40740740740741,34.333333333333336,185.16198225707961,2.6569398755579443,1029.4805807408836,57.19336559671574,0.06172066075235988
350,087a90636f67789b93ffbfe037c41d2319f0ac51,Yury Selivanov,2018-05-23 04:46:44+00:00,Unbreak uvloop tests in debug mode,False,25,20,5,1.0,1.0,1.0,6865,4393,5108,248,1.6743002544529262,60.366753109399305,22.40740740740741,34.333333333333336,185.16198225707961,2.6569398755579443,1029.4805807408836,57.19336559671574,0.06172066075235988
351,7384b22f0b8b451c8cf71bfaf9a7264e0b33a7cf,Yury Selivanov,2018-05-23 16:21:23+00:00,"Convert Future-returning loop methods to coroutines.

The following event loop methods are now coroutines:

* getaddrinfo()
* sock_recv()
* sock_recv_into()
* sock_accept()
* subprocess_shell()
* subprocess_exec()",False,54,32,22,1.0,1.0,1.0,6868,4395,5111,248,1.6743002544529262,60.357268012976434,22.40740740740741,34.333333333333336,185.16198225707961,2.6569398755579443,1029.4805807408836,57.19336559671574,0.06172066075235988
352,c3a5ec8e8d46325a92e3cec2b8ec9f81fec1169d,Pau Freixes,2018-05-23 16:51:18+00:00,"Support for PY37 without contextvars.

This MR aligns the uvloop code to become compatible, not production
ready, with PY37 adding the following changes:

* Support for the new API used behind the set_debug function.

* Adds the context=None KW to those functions that will receive it
  when uvloop runs with PY37.

* Former asyncio.test_utils moved as an uvloop test resource.

--
Yury: the original PR for this change is #138.  I stripped out
all the CI bits and squashed all commits by hand.  The CI
will be addressed later.",False,240,123,117,1.0,0.0,0.0,6858,4394,5100,246,1.678481012658228,60.44336957940938,22.51851851851852,34.407407407407405,186.11140579206148,2.6785577315158062,1063.523380342972,59.08463224127622,0.06203713526402051
353,f0830901564c8b677d6d020e5cec4f10f85a4350,Yury Selivanov,2018-05-23 23:19:31+00:00,"Allow file objects to be passed to loop.subprocess* functions.

Fixes #136.",False,66,59,7,1.0,1.0,1.0,6913,4426,5142,247,1.6750629722921915,60.39269102191853,22.51851851851852,34.407407407407405,186.11140579206148,2.6785577315158062,1063.523380342972,59.08463224127622,0.06203713526402051
354,0e5db374901b95a48bdf7c340488d6648c448a8a,Yury Selivanov,2018-05-23 23:55:40+00:00,Fix tests,False,4,2,2,,,,6913,4426,5142,247,1.6750629722921915,60.39269102191853,22.51851851851852,34.407407407407405,186.11140579206148,2.6785577315158062,1063.523380342972,59.08463224127622,0.06203713526402051
355,a78e4d27acaafd7edbc21602ba1348818fd2a6ff,Yury Selivanov,2018-05-25 01:15:59+00:00,"Fix subprocess.close() to let its processes die gracefully (#151)

* Fix subprocess.close() to let its processes die gracefully

Fixes #128.",False,70,67,3,1.0,1.0,1.0,6943,4447,5164,247,1.6733668341708543,60.359743405035196,22.51851851851852,34.407407407407405,186.11140579206148,2.6785577315158062,1063.523380342972,59.08463224127622,0.06203713526402051
356,a455af3d53cf28122c37aa9cecfdf2bdc44a88f6,Yury Selivanov,2018-05-25 02:27:51+00:00,"Cleanup process finalization logic.

A follow up to fixes for #128.",False,60,34,26,1.0,1.0,1.0,6948,4449,5166,249,1.6733668341708543,60.373377699356205,22.51851851851852,34.407407407407405,186.11140579206148,2.6785577315158062,1063.523380342972,59.08463224127622,0.06203713526402051
357,ce2bd4fbf749cbe2ffbf7da8bed09959ca5c5742,Yury Selivanov,2018-05-25 03:13:40+00:00,"Fix sock_connect() to resolve addresses for correct socket family

Fixes #139.",False,21,20,1,1.0,1.0,1.0,6964,4457,5174,255,1.6716791979949874,60.41739487695161,22.51851851851852,34.407407407407405,186.11140579206148,2.6785577315158062,1063.523380342972,59.08463224127622,0.06203713526402051
358,2a4fab44a46b95d6b23af4ceb948ed3f5cbcd042,Yury Selivanov,2018-05-25 20:30:19+00:00,Implement PEP 567 support (contextvars) for Python 3.7 (#155),False,276,249,27,1.0,1.0,0.93,7103,4551,5272,259,1.6633906633906634,60.20327352865382,22.285714285714285,33.964285714285715,182.60742701377356,2.696531319026605,1035.5404024735801,57.53002235964333,0.06086914233792453
359,82013cf0fc4d64f32496d0ecebbe7719a5436fb4,Yury Selivanov,2018-05-25 21:34:38+00:00,examples/bench: Fix linting errors,False,31,14,17,,,,7100,4550,5271,259,1.6633906633906634,60.20660008376315,22.285714285714285,33.964285714285715,182.60742701377356,2.696531319026605,1035.5404024735801,57.53002235964333,0.06086914233792453
360,cd53b7f55937fb0057464d365db52a5cefb167cd,Yury Selivanov,2018-05-25 21:35:05+00:00,Prohibit adding a signal handler for SIGCHLD (#156),False,200,130,70,0.3448275862068966,1.0,1.0,7135,4575,5300,261,1.662591687041565,60.135196498670325,22.285714285714285,33.964285714285715,182.60742701377356,2.696531319026605,1035.5404024735801,57.53002235964333,0.06086914233792453
361,ed2723f0941ba52450f332b4bb7f95f1ac93945c,Yury Selivanov,2018-05-25 21:48:18+00:00,examples/bench: Add SSL mode,False,46,42,4,0.0,0.0,1.0,7173,4600,5333,261,1.6650366748166259,59.85613876906711,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
362,878e4163b18770b338897fc5d5e9155a29552168,Yury Selivanov,2018-05-25 21:50:09+00:00,Raise NotImplementedError for contextvars for Python < 3.7,False,15,10,5,1.0,1.0,1.0,7176,4600,5336,261,1.6650366748166259,59.85015393671255,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
363,4d91264340710e25f6db2a38017e1c259341305d,Yury Selivanov,2018-05-26 00:06:19+00:00,"Cythonize asyncio's sslproto.py

The performance boost is 10-15%.  The main motivation, though, is
to backport new SSL features to 3.5 and 3.6 and to have a consistent
behaviour in uvloop.",False,727,719,8,,,,7176,4600,5336,261,1.6650366748166259,59.85015393671255,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
364,a6378778d7488a0c1206c80fc076306c0791d1b2,Yury Selivanov,2018-05-30 16:05:05+00:00,setup.py: Check correct Cython version; fix linting errors,False,14,7,7,,,,7176,4600,5336,261,1.6650366748166259,59.85015393671255,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
365,740cb7f37437345fc29fbdf6008493c290567290,Yury Selivanov,2018-05-30 16:07:02+00:00,"setup.py: Read __version__ from uvloop/__init__.py

Fixes #137.",False,14,13,1,,,,7188,4608,5346,261,1.6650366748166259,59.80539987474698,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
366,6bdb91aefc6acb9b0065c7edae19887778dedb22,Yury Selivanov,2018-05-30 16:54:45+00:00,Fix ci / package_version.py script to support __version__,False,11,6,5,1.0,1.0,1.0,7188,4608,5346,261,1.6650366748166259,59.80539987474698,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
367,33cb17e02a83b810e06aa68c8e0579cbc9cca6e5,Yury Selivanov,2018-05-30 18:35:27+00:00,Bump the version to v0.10.0,False,2,1,1,,,,7188,4608,5346,261,1.6650366748166259,59.80539987474698,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
368,94e3a87063fbca6d3bd30f68f672f67c2b8048ba,Yury Selivanov,2018-05-30 20:51:40+00:00,setup: Add Python 3.7 classifier,False,1,1,0,,,,7189,4608,5347,261,1.6650366748166259,59.804121199631936,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
369,dc2256d04ab8519caec9c45ce41dd1c1a9a30136,Yury Selivanov,2018-05-30 20:52:43+00:00,Bump the dev version,False,2,1,1,,,,7189,4608,5347,261,1.6650366748166259,59.804121199631936,22.642857142857142,34.607142857142854,185.8641851946256,2.7269935039005553,1044.5733268909485,58.03185149394158,0.06195472839820854
370,68dd733717e76aebe6c1c2958d6bf32b2ef441b8,Yury Selivanov,2018-06-01 17:10:36+00:00,"Add ssl_handshake_timeout parameter to loop connection/server APIs

As part of this commit, fix error propagation in SSLProtocol
implementation.",False,352,283,69,0.6229508196721312,1.0,0.9672131147540983,7343,4698,5467,263,1.6923076923076923,59.518252605910206,24.714285714285715,37.75,210.61719558269095,2.76243692648909,1237.570518449209,68.75391769162272,0.07020573186089699
371,ac90d8bd4d83e8c880838f66c23ed37881306995,Yury Selivanov,2018-06-01 20:11:38+00:00,Make sure we always close transports if connection waiter has failed,False,119,91,28,0.13513513513513514,1.0,1.0,7393,4724,5502,268,1.6954436450839327,59.50160909021849,24.785714285714285,37.964285714285715,212.28079878801162,2.765782343603304,1255.2013409495764,69.73340783053203,0.07076026626267054
372,a959f27484105a1e56104fb56fe4a990178f5a44,Yury Selivanov,2018-06-01 23:16:25+00:00,Add support for BufferedProtocol,False,385,339,46,0.5441176470588235,1.0,0.8014705882352942,7541,4832,5612,268,1.692124105011933,59.41350570964745,25.25,38.67857142857143,218.42260990747644,2.7844749083485003,1333.3449047167621,74.07471692870902,0.07280753663582547
373,76b34bef668fb981bb9641ddc018c2fc0f5bafc4,Yury Selivanov,2018-06-01 23:16:25+00:00,Fix BufferedProtocol.get_buffer to accept *sizehint* argument,False,23,16,7,1.0,1.0,1.0,7550,4840,5620,268,1.692124105011933,59.40895114093208,25.25,38.67857142857143,218.42260990747644,2.7844749083485003,1333.3449047167621,74.07471692870902,0.07280753663582547
374,622ed9c5e9a14478dd3f1668a66459b1f3aab15b,Yury Selivanov,2018-06-04 20:40:50+00:00,"Implement loop.start_tls()

Side change: no longer defer ""start_reading()"" call after
""connection_made()"".  The reading should start synchronously to copy
asyncio behaviour.  The race condition in sslproto.py that prompted that
change has been fixed.",False,480,456,24,0.6943521594684385,1.0,0.9036544850498339,7923,5085,5889,273,1.6964705882352942,59.21418087268195,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
375,6a42f8412a242f21eccfce9429ce52916f30a6c9,Yury Selivanov,2018-06-04 20:44:24+00:00,Add Server.get_loop(),False,5,5,0,0.0,1.0,1.0,7925,5086,5890,273,1.6964705882352942,59.2137387451743,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
376,464ef1383059af37c0359c3c39dc951dc1e54229,Yury Selivanov,2018-06-04 21:32:06+00:00,Unbreak CI,False,3,2,1,0.0,1.0,1.0,7926,5087,5891,273,1.6964705882352942,59.21329702014954,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
377,a190cddb20c4879068836b8fbb3cd27ca3eb3aac,Yury Selivanov,2018-06-21 15:42:14+00:00,setup.py: Detect if libuv submodule has not been checked out,False,14,11,3,1.0,1.0,1.0,7934,5090,5896,274,1.6988235294117646,59.21086165394019,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
378,6f1b21fe0359b03f9d6155c90600835b2d5d6d80,Yury Selivanov,2018-06-21 15:43:38+00:00,setup.py: Use raw string for regexp,False,2,1,1,,,,7934,5090,5896,274,1.6988235294117646,59.21086165394019,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
379,9f7cedf915e812aac96192265be273f7343a3af0,Yury Selivanov,2018-06-21 15:45:13+00:00,Ignore linting errors in includes/__init__,False,2,2,0,,,,7936,5090,5896,275,1.6988235294117646,59.21086165394019,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
380,cb0a65aea0e5d476a7e7251c987a7db20bc1e032,Yury Selivanov,2018-06-22 22:45:43+00:00,"Experimental fix for #169

Co-authored-by: Andrey Egorov <andr06@gmail.com>",False,224,185,39,1.0,1.0,1.0,8021,5145,5958,282,1.6955503512880563,59.19548539950903,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
381,b996e0f7ddc622afbbd06d1640f7804f0a97745c,Yury Selivanov,2018-06-25 17:33:23+00:00,Add a script to generate release log,False,48,48,0,0.0,1.0,1.0,8021,5145,5958,282,1.6955503512880563,59.19548539950903,26.321428571428573,40.714285714285715,235.7968955094402,2.788519474893067,1485.7361635404945,82.54089797447192,0.07859896516981339
382,f9c43937dcf4505d55d4c552da0bfa1be6acb804,Fantix King,2018-07-04 15:20:45+00:00,Fix error caused by short-circuit on EPOLLHUP,False,58,57,1,0.6363636363636364,1.0,1.0,8072,5185,5997,283,1.6939252336448598,59.137513568844284,26.678571428571427,41.25,239.83498569805224,2.7828368739838507,1503.9955626024293,83.55530903346832,0.0799449952326841
383,486f82daf467e46e199ff385f864cb5cd1de5e45,ciscorn,2018-08-01 14:39:09+00:00,"Fix #180: Server unable to shutdown when persistent connections exist (#181)

Revert ""Fix Server to wait in wait_closed() until all transports are done""
This reverts commit 124e981bc90fbe2814dd1efd051e5b5a394cf1df.",False,75,64,11,1.0,1.0,1.0,8122,5227,6040,283,1.6923076923076923,58.66830694387152,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
384,92526cfdcb6d6feec7bcc98a0280ef4c664c9f40,Yury Selivanov,2018-08-02 01:13:20+00:00,Make subprocess tests resilient to warnings,False,49,25,24,,,,8123,5227,6041,283,1.6923076923076923,58.6679383958828,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
385,644674ad14ad14717df5f4855bfe6cfec75b8a0f,Yury Selivanov,2018-08-02 03:24:35+00:00,Fix process handles leak when uv_spawn() fails (#187),False,68,65,3,1.0,1.0,1.0,8168,5256,6078,283,1.6875,58.616214970552335,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
386,f24c8223b9e3ff90a47d6b24ea84c34f2bf0112b,Yury Selivanov,2018-08-02 14:43:48+00:00,Bump the version to 0.12.0.dev0,False,2,1,1,,,,8168,5256,6078,283,1.6875,58.616214970552335,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
387,a3d8d4011fe432d7c83b80ecac8e678257b384f0,Yury Selivanov,2018-08-02 14:58:36+00:00,Add `uvloop.install()` helper function.,False,11,8,3,1.0,1.0,1.0,8173,5259,6080,283,1.6859122401847575,58.616214970552335,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
388,8604b0361a20e8f4e1ef1a0266e6d811cf324393,Yury Selivanov,2018-08-07 16:56:06+00:00,"Fix a memory leak related to contextvars support. (#192)

Initial patch and memleak discovery by Victor K. @hellysmile.

Fixes #191.",False,42,40,2,1.0,1.0,1.0,8197,5278,6098,283,1.6843317972350231,58.51784861608728,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
389,ee054206b00c15988f0f71c4a947cb4d13d2af5a,Yury Selivanov,2018-08-07 17:05:28+00:00,tests: Improve test_task_context_4,False,3,2,1,1.0,1.0,1.0,8198,5279,6099,284,1.6843317972350231,58.556263033770286,26.785714285714285,41.357142857142854,240.2190888231295,2.8006940168409935,1504.4645744329025,83.58136524627237,0.08007302960770986
390,9cba7493a152e5a77bbde9a32143d84433d1cd3d,Fantix King,2018-09-18 02:21:00+00:00,Fixed #158: new SSL implementation (#176),False,2098,1593,505,0.3360128617363344,0.8102893890675241,1.0,8980,5825,6698,305,1.691275167785235,58.282651669802874,29.392857142857142,47.75,295.7056792643484,2.8810786605770304,2191.7754881591486,121.76530489773047,0.09856855975478285
391,f98e135979a595cc7c41017ad3b5c1c8bdec058c,Yury Selivanov,2018-09-21 17:04:55+00:00,Add a test that processes handle invalid FDs,False,34,34,0,0.4666666666666667,1.0,1.0,9014,5845,6727,305,1.6986607142857142,58.225112280316736,29.428571428571427,47.82142857142857,296.1036509973841,2.8810786605770304,2193.1683892247734,121.84268829026519,0.09870121699912804
392,2abae06df7d32b8a9bcf88a5442be626c4eb039b,Fantix King,2018-10-01 15:48:29+00:00,"Refs #197, fix unstable test_remote_shutdown_receives_trailing_data (#198)

Fix #197, close SSL transport instead if waiter raises.

Refs #197, fixed hanging test_write_to_closed_transport on OpenSSL 1.1.1",False,48,36,12,0.3333333333333333,0.0,1.0,9027,5854,6736,308,1.6986607142857142,58.22884712758599,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
393,63ee4ce60b974dd46c722bc1107983091fd28ad1,Fantix King,2018-10-12 03:04:18+00:00,"Fixed #197, fix segfault and make SSL transport creation lazy (#203)",False,77,57,20,0.38461538461538464,1.0,1.0,9055,5876,6761,308,1.7015590200445434,58.20751203216332,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
394,64b7911854ee650204b82ee7e6bb3e9ed7603b98,Bartłomiej Biernacki,2018-10-18 00:24:47+00:00,"Don't raise ""requires a DNS lookup"" error on Unix Domain Socket (#204)",False,24,22,2,1.0,1.0,1.0,9073,5892,6778,308,1.6977777777777778,58.142601286566126,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
395,5220d32841e6e4db352a2d7aa0241cb9ce58492e,Yury Selivanov,2018-10-31 20:44:56+00:00,Bump to 0.12.0rc1,False,2,1,1,,,,9073,5892,6778,308,1.6977777777777778,58.142601286566126,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
396,2e0f3a3b333dcdad558cfbdb45d7556725b7bb4c,Yury Selivanov,2018-11-01 00:27:56+00:00,Bump version to 0.12.0rc2.,False,2,1,1,,,,9073,5892,6778,308,1.6977777777777778,58.142601286566126,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
397,df0e543a653cd17b800a866b7efa5326352efa16,Yury Selivanov,2018-11-01 01:10:57+00:00,Silence asyncio warnings in test_tasks.py,False,32,22,10,,,,9085,5900,6786,308,1.6977777777777778,58.11680753693314,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
398,f24c2c566153e1a05747d08b2ad2cb5451e072f5,Jeremy Lainé,2019-01-09 16:50:34+00:00,"Don't use non-existent UDPTransport._address attribute (fixes: #207)

If the sendto() method is called after closing the transport, it bombs
with an AttributeError as there is no `._address` attribute. Replacing
this by `.address` is not a solution either, as we need to exit in any
case otherwise the call to sendto() bombs again due to `.sock` having
been set to None.",False,15,14,1,1.0,1.0,1.0,9098,5907,6796,308,1.6962305986696231,58.08536653781537,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
399,1f0b30af9b56b7bb40a3d758f129801f2eb055d4,Yury Selivanov,2019-01-11 17:11:39+00:00,Bump the version to 0.12.0,False,2,1,1,,,,9098,5907,6796,308,1.6962305986696231,58.08536653781537,29.5,47.92857142857143,297.1496492174395,2.880260535970359,2200.72041440219,122.2622452445661,0.09904988307247986
400,a2e0dd8e22ef9edb5699fcb45a47a3506b4aacb5,Fantix King,2019-02-11 19:35:07+00:00,"Fixes #220, fix sslproto memory leak

There were two issues: 1) at `connection_lost()` the timeout handle
was never cancelled because getting a cdef property on a cdef class
with `getattr` always return `None`, and 2) for now cancelling a
uvloop timeout handle only clears references to call arguments but
not the callback object itself, therefore the closure is now a part
of the arguments to avoid SSLProtocol object stays in memory until
the cancelled timeout handle actually get deallocated.",False,81,79,2,0.6981132075471698,1.0,1.0,9165,5951,6844,314,1.6975717439293598,58.065066924298,29.642857142857142,48.142857142857146,299.2443965989429,2.8786667867365847,2215.8672822650456,123.10373790361366,0.09974813219964763
401,274e25ce9ae884e53ebaf5bede019098021bfcb1,Yury Selivanov,2019-02-11 23:49:30+00:00,Bump the version to 0.12.1,False,2,1,1,,,,9165,5951,6844,314,1.6975717439293598,58.065066924298,29.642857142857142,48.142857142857146,299.2443965989429,2.8786667867365847,2215.8672822650456,123.10373790361366,0.09974813219964763
402,adbf08f1161b1506bee38fad8548c4be61898d38,Yury Selivanov,2019-02-12 16:58:53+00:00,Bump the version to 0.12.2.dev0,False,2,1,1,,,,9165,5951,6844,314,1.6975717439293598,58.065066924298,29.642857142857142,48.142857142857146,299.2443965989429,2.8786667867365847,2215.8672822650456,123.10373790361366,0.09974813219964763
403,fddc43abe27844bb8d5841990856768cf16aaa33,Yury Selivanov,2019-02-12 17:00:47+00:00,Bump the version to 0.13.0.dev0,False,2,1,1,,,,9165,5951,6844,314,1.6975717439293598,58.065066924298,29.642857142857142,48.142857142857146,299.2443965989429,2.8786667867365847,2215.8672822650456,123.10373790361366,0.09974813219964763
404,b8fb1ef1d089363b5bd001b7d871077714ad92e4,Yury Selivanov,2019-02-16 14:18:25+00:00,Enforce consistent code style with flake8,False,354,208,146,0.12,0.96,1.0,9203,5973,6876,315,1.712719298245614,58.75866438761595,28.689655172413794,46.55172413793103,288.99458981966905,2.7966437940904956,2139.4925483938373,118.86069713299096,0.0963315299398897
405,7a4f00a3c22e52b88deb4b261e093e8affa4ea0a,Jeremy Lainé,2019-02-16 19:57:10+00:00,Implement Server.start_serving() and related APIs,False,317,231,86,0.4925373134328358,0.0,1.0,9286,6026,6939,316,1.7145969498910676,58.6964317076038,28.93103448275862,46.96551724137931,292.3151516651441,2.7920909652497827,2163.964524513847,120.2202513618804,0.0974383838883814
406,6c70216c0fb171d9faa7eb48292ba98ab9c09436,Fantix King,2019-03-17 17:07:09+00:00,"Fix SSL memory leak

Refs bpo-34745, protocol and transport form circular reference,
causing SSLContext stack up ugly.",False,67,67,0,0.62,1.0,0.92,9352,6067,6983,320,1.7152173913043478,58.68193403227826,29.06896551724138,47.275862068965516,295.1689528906681,2.792812205107932,2195.317866558286,121.96210369768256,0.09838965096355604
407,d6c67e7a7283f433e314e96a3bae2085e1d72e8f,Jeremy Lainé,2019-03-17 17:13:33+00:00,"Make Server an asynchronous context manager (fixes: #221)

The Server class was missing __aenter__ and __aexit__ magic methods to
allow usage of the form:

  async with server:
    await server.serve_forever()",False,25,18,7,0.0,1.0,1.0,9354,6068,6985,320,1.7152173913043478,58.68156879748326,29.06896551724138,47.275862068965516,295.1689528906681,2.792812205107932,2195.317866558286,121.96210369768256,0.09838965096355604
408,73529c5b451b0a4b235be8ff06bad802d57596ca,Fantix King,2019-03-18 15:38:17+00:00,"Round delay in call_later()

* Fixes #233.",False,15,14,1,1.0,1.0,1.0,9367,6077,6994,322,1.7158351409978307,58.66186239587766,29.344827586206897,47.689655172413794,298.3297617206481,2.8117625539804165,2234.0801726753134,124.11556514862852,0.09944325390688272
409,2b6620b811150ffe71309282c17ecb20d8a29227,Yury Selivanov,2019-03-20 14:26:53+00:00,"Fix memory leak related to call_later() and call_at()

The crux of the problem is that TimerHandle did not clean up a strong
reference from the event loop to `self`.  This typically isn't a problem
unless there's another strong reference to the loop from the callback or
from its arguments (such as a Future).

A few new unit tests should ensure this kind of bugs won't happen again.

Fixes: #239.",False,94,75,19,1.0,1.0,1.0,9401,6109,7022,324,1.7096774193548387,58.62556819195356,29.344827586206897,47.689655172413794,298.3297617206481,2.8117625539804165,2234.0801726753134,124.11556514862852,0.09944325390688272
410,e3b00b81024fd69de9b4d51a8ae49ffe033bc0cb,Yury Selivanov,2019-03-20 17:24:47+00:00,Make test_call_later_rounding more stable (but less strict),False,2,1,1,,,,9401,6109,7022,324,1.7096774193548387,58.62556819195356,29.344827586206897,47.689655172413794,298.3297617206481,2.8117625539804165,2234.0801726753134,124.11556514862852,0.09944325390688272
411,a9ecf9e606e3334bf65a51ae1aba62e2708a59dd,Yury Selivanov,2019-04-22 16:41:15+00:00,Bump the version to 0.14.0.dev0,False,2,1,1,,,,9401,6109,7022,324,1.7096774193548387,58.62556819195356,29.344827586206897,47.689655172413794,298.3297617206481,2.8117625539804165,2234.0801726753134,124.11556514862852,0.09944325390688272
412,cbbac15f653f08308db025c74d6ce1f474a895f4,Fantix King,2019-05-07 15:18:39+00:00,"enforce TLS<1.3 for SSL renegotiation tests

* fixes #248",False,4,4,0,0.0,1.0,1.0,9405,6113,7026,324,1.7139784946236558,58.615666414886626,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
413,82104fb68e6cf2b469622e62169cdbeac93846cb,Fantix King,2019-08-24 00:02:29+00:00,"add app state check (#263)

* add app state check

* fixes #246

* add test to cover the case

* CRF: rename states and fix comment",False,86,78,8,0.39473684210526316,1.0,1.0,9454,6141,7060,328,1.7188841201716738,58.615666414886626,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
414,6b91061cff92190e50e8f8728e73c53a5efa35a7,Fantix King,2019-10-21 17:21:01+00:00,fix test_renegotiation,False,4,2,2,,,,9454,6141,7060,328,1.7188841201716738,58.615666414886626,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
415,5905f27a95c9d358a747b277cb5956562f876712,Fantix King,2019-10-22 20:47:12+00:00,prefer PROTOCOL_TLS than PROTOCOL_SSLv23,False,23,18,5,0.0,1.0,0.5714285714285714,9467,6154,7073,328,1.7253218884120172,58.570336922423465,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
416,5f48dab8fa1354d3bedcc8cd12d7d18ea62a1b76,Yury Selivanov,2019-10-24 18:42:54+00:00,tests: Support 3.8,False,532,114,418,0.0,0.0,0.0975609756097561,9031,5919,6719,312,1.778538812785388,59.12488491728306,29.964285714285715,48.535714285714285,307.8142211976979,2.8000608313911575,2342.9956064670696,130.16642258150384,0.10260474039923265
417,51636f7b72d65359681d3a90ded7e62d72b4ab18,Yury Selivanov,2019-10-24 18:42:54+00:00,"asyncio.CancelledError is BaseException now, so fix `except Exception`",False,156,117,39,0.5,0.5,1.0,9335,6142,6943,326,1.7228144989339018,58.58006560287616,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
418,eb8d7ba170eae5b1cf08cef3fa8a82c3af3920c7,Yury Selivanov,2019-10-24 18:42:54+00:00,"tests: Stop passing loop explicitly in tests

In 3.8 a lot of asyncio functions have their `loop` parameter
deprecated.  So we change the semantics of uvloop tests to never
pass the loop explicitly (unless to Future objects, when necessary)

That means that we now also need to set up asyncio/uvloop loop policies
for tests in setUp hooks.",False,564,221,343,1.0,0.11570247933884298,0.0,9345,6152,6953,326,1.7185501066098081,58.57600585288331,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
419,0bb811d11fba697ff19b2b0fcffac7e485412de8,Yury Selivanov,2019-10-24 18:42:54+00:00,tests: Stop using @asyncio.coroutine in tests,False,98,42,56,1.0,0.0,0.0,9331,6138,6939,326,1.7185501066098081,58.594623844656276,29.482758620689655,47.89655172413793,300.36412437671845,2.8103136224768424,2248.808366307071,124.93379812817061,0.1001213747922395
420,48d376d30c9a01516f13d15aaa3d756ce13e97e8,Vladimir Matveev,2019-10-24 18:58:29+00:00,Keep behavior of run_* consistent with event loops bundled in CPython: ensure that wakeup fd is non-modified if it was not changed before i.e. via calling add_signal_handler,False,58,53,5,0.08108108108108109,1.0,1.0,9071,5927,6749,312,1.7767653758542141,59.070405629895156,30.071428571428573,48.75,308.99012800069687,2.8000608313911575,2343.7795443357354,130.20997468531863,0.10299670933356564
421,1a0d6578aa6155dec1049147c0b04968f68cf68d,Yury Selivanov,2019-10-25 02:21:42+00:00,Fix #259: handle large timeouts in loop.call_later(),False,36,34,2,1.0,1.0,1.0,9102,5947,6775,312,1.775,59.03097655083228,30.321428571428573,49.17857142857143,312.2488942740165,2.8245847538633724,2391.385580681038,132.85475448227984,0.1040829647580055
422,fde5d14f7d0f7039e50dc4d816218343e80b8410,Adam Bella,2019-10-25 02:24:16+00:00,"fix - uvloop freeze when something other than uvloop invoke process fork and execute non-python process

Problem:
Uvloop for each loop register `atFork` handler that is called after fork is executed by forked child.
This handler works fine when fork was invoked by uvloop. In case fork is invoked by something else (such as external library)
uvloop freeze in this handler because:
- GIL is acquired inside `atFork` handler -> in case forked child does not contain python runtime `atFork` handler freeze at obtaining GIL
- when compiled in debug mode (`make debug`) cython trace calls are inserted inside compiled `atFork` handler -> in case forked child does not contain python runtime `atFork` handler freeze at providing trace call

Solution:
This fix solve described problems by implementing `atFork` handler as C function so that forked child can call it safely whether or not contains python runtime.",False,151,140,11,0.7317073170731707,1.0,0.8292682926829268,9211,6022,6855,316,1.7737556561085972,59.184346341994065,29.655172413793103,47.86206896551724,302.7938892233611,2.796150796833601,2311.5484053337614,128.41935585187562,0.10093129640778704
423,0814a4f6a872fc47dab54406c2a64b70bc94a77f,Yury Selivanov,2019-10-25 02:30:43+00:00,Stop passing the `loop` arg around in in test_spawning_external_process,False,10,4,6,0.0,0.0,0.0,9209,6022,6853,316,1.7737556561085972,59.19047860281764,29.655172413793103,47.86206896551724,302.7938892233611,2.796150796833601,2311.5484053337614,128.41935585187562,0.10093129640778704
424,dd4cb7ac265165e0d3675539da858680cf4854d8,Yury Selivanov,2019-10-25 02:41:12+00:00,"Handle unix sockets in UDP

Fixes #269.

Co-authored-by: Dmitry Orlov <me@mosquito.su>",False,101,94,7,0.22950819672131148,1.0,0.8688524590163934,9261,6058,6890,317,1.7737556561085972,59.03435863154024,30.06896551724138,49.0,309.3886721608998,2.880058842810612,2362.373849671054,131.24299164839186,0.1031295573869666
425,bed926c500672866e3c71b07e198a96617908318,Yury Selivanov,2019-10-25 03:01:28+00:00,"Avoid double connecting to remote_addr for datagram transports

Issue #276.",False,26,24,2,1.0,1.0,1.0,9285,6068,6907,318,1.7720090293453725,59.02555158332925,30.06896551724138,49.0,309.3886721608998,2.880058842810612,2362.373849671054,131.24299164839186,0.1031295573869666
426,006805091cc3c5e11ab6068b509c7f76993e03f1,Yury Selivanov,2019-10-25 04:10:59+00:00,Drop explicit `loop=` argument from test_wakeup_fd_unchanged,False,3,1,2,1.0,0.0,0.0,9284,6068,6906,318,1.7720090293453725,59.02555158332925,30.06896551724138,49.0,309.3886721608998,2.880058842810612,2362.373849671054,131.24299164839186,0.1031295573869666
427,7fcbfed1ef1b3ad038b339dcd6005f1f23145094,Fantix King,2019-10-25 14:22:31+00:00,"fix None _shutdown_timeout_handle issue

* Fixes #255
* Also make handles more robust",False,54,52,2,1.0,1.0,1.0,9328,6099,6938,322,1.7702702702702702,59.02555158332925,30.20689655172414,49.206896551724135,311.4264113078692,2.878657223356134,2377.152926596186,132.06405147756587,0.10380880376928972
428,6476aad6fd6c002e862681720cffe727123278af,Fantix King,2019-10-28 22:14:43+00:00,"fix missing data on EOF in flushing

* when EOF is received and data is still pending in incoming buffer,
  the data will be lost before this fix
* also removed sleep from a recent-written test",False,118,47,71,1.0,1.0,0.0,9316,6089,6928,321,1.7725225225225225,59.02555158332925,30.20689655172414,49.3448275862069,312.5329447993214,2.8818240073110952,2400.8643585558757,133.3813532531042,0.10417764826644048
429,c32c7039cd1ea41a4dfc77548f13b01c60f4422b,Yury Selivanov,2019-10-29 02:53:26+00:00,"Fix KeyboardInterrupt handling logic.

When uvloop is run in the main thread we *always* want to set up a
self-pipe and a signal wakeup FD.  That's the only way how libuv
can be notified that a ^C happened and break away from selecting
on sockets.

asyncio does not need to do that, as the 'selectors' module it uses
is already aware of the way Python implements ^C handling.

This translates to a slightly different behavior between asyncio &
uvloop:

1. uvloop needs to always call signal.set_wakeup_fd() when run in the
  main thread;

2. asyncio only needs to call signal.set_wakeup_fd() when a user
  registers a signal handler.

(2) means that if the user had not set up any signals, the signal
wakeup FD stays the same between different asyncio runs.  This commit
fixes uvloop signal implementation to make sure that uvloop behaves
the same way as asyncio in regards to signal wakeup FD between the
loop runs.  It also ensures that uvloop always have a proper
self-pipe set up so that ^C is always supported when it is run in
the main thread.

Issue #295.",False,241,146,95,0.09375,1.0,1.0,9352,6097,6957,321,1.7707865168539325,58.97100263298246,30.310344827586206,49.55172413793103,313.7181426441075,2.8818240073110952,2401.6544904524,133.42524946957775,0.10457271421470252
430,8beacd265651429a558d1b22e200d6d81016f1db,Fantix King,2019-10-29 02:53:47+00:00,run `test_shutdown_timeout_handler_not_set` in aio,False,4,0,4,0.0,0.0,0.0,9348,6095,6955,320,1.7685393258426967,58.97100263298246,30.24137931034483,49.44827586206897,312.6973164175948,2.882545113122513,2394.275702248326,133.01531679157364,0.10423243880586494
431,35f82506d19ef2602053304b36b93d06111d25af,Yury Selivanov,2019-10-29 03:27:22+00:00,Bump the version to 0.15.0.dev0,False,2,1,1,,,,9348,6095,6955,320,1.7685393258426967,58.97100263298246,30.24137931034483,49.44827586206897,312.6973164175948,2.882545113122513,2394.275702248326,133.01531679157364,0.10423243880586494
432,5dc299b7889461c49b27ec8ced1050b5a3f9099c,YoSTEALTH,2020-02-20 07:36:00+00:00,updated cython version check,False,3,2,1,0.0,0.0,1.0,9349,6096,6956,320,1.7685393258426967,58.967380761200715,30.24137931034483,49.44827586206897,312.6973164175948,2.882545113122513,2394.275702248326,133.01531679157364,0.10423243880586494
433,d99d7dcf463a9d6acb3bb125b698c8bed3360361,Fantix King,2020-04-11 01:55:27+00:00,skip for bpo-27500,False,15,12,3,1.0,1.0,1.0,9393,6123,6989,325,1.7700892857142858,58.94018214021381,30.724137931034484,50.172413793103445,317.85507640349124,2.9188341114804772,2441.843962039502,135.65799789108343,0.10595169213449711
434,1d9267afa8f8f3dbc8e31590eb69cb39be9f4e25,Fantix King,2020-04-11 01:55:27+00:00,"Allow sendto the same addr if remote_addr is set

* Fixes #319.",False,55,54,1,0.12,1.0,0.12,9384,6117,6981,325,1.7713004484304933,58.96476232382596,30.724137931034484,50.172413793103445,317.85507640349124,2.9188341114804772,2441.843962039502,135.65799789108343,0.10595169213449711
435,d51ce36785b93daaceccd4befb621e5b27ec71e1,Fantix King,2020-04-16 17:47:51+00:00,"Add name keyword argument to loop.create_task()

* Fixes #309.
* Refs bpo-34270.",False,55,54,1,0.21875,1.0,1.0,9433,6153,7018,325,1.7750556792873051,58.8808831735751,31.06896551724138,50.689655172413794,321.96178891300997,2.936348797605711,2495.816477267149,138.65647095928605,0.10732059630433666
436,9e017e6ee9856f490368878c8f9bbd20940d111d,Fantix King,2020-04-28 02:46:03+00:00,"Accept empty addr in UDP on_receive

* Fixes #304",False,57,50,7,0.08571428571428572,1.0,0.9142857142857143,9477,6184,7052,328,1.7866666666666666,58.824064910206275,31.17241379310345,50.86206896551724,323.2013350566649,2.9322437072937237,2502.044246896941,139.0024581609412,0.10773377835222162
437,506a2aa1ebf6c6b7822f9c5b776fa5c27e2b164c,Fantix King,2020-05-13 18:52:17+00:00,"apply bpo-37228

* refs python/cpython#17311",False,78,62,16,1.0,0.6428571428571429,1.0,9518,6208,7080,331,1.7902869757174393,58.75240983679001,31.586206896551722,51.51724137931034,328.0789490737871,2.9732050448067855,2562.1424127430846,142.3412451523936,0.10935964969126237
438,5d41af8079d7d318b7650129b40bc6f4da890e17,Fantix King,2020-05-14 01:06:44+00:00,"forcely add UV_HANDLE_READABLE on pipe_t

* in order to detect peer close on O_WRONLY pipe_t
* partially reverted d8fe153
* refs libuv/libuv#2058
* refs #317
* fixes #311, fixes #312",False,110,43,67,0.17391304347826086,1.0,1.0,9548,6233,7104,331,1.7894736842105263,58.64392161958344,31.689655172413794,51.724137931034484,329.39792498347964,2.999785504576901,2575.1071863377406,143.06151035209675,0.10979930832782656
439,c39297204aa980d884448e37ef5a8aa78719ee70,Pierre Tardy,2020-05-14 01:06:44+00:00,"Add failing unit tests to reproduce issue #312

* closes #313",False,49,49,0,0.18604651162790697,1.0,1.0,9597,6261,7146,331,1.7809110629067244,58.55365903506764,31.93103448275862,52.03448275862069,331.3437724463084,3.0170268838872456,2585.5139623971468,143.63966457761924,0.11044792414876946
440,0d14ec6452f108c7b644d53ddc29ced4cf8b986e,Joongi Kim,2020-05-16 17:59:56+00:00,"fix: Accept path-like objects in subprocess arguments

* Also add subprocess test case using Path object

* uvloop already handles path-like cwd correctly, so I just
  copy-and-pasted the same logic to _init_args() method.

* The standard library uses ""isinstance(obj, os.PathLike)"" to check
  if an object is path-like, but os.PathLike exists as of Python 3.6.
  Since uvloop needs to support Python 3.5, we should use manual check
  for existence of the __fspath__ attribute.

* According to the official Python documentation:

  - https://docs.python.org/3/library/subprocess.html#subprocess.Popen
    The subprocess.Popen() constructor support path-like objects since
    Python 3.6 on POSIX and since Python 3.8 on Windows.

  - https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.subprocess_exec
    This page does not mention about path-like objects,
    but as of Python 3.8, it DOES support path-like objects.",False,22,22,0,1.0,1.0,1.0,9612,6268,7158,331,1.7792207792207793,58.5404633761111,31.93103448275862,52.03448275862069,331.3437724463084,3.0170268838872456,2585.5139623971468,143.63966457761924,0.11044792414876946
441,465717fdaf2cb260a1c4b230925a537afc22cedb,Fantix King,2020-05-25 20:59:13+00:00,Skip for bpo-30064 until 3.8.2,False,9,5,4,1.0,1.0,1.0,9613,6269,7159,331,1.7792207792207793,58.54089315088675,31.896551724137932,52.0,331.0482273786912,3.0183463772018126,2584.335921956596,143.57421788647758,0.11034940912623042
442,6ef69a797db0afe781b5ddcd74691767f8261a53,Kyle Stanley,2020-07-10 21:29:11+00:00,"Implement loop.shutdown_default_executor()

* Adds loop.shutdown_default_executor(), a new coroutine method added to
  asyncio in 3.9 for safe finalization of the event loop's ThreadPoolExecutor.",False,44,44,0,1.0,1.0,1.0,9624,6276,7167,331,1.7796976241900648,58.523532606467576,31.93103448275862,52.06896551724138,331.5763540512708,3.0176114799151916,2588.7404025090545,143.81891125050305,0.1105254513504236
443,3be8967eb4b57d860d3481cb7d4f2fff4fadab95,Elvis Pranskevichus,2020-12-07 03:43:25+00:00,Add github test workflow,False,66,62,4,0.3333333333333333,1.0,1.0,9627,6276,7170,331,1.7861771058315334,58.500575576605705,32.13793103448276,52.275862068965516,333.1971019390931,3.0541278371212037,2623.132719926691,145.72959555148284,0.1110657006463644
444,200e140436292d8080db7b42a38190606a2651b9,Fantix King,2020-12-07 03:43:25+00:00,Fix tests for Python 3.9,False,34,26,8,0.0,0.0,1.0,9645,6279,7186,333,1.7861771058315334,58.487584457400246,32.172413793103445,52.37931034482759,334.1220742804007,3.054825727398894,2635.2369666789155,146.40205370438414,0.11137402476013358
445,afc3ee8fdcdaac6ecc856f32118f7ab4d444ffd4,Fantix King,2020-12-07 03:43:25+00:00,"Skip failing test on asyncio 3.8

Fixes: #318.",False,4,2,2,,,,9645,6279,7186,333,1.7861771058315334,58.48997646370299,32.13793103448276,52.310344827586206,333.6254985233911,3.0562013693651453,2632.6815729562913,146.2600873864606,0.11120849950779706
446,311997eda61f9a1fba9fd8a00ecfd4624c654fd5,Fantix King,2020-12-07 03:43:25+00:00,Switch to Github Actions,False,548,41,507,0.7844827586206896,0.0,0.0,9658,6280,7187,345,1.7861771058315334,59.87364391491289,31.066666666666666,50.56666666666667,322.5046485726114,2.954327990386307,2544.925520524415,141.38475114024524,0.10750154952420382
447,e21ceea0f00d5c5508d9541bb8ed5535640b4b62,Elvis Pranskevichus,2021-01-21 00:01:14+00:00,"Add release workflow (#376)

This is mostly a copy of asyncpg/release workflow",False,470,406,64,0.6,0.6,1.0,9721,6295,7233,356,1.7861771058315334,59.86721669761251,31.866666666666667,51.93333333333333,332.42586818175124,2.9993171979102047,2618.352601707373,145.4640334281874,0.11080862272725042
448,cdd2218fa3bb89eeec097bf0b7828897ef185aed,Fantix King,2021-01-25 01:59:20+00:00,"Drop Python 3.5/3.6 support (#383)

Fixes #381",False,613,123,490,1.0,0.8611111111111112,0.005555555555555556,9483,6143,7049,343,1.6936542669584245,60.05498556852188,28.75862068965517,46.96551724137931,290.75672426414656,2.89937589382772,2107.355262106056,117.07529233922534,0.09691890808804884
449,98e113ee5b727bbf7000628e038559ef1a76b17d,Fantix King,2021-02-05 15:27:08+00:00,"Refactor SSL shutdown process (#385)

Co-authored-by: Yury Selivanov <yury@edgedb.com>",False,356,247,109,0.16049382716049382,0.48148148148148145,1.0,9572,6216,7125,346,1.6943231441048034,60.02920934918274,28.79310344827586,47.37931034482759,294.06859262283973,2.906626010185596,2160.2536796276077,120.01409331264486,0.09802286420761322
450,ae44ec2d9d3b13c708bd65cf91c52178c37f34a4,Fantix King,2021-02-05 18:03:18+00:00,Add tests for bpo-39951,False,112,98,14,0.4473684210526316,0.5131578947368421,1.0,9656,6284,7197,347,1.6906318082788672,60.00971348250082,29.0,47.86206896551724,298.4162624507234,2.93269394755083,2288.97010715424,127.16500595301332,0.09947208748357447
451,7b202ccf644396a4ae8ff8053578058f5023ac63,Versus Void,2021-02-05 20:38:11+00:00,Restore context on listen in UVStreamServer. Fix #305,False,52,51,1,1.0,1.0,1.0,9702,6320,7233,347,1.6911447084233262,59.79653920073033,29.103448275862068,47.96551724137931,299.02631918711376,2.950457792900882,2292.160143508752,127.34223019493066,0.0996754397290379
452,f691212b2625aba89d3220c7d56a15058f094ac5,Fantix King,2021-02-05 20:38:11+00:00,"Fix context in protocol callbacks (#348)

This is a combined fix to correct contexts from which protocal callbacks
are invoked. In short, callbacks like data_received() should always be
invoked from consistent contexts which are copied from the context where
the underlying UVHandle is created or started.

The new test case covers also asyncio, but skipping the failing ones.",False,923,791,132,0.35053763440860214,0.7827956989247312,0.33978494623655914,10280,6758,7692,364,1.6975806451612903,58.88851623090635,30.517241379310345,50.96551724137931,317.907890701917,3.134946019189429,2468.4009165217612,137.13338425120898,0.10596929690063903
453,fcb37350d151488c8066d5b94df175b33123ea9c,Felix Yan,2021-02-05 21:07:22+00:00,Correct a typo in test_sourcecode.py,False,2,1,1,,,,10280,6758,7692,364,1.6975806451612903,58.88851623090635,30.517241379310345,50.96551724137931,317.907890701917,3.134946019189429,2468.4009165217612,137.13338425120898,0.10596929690063903
454,68db1a2321c5d4fb6f449af4f801366ff8fa801c,Ophir LOJKINE,2021-02-05 22:02:25+00:00,"Add a regression test for large stderr reading

Regression test for
https://github.com/MagicStack/uvloop/issues/363",False,28,28,0,1.0,1.0,1.0,10308,6773,7713,366,1.692,58.858589449188834,30.586206896551722,51.06896551724138,318.5698891915326,3.134946019189429,2471.379909725031,137.29888387361288,0.1061899630638442
455,b7048b94a22effd2057307bb28455651e01e60dd,Fantix King,2021-02-06 00:49:01+00:00,Fix examples for Python 3.10,False,12,6,6,,,,10308,6773,7713,366,1.692,58.858589449188834,30.586206896551722,51.06896551724138,318.5698891915326,3.134946019189429,2471.379909725031,137.29888387361288,0.1061899630638442
456,8c471f827bae5e7e155d05dff3126499ca130f72,jack1142,2021-02-08 23:25:53+00:00,"Don't stop the loop in `run_until_complete()` on `SystemExit` and `KeyboardInterrupt` exceptions (#337)

* Don't stop the loop in run_until_complete on SystemExit & KeyboardInterrupt
* Add unit test (based on CPython's equivalent)
* Fix the test to resume its coverage.

Co-authored-by: Victor Stinner <victor.stinner@gmail.com>
Co-authored-by: Fantix King <fantix.king@gmail.com>",False,29,28,1,1.0,1.0,1.0,10328,6786,7726,368,1.69061876247505,58.854929993306165,30.586206896551722,51.06896551724138,318.5698891915326,3.134946019189429,2471.379909725031,137.29888387361288,0.1061899630638442
457,8cdb30022abe512e7a1c4d0a21807322da228fc9,Fantix King,2021-02-09 15:45:14+00:00,"Use FD=0/1/2 for subprocess(stdio=None)

This aligns uvloop with the same behavior in asyncio - when stdin,
stdout or stderr is None, the subprocess will use FD 0, 1 or 2 now
instead of sys.stdin, sys.stdout or sys.stderr.

Fixes #136",False,83,48,35,1.0,1.0,0.2222222222222222,10341,6797,7737,367,1.685148514851485,58.823811404655864,30.586206896551722,51.06896551724138,318.5698891915326,3.134946019189429,2471.379909725031,137.29888387361288,0.1061899630638442
458,9426e2b184e30dbadb81a2ded7f793cfa85da373,Bryan Forbes,2021-02-09 19:11:20+00:00,"Add typings (#366)

* Add typings and mypy test case
* Update flake8
* Rename test class

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,370,357,13,0.24324324324324326,1.0,1.0,10387,6817,7774,373,1.687007874015748,58.52226447549486,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
459,6596685af67e332e24acf7b9136c5d619e2eeba2,Fantix King,2021-02-09 20:29:27+00:00,Remove deprecated setup.py test,False,5,2,3,,,,10386,6817,7773,373,1.687007874015748,58.523400025584934,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
460,e955017936426ac62588df1881f4c817c1d70540,Fantix King,2021-02-10 04:42:07+00:00,Remove `import tests` for testinstalled,False,9,6,3,0.0,1.0,1.0,10389,6817,7776,373,1.687007874015748,58.52245875720145,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
461,513ff14277373dbbae550c85e0486748a9af558b,Fantix King,2021-02-10 04:50:23+00:00,Bump the version to 0.15.0,False,2,1,1,,,,10389,6817,7776,373,1.687007874015748,58.52245875720145,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
462,c07cdd297695e2bc9586afa494c39da3173af7eb,Fantix King,2021-02-10 05:56:44+00:00,Bump the version to 0.16.0.dev0,False,2,1,1,,,,10389,6817,7776,373,1.687007874015748,58.52245875720145,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
463,70cafc82ccfc660c52ed2e31d9e36dfb3afe5c9d,Fantix King,2021-02-15 16:31:46+00:00,"Fix ref issue when protocol is in Cython

Because `context.run()` doesn't hold reference to the callable, when
e.g. the protocol is written in Cython, the callbacks were not
guaranteed to hold the protocol reference. This PR fixes the issue by
explicitly add a reference before `context.run()` calls.

Refs edgedb/edgedb#2222",False,107,94,13,1.0,1.0,1.0,10426,6847,7806,373,1.6856581532416504,58.510436297384715,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
464,c808a663b297bb2aee745523c277d6fafecebbeb,Thomas Grainger,2021-02-19 00:24:10+00:00,set python_requires,False,3,2,1,,,,10427,6847,7807,373,1.6856581532416504,58.509300747294645,30.620689655172413,51.13793103448276,318.71953919163207,3.134946019189429,2471.4547347250814,137.30304081806008,0.10623984639721071
465,2081db8927dc2d3a66b7c8d7aa317d71aba198f9,Fantix King,2021-07-02 00:57:40+00:00,"SSL: schedule first data after waiter wakeup

The waiter given to SSLProtocol should be woke up before the first
data callback, especially for `start_tls()` where the user protocol's
`connection_made()` won't be called and the waiter wakeup is the only
time the user have access to the new SSLTransport for the first time.
The user may want to e.g. check ALPN before handling the first data,
it's better that uvloop doesn't force the user to check this by
themselves.",False,105,104,1,0.5972222222222222,0.5972222222222222,1.0,10518,6908,7874,379,1.6862745098039216,58.509039749528846,30.689655172413794,51.241379310344826,319.7237733408226,3.134086693161901,2478.1567669725164,137.67537594291758,0.10657459111360756
466,b0526cd50b99409a47fe4f803d8688200853de4b,Fantix King,2021-07-13 14:40:01+00:00,"Fix a possible race condition in sslproto test

test_shutdown_timeout_handler_not_set() might have a race between the
SHUT_WR message and `eof` asyncio event. This fix changes to use the
eof_received() callback triggered by SHUT_WR. Refs #412 2nd issue.",False,17,9,8,,,,10519,6907,7873,379,1.688235294117647,58.509039749528846,30.75862068965517,51.241379310344826,319.91796674974273,3.1309979656619107,2469.2518181545947,137.18065656414416,0.10663932224991426
467,4b803b155ed30a30f34c208133a431587272f81e,Fantix King,2021-07-13 15:12:56+00:00,"Fix `call_soon_threadsafe` thread safety

Don't start the idle handler in other threads or signal handlers,
leaving the job to `_on_wake()`.

Co-authored-by: hexin02 <hexin02@megvii.com>",False,42,39,3,1.0,1.0,1.0,10547,6929,7896,379,1.6868884540117417,58.47339920899398,31.03448275862069,51.758620689655174,323.94481680542174,3.1320998583246022,2511.8378374303456,139.54654652390812,0.10798160560180728
468,6cb2ed0f3d2870e761e338beadab57274d8def8d,Elvis Pranskevichus,2021-08-06 23:53:04+00:00,"Bump minimum required Cython version (#431)

0.29.24 is needed to compile properly under Python 3.10",False,7,5,2,0.0,1.0,1.0,10550,6930,7899,379,1.6908023483365948,57.815122859048174,31.137931034482758,51.86206896551724,324.1087784434274,3.149341237634947,2511.9198182493483,139.5511010138527,0.10803625948114248
469,2519e2df628f43a81002cf05b37aea9fa5e18c00,Elvis Pranskevichus,2021-08-07 01:02:12+00:00,Python 3.10 support (#432),False,44,25,19,,,,10556,6933,7904,379,1.6908023483365948,58.47836565172659,31.06896551724138,51.793103448275865,324.039812926186,3.1320998583246022,2511.885335490728,139.54918530504045,0.10801327097539536
470,62b2af9c724dd9550d81dfafe983e8b86069df41,Jens Jorgensen,2021-08-10 18:13:06+00:00,Add support for <timer handle>.when(),False,19,19,0,1.0,1.0,1.0,10565,6942,7912,380,1.689453125,58.47009964093973,31.137931034482758,51.89655172413793,324.88467091091985,3.130639209911267,2519.042816611433,139.9468231450796,0.10829489030363999
471,3e71ddc3383a8e0546519117c8775323c19eb6d7,Elvis Pranskevichus,2021-08-10 18:17:01+00:00,"uvloop v0.16.0

This release adds Python 3.10 support, updates bundled libuv to 1.42.0
and fixes a handful of issues.

Changes
=======

* Python 3.10 support (#432)
  (by @elprans in 2519e2df for #432)

* Bump vendored libuv to 1.42.0 (#433)
  (by @elprans in a62f7818 for #433)

* Use cibuildwheel to build wheels (#435)
  (by @elprans in 20febe0b for #435)

* Add support for <timer handle>.when()
  (by Jens Jorgensen in 62b2af9c)

Fixes
=====

* Fix ref issue when protocol is in Cython
  (by @fantix in 70cafc82 for #2222)

* set python_requires
  (by @graingert in c808a663)

* SSL: schedule first data after waiter wakeup
  (by @fantix in 2081db89)

* Fix a possible race condition in sslproto test
  (by @fantix in b0526cd5 for #412)

* Fix `call_soon_threadsafe` thread safety
  (by @fantix in 4b803b15)",False,2,1,1,,,,10565,6942,7912,380,1.689453125,58.47009964093973,31.137931034482758,51.89655172413793,324.88467091091985,3.130639209911267,2519.042816611433,139.9468231450796,0.10829489030363999
472,c39afff8e04a9488e39577ef72bb851698c7747c,Jens Jorgensen,2022-07-16 21:13:53+00:00,"Fix segfault in TimerHandle.when() after cleared

Fixes #469
Closes #475

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,13,12,1,1.0,1.0,1.0,10573,6949,7919,380,1.6881091617933723,58.457910974739676,31.137931034482758,52.0,325.5763778620078,3.1374555691734964,2533.5820677577494,140.754559319875,0.10852545928733597
473,033d52d044b954c7070212b3bd060ceb38d4022f,Kian-Meng Ang,2022-07-18 14:22:06+00:00,Fix typo in test (#456),False,2,1,1,,,,10573,6949,7919,380,1.6881091617933723,58.457910974739676,31.137931034482758,52.0,325.5763778620078,3.1374555691734964,2533.5820677577494,140.754559319875,0.10852545928733597
474,fedba80ac1f6d2587788fec4b058e1145c5a2b6d,YoSTEALTH,2022-08-13 18:05:18+00:00,typo `same as same`,False,4,2,2,,,,10573,6949,7919,380,1.6881091617933723,58.457910974739676,31.137931034482758,52.0,325.5763778620078,3.1374555691734964,2533.5820677577494,140.754559319875,0.10852545928733597
475,a130375f8aeae94ac38462649b10808bd318957b,Giulio Benetti,2022-08-13 18:44:46+00:00,"setup.py: allow to override extra_compile_args (#443)

At the moment extra_compile_args is set to -O2 by default. But m68k
toolchain has a bug that when trying to build Extension uvloop.loop enters
an infinite loop[1]. So we need to override -O2 with -O0 to make it
work. So let's getenv('MODULES_CFLAGS') and assign it to local
MODULES_CFLAGS (former CFLAGS) and assign it to extra_compile_args. If
not MODULES_CFLAGS is found then -O2 is kept as default.

[1]: http://autobuild.buildroot.net/results/17d/17d6e6422abadcd6313c430c40f2a5d7162dbbd3/build-end.log

Signed-off-by: Giulio Benetti <giulio.benetti@benettiengineering.com>

* Rename to UVLOOP_OPT_CFLAGS

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,4,2,2,,,,10573,6949,7919,380,1.6881091617933723,58.457910974739676,31.137931034482758,52.0,325.5763778620078,3.1374555691734964,2533.5820677577494,140.754559319875,0.10852545928733597
476,b332eb85e4613c29c58d89d7cae8f953701ff66b,Pranav Thulasiram Bhat,2022-08-13 20:08:47+00:00,"Expose uv_loop_t pointer for integration with other C-extensions (#310)

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,29,29,0,1.0,1.0,1.0,10592,6961,7932,380,1.687378640776699,59.84156064132438,30.1,50.266666666666666,314.72383193327425,3.032873716867713,2449.1293321658245,136.06274067587918,0.1049079439777581
477,3214cf685e6d0d12544e3f3352df5a414ef86e33,Thomas Grainger,2022-08-23 18:09:07+00:00,"use a stack of self._fds_to_close to prevent double closes (#481)

* Add test for preexec_fn fd double close issue
* use a stack of self._fds_to_close to prevent double closes

and make tests easier to write because the close order is deterministic
and in the order that opens happen in

this should also be a bit faster because list.append is faster
than set.add and we skip a call to os_close(-1) and catching an
OSError exception

* DRY os_dup call

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,87,66,21,0.0,1.0,1.0,10644,6964,7976,380,1.687984496124031,59.823770292249534,30.1,50.266666666666666,314.72383193327425,3.032873716867713,2449.1293321658245,136.06274067587918,0.1049079439777581
478,e7934c88208ec642c9612439f2e9e29759d61331,horpto,2022-08-31 20:59:31+00:00,"Fix incorrect main thread id value forking from a thread  (#453)

* Fix incorrect main thread id value in mp.Process
* Make MAIN_THREAD_ID a lazy value and add test

Co-authored-by: Александр Менщиков <menshchikov@zvonok.com>
Co-authored-by: Fantix King <fantix.king@gmail.com>",False,70,60,10,0.14285714285714285,1.0,1.0,10680,6967,8002,384,1.6866537717601546,59.99840902036434,30.333333333333332,50.666666666666664,317.22499345841163,3.0320800660740628,2450.588573997077,136.14380966650432,0.10574166448613724
479,e04637e08881870c2ba10986724d90ead1a7daed,Bill Fisher,2022-08-31 22:05:24+00:00,"create_subprocess_exec should treat env={} as empty environment (#439) (#454)

* Empty env dict represents empty environment.
* Allow 0-length cstring array

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,21,17,4,1.0,1.0,1.0,10696,6976,8015,385,1.6853281853281854,59.99124515597823,30.333333333333332,50.666666666666664,317.22499345841163,3.0320800660740628,2450.588573997077,136.14380966650432,0.10574166448613724
480,8e42921d7b98b453471755c6436fcbec416283ed,Euiseo Cha,2022-09-01 15:56:34+00:00,"Support python 3.11+ (#473)

* chore: Cython version update
* add 3.11-dev pipeline
* Test and build on Python 3.11
* Drop test_context_run_segfault
* Support context in loop.create_task()
* Consistent PseudoSocket repr
* Add stubs for new 3.11 loop.sock_*() methods
* Skip test_create_ssl_server_manual_connection_lost on 3.11 for now

Co-authored-by: Fantix King <fantix.king@gmail.com>
Co-authored-by: Elvis Pranskevichus <elvis@edgedb.com>",False,104,55,49,0.0,0.0,0.0,10669,6948,7993,388,1.690522243713733,59.99268771198945,30.566666666666666,50.96666666666667,319.6219416604409,3.0445800660740625,2479.821409435761,137.7678560797645,0.10654064722014697
481,74d381e87a98e4a58e682aa83c2dc4d81ea814a5,jensbjorgensen,2022-09-09 14:24:41+00:00,"Expose libuv uv_fs_event functionality (#474)

* Also updated pyOpenSSL to 22.x

Co-authored-by: Jens Jorgensen <jens@consiliumb.sg>
Co-authored-by: Fantix King <fantix.king@gmail.com>",False,260,259,1,1.0,1.0,0.8026315789473685,10769,7026,8074,388,1.6907020872865275,59.478211772519444,30.06451612903226,49.903225806451616,311.5800735656187,3.0167490375496793,2404.7766623199527,133.59870346221962,0.10386002452187293
482,2f1bc83c6362cd8ffbcb00dea651568d15ef67d4,Fantix King,2022-09-09 17:05:42+00:00,"Partially revert ""Fix running of setup.py test with recent setuptools. (#84)""

This partially reverts commit be920ea74ea4237dce191232dc68dae35c670c29.

Fixes #320",False,14,0,14,0.6,0.6,0.0,10755,7021,8069,382,1.6869070208728654,59.44487983025311,30.06451612903226,49.903225806451616,311.5800735656187,3.0167490375496793,2404.7766623199527,133.59870346221962,0.10386002452187293
483,089f6cbf57b29cfb09d1e0129dbcd20bf08721f0,Fantix King,2022-09-09 18:28:41+00:00,"Expose uv_version() for libuv API compatibility (#491)

* Also renamed to have libuv_ namespace",False,53,32,21,1.0,1.0,1.0,10759,7024,8072,382,1.6856060606060606,59.44487983025311,30.06451612903226,49.903225806451616,311.5800735656187,3.0167490375496793,2404.7766623199527,133.59870346221962,0.10386002452187293
484,d6a2b597fbefb8f2770f457a7f04c6b5c12d468b,Ben Raz,2022-09-10 15:45:27+00:00,"Fix tests invocation on release CI worklow (#489)

* Employ unittest discovery CLI (back again)
* Fix (sometimes) broken import with the pyx_import
* Bump cibuildwheel to 2.9.0
* Build without libffi-devel

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,49,23,26,0.0,0.0,0.0,10758,7024,8071,382,1.6856060606060606,60.7122273355577,29.125,48.34375,301.8431962666931,2.922475630126252,2329.627391622454,129.42374397902526,0.1006143987555644
485,598b16fd2becdf5dea6c05df7ebc2aa00bc838e5,Fantix King,2022-09-13 13:41:16+00:00,"Fix loop.getaddrinfo() and tests (#495)

* ai_canonname always follows the flag AI_CANONNAME in static resolving (#494)
* AddressFamily and SocketKind can be enums
* Also fixed failing test",False,100,85,15,0.90625,0.5,0.90625,10808,7048,8103,392,1.6956521739130435,60.74979232946235,29.71875,49.125,306.8385712635082,2.961538130126252,2355.2327353589185,130.8462630754955,0.10227952375450276
486,25b5f1e55767ed587a5f97a94f0c85023c682d21,Fantix King,2022-09-13 15:07:11+00:00,"Longer test timeout (#497)

* Fix tests: 15s SSL_HANDSHAKE_TIMEOUT

Also allow longer time for slow tests on qemu aarch64 for GitHub Actions

* Build sdist on 22.04 to support LoongArch",False,31,20,11,1.0,1.0,1.0,10817,7049,8108,394,1.6956521739130435,60.77896199942371,29.71875,49.125,306.8385712635082,2.961538130126252,2355.2327353589185,130.8462630754955,0.10227952375450276
487,d2deffefa18653636eb03ea77a5dab6e4febf6c6,Fantix King,2022-09-13 20:50:27+00:00,"bugfix: write to another transport in resume_writing() fails (#498)

Fixes #496",False,83,66,17,1.0,1.0,0.75,10870,7088,8146,397,1.6943396226415095,60.77896199942371,29.8125,49.28125,308.32750132926657,2.960446013633826,2365.574611871765,131.42081177065361,0.1027758337764222
488,afb326897c26f01b864f65f016a7f3f80d9db8ad,Fantix King,2022-09-14 14:52:35+00:00,"uvloop v0.17.0

This release adds Python 3.11 support, updates bundled libuv to 1.43.0
and fixes a handful of issues.

Changes
=======

* Expose uv_loop_t pointer for integration with other C-extensions (#310)
  (by @pranavtbhat in b332eb85 for #310)

* Support python 3.11+ (#473)
  (by @zeroday0619 in 8e42921d for #473)

* Expose libuv uv_fs_event functionality (#474)
  (by @jensbjorgensen @fantix in 74d381e8 for #474)

* Activate debug mode when `-X dev` is used
  (by @jack1142 in 637a77a3)

* Expose uv_version() for libuv API compatibility (#491)
  (by @fantix in 089f6cbf for #491)

* Fix loop.getaddrinfo() and tests (#495)
  (by @fantix in 598b16fd for #495)

* Bump to libuv 1.43.0
  (by @fantix in 94e5e535)

Fixes
=====

* _TransProtPair is no longer defined in asyncio.events
  (by @jensbjorgensen in fae5f7fb)

* use a TypeVar for asyncio.BaseProtocol (#478)
  (by @graingert in 3aacb352 for #478)

* Fix segfault in TimerHandle.when() after cleared
  (by @jensbjorgensen in c39afff8 for #469)

* Avoid self._errpipe_write double close (#466)
  (by @graingert in 72140d7e for #466)

* Fix typo in test (#456)
  (by @kianmeng in 033d52d0 for #456)

* Fix potential infinite loop (#446)
  (by @kfur in ada43c06 for #446)

* use a stack of self._fds_to_close to prevent double closes (#481)
  (by @graingert in 3214cf68 for #481)

* Fix incorrect main thread id value forking from a thread  (#453)
  (by @horpto @fantix in e7934c88 for #453)

* create_subprocess_exec should treat env={} as empty environment (#439) (#454)
  (by @byllyfish in e04637e0 for #439)

* Queue write only after processing all buffers (#445)
  (by @jakirkham @fantix in 9c6ecb62 for #445)

* Drop Python 3.6 support for thread ident
  (by @fantix in 9c37930e)

* bugfix: write to another transport in resume_writing() fails (#498)
  (by @fantix in d2deffef for #498)

Build
=====

* Upgrade GitHub Actions (#477) (#480)
  (by @cclauss in fcbf422d for #477, 10086942 for #480)

* typo `same as same`
  (by @YoSTEALTH in fedba80a)

* setup.py: allow to override extra_compile_args (#443)
  (by @giuliobenetti in a130375f for #443)

* Drop hack in setup.py in finalize_options (492)
  (by @fantix in 2f1bc83c for #492)

* Fix tests invocation on release CI worklow (#489)
  (by @ben9923 in d6a2b597 for #489)

Documentation
=============

* use asyncio.Runner loop_factory on 3.11+ (#472)
  (by @graingert in 31ba48ca for #472)

* Fix CI badge in docs, remove remaining Travis CI references from docs
  (by @Nothing4You in c6901a74)

* Fix typo in README
  (by @monosans in 73d7253b)",False,2,1,1,,,,10870,7088,8146,397,1.6943396226415095,60.77896199942371,29.8125,49.28125,308.32750132926657,2.960446013633826,2365.574611871765,131.42081177065361,0.1027758337764222
489,7783f1c5d9d6e821f4f05dffccee504875c179d2,Kyle Altendorf,2023-01-15 16:27:26+00:00,"Fixup CI (#520)

* Report exception on flake8 and mypy failures
* skip test_remote_shutdown_receives_trailing_data() on linux <3.11
* pyOpenSSL~=23.0.0",False,24,17,7,0.0,1.0,1.0,10880,7094,8154,398,1.6981132075471699,60.5292363615934,30.21875,49.9375,312.52877961258696,2.981787040009973,2385.982410374069,132.55457835411497,0.10417625987086233
490,1dd40f17f3b0d37e3779b6ad5041bab335142337,Dulmandakh,2023-08-11 17:25:03+00:00,"CI: python 3.11 stable (#553)

* CI: Python 3.11 stable
* test with latest aiohttp with Python 3.11 support",False,6,2,4,,,,10878,7094,8152,396,1.6981132075471699,60.51001269209163,30.21875,49.9375,312.52877961258696,2.981787040009973,2385.982410374069,132.55457835411497,0.10417625987086233
491,9f82bd74447aa34abb6fa1b34d1d011d027c4369,Yury Selivanov,2023-10-10 00:28:47+00:00,"Port uvloop to Python 3.12 (#570)

* Bump Cython to 0.29.36
* Add missing new API -- timeout param to shutdown_default_executor
* Stop using the beloved, but now deprecated, 'IF'
* Explicitly qualify void-returning callback functions as `noexcept`.
* Fix test_libuv_get_loop_t_ptr to work under Python 3.12
* ""Fix"" the failing asyncio tests by adding a sleep() call
* Add 3.12 to CI scripts
* Stop configuring watchers for asyncio tests under 3.12+
* Add the new timeout parameter of shutdown_default_executor to typeshed
* Implement uvloop.run()
* Add pyproject.toml and update CI

Co-authored-by: Fantix King <fantix.king@gmail.com>",False,625,468,157,0.31007751937984496,0.10077519379844961,0.6744186046511628,11013,7184,8236,416,1.7271028037383178,59.7491603795128,31.151515151515152,50.96969696969697,319.83667111505514,3.0758989958804555,2504.4814047317113,139.13785581842836,0.10661222370501844
492,5ddf38bccad1107e6488357fd3dbb6b886b95134,Fantix King,2023-10-13 15:47:52+00:00,"uvloop 0.18.0

Changes
=======

* Port uvloop to Python 3.12 (#570)
  (by @1st1, @fantix in 9f82bd74 for #569)

* Upgrade libuv to v1.46.0 (#571)
  (by @fantix in 2e1978c3 for #571)

Fixes
=====

* CI fixes (#520, #553)
  (by @altendky in 7783f1c5, @dulmandakh in 1dd40f17)

* Make extract_stack resilient to lacking frames. (#563)
  (by @jhance in 06876434 for #563)",False,2,1,1,,,,11013,7184,8236,416,1.7271028037383178,59.7491603795128,31.151515151515152,50.96969696969697,319.83667111505514,3.0758989958804555,2504.4814047317113,139.13785581842836,0.10661222370501844
493,5c500ee2577fe9cb84b3c6e54216985afc4b485f,Thomas Grainger,2023-10-15 16:40:25+00:00,Restore uvloop.new_event_loop and other missing uvloop members to typing (#573),False,157,79,78,0.6923076923076923,0.6923076923076923,0.0,11031,7189,8251,416,1.7257462686567164,59.69156069846344,31.151515151515152,50.96969696969697,319.83667111505514,3.0758989958804555,2504.4814047317113,139.13785581842836,0.10661222370501844
494,ee5ad26a754984d867594809cb5c040be9cd7281,Fantix King,2023-10-22 18:04:03+00:00,"Drop support of Python 3.7 and update CI (#578)

* Drop support of Python 3.7
* Upgrade and pin action revisions in CI
* Exclude C files in wheel dist",False,168,31,137,0.3561643835616438,0.0,0.0,10926,7117,8168,411,1.7185741088180113,59.79939373432214,30.606060606060606,50.09090909090909,313.12590636060577,3.0193888034623004,2400.563940321964,133.36466335122023,0.10437530212020196
495,6c770dc3fbdd281d15c2ad46588c139696f9269c,Fantix King,2023-10-22 20:53:42+00:00,"uvloop 0.19.0

Changes
=======

* Drop support of Python 3.7 and update CI (#578)
  (by @fantix in ee5ad26a for #578)

Fixes
=====

* Restore uvloop.new_event_loop and other missing uvloop members to typing (#573)
  (by @graingert in 5c500ee2 for #573)

* Fix docstring of loop.shutdown_default_executor (#535)
  (by @Gelbpunkt in 919da567 for #535)

* Fix CI status badge (#522)
  (by @shuuji3 in 0e9ff6cd for #522)",False,2,1,1,,,,10926,7117,8168,411,1.7185741088180113,59.79939373432214,30.606060606060606,50.09090909090909,313.12590636060577,3.0193888034623004,2400.563940321964,133.36466335122023,0.10437530212020196
