ID,hash,author,date,commit_message,is_merge,lines_changed,insertions,deletions,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing,radon_LOC,radon_LLOC,radon_SLOC,radon_comments,radon_avg_cc,radon_avg_MI,radon_avg_vocabulary,radon_avg_length,radon_avg_volume,radon_avg_difficulty,radon_avg_effort,radon_avg_time,radon_avg_bugs
0,8d186763a67c4a1a9a4eb14a7e5917facaa1be5f,Andrew Godwin,2015-12-23 17:05:40+00:00,Initial commit,False,123,123,0,0.5151515151515151,0.5151515151515151,0.696969696969697,109,54,65,18,2.4285714285714284,88.19940456767995,8.0,8.5,34.0,1.25,85.0,4.722222222222222,0.011333333333333334
1,e63ceefd43c1e6bd0c791916ce602eb204926752,Andrew Godwin,2016-01-02 16:28:59+00:00,Rename to asgiref,False,36,23,13,,,0.0,116,56,70,19,2.4285714285714284,92.19048582443672,5.333333333333333,5.666666666666667,22.666666666666668,0.8333333333333334,56.666666666666664,3.1481481481481484,0.007555555555555556
2,c829c36669d8e9cf797f6bf1a4d9cea02c715640,Andrew Godwin,2016-01-03 06:45:34+00:00,Use version from package,False,2,1,1,,,,116,56,70,19,2.4285714285714284,92.19048582443672,5.333333333333333,5.666666666666667,22.666666666666668,0.8333333333333334,56.666666666666664,3.1481481481481484,0.007555555555555556
3,ed3f2968bb2b888b42cf4d3611f0623de6c1d8aa,Andrew Godwin,2016-01-17 22:01:28+00:00,"Add start of conformance suite, fix inmemory backend chan names",False,143,132,11,0.7246376811594203,1.0,1.0,237,131,140,32,2.0,93.27477299957405,3.1666666666666665,3.3333333333333335,12.125814583693911,0.5,28.729573958513623,1.5960874421396456,0.004041938194564638
4,696210d6be17ace59652ab24b7e859fc940e2a0c,Andrew Godwin,2016-01-17 22:15:56+00:00,Combine tests into one and start on group tests,False,73,67,6,0.5227272727272727,1.0,1.0,298,181,179,37,2.0,92.41535299489784,3.1666666666666665,3.3333333333333335,12.125814583693911,0.5,28.729573958513623,1.5960874421396456,0.004041938194564638
5,5914d98f792db5f8cc91141187f21695ec3eaf8c,Andrew Godwin,2016-01-17 22:21:21+00:00,"Remove group expiry test, as it's not part of ASGI (yet?)",False,5,0,5,0.5,0.0,0.0,293,178,176,36,2.0,92.4568082121461,3.1666666666666665,3.3333333333333335,12.125814583693911,0.5,28.729573958513623,1.5960874421396456,0.004041938194564638
6,741e6eb1976f6c8e6e5cb04399386dedf2e0586b,Andrew Godwin,2016-02-05 20:39:40+00:00,Add group implementation into inmemory backend,False,79,56,23,1.0,1.0,0.6842105263157895,326,195,194,43,2.3333333333333335,91.34751377595565,5.0,6.666666666666667,30.114287513701967,0.7833333333333333,123.54782693121415,6.86376816284523,0.010038095837900657
7,1b92dc5e3270b7866e5c55b66fb9eb34837845b0,Andrew Godwin,2016-02-06 00:17:02+00:00,"Fix new channel names on py3, add travis config",False,17,15,2,1.0,1.0,1.0,327,196,195,43,2.3333333333333335,91.33339842446821,5.0,6.666666666666667,30.114287513701967,0.7833333333333333,123.54782693121415,6.86376816284523,0.010038095837900657
8,722d2411496136e19514febcc9cff7df938b0a9d,Andrew Godwin,2016-02-06 00:21:10+00:00,Bump to 0.9,False,2,1,1,,,,327,196,195,43,2.3333333333333335,91.33339842446821,5.0,6.666666666666667,30.114287513701967,0.7833333333333333,123.54782693121415,6.86376816284523,0.010038095837900657
9,1063feb2c917f0bfb0cb2718c53734edb8d1b294,Andrew Godwin,2016-02-10 00:48:28+00:00,Start work on ASGI/WSGI adapter module,False,172,172,0,0.5119047619047619,0.7738095238095238,0.7142857142857143,499,286,299,61,2.48,90.17506375438367,7.25,10.125,47.22340961082169,0.9543478260869566,164.96714599620634,9.164841444233687,0.015741136536940564
10,de2a770b1fc60d2065a26ab9b5e520ad0cb6d81a,Andrew Godwin,2016-03-04 01:24:33+00:00,Thread locking for inmemory backend,False,45,25,20,1.0,0.75,0.5,504,291,304,61,2.48,90.07314238173632,7.25,10.125,47.22340961082169,0.9543478260869566,164.96714599620634,9.164841444233687,0.015741136536940564
11,0c6bb189ed0a5e1b994c8d08346288de73ef283c,Andrew Godwin,2016-03-04 01:25:21+00:00,Releasing 0.9.1,False,2,1,1,,,,504,291,304,61,2.48,90.07314238173632,7.25,10.125,47.22340961082169,0.9543478260869566,164.96714599620634,9.164841444233687,0.015741136536940564
12,07dc9f1c6c8ee2bcb8d9b142bdf6556b4600a457,Andrew Godwin,2016-03-21 23:29:21+00:00,Update asgiref to adhere to new single-reply-channel spec,False,18,12,6,0.0,1.0,1.0,510,297,310,61,2.48,89.53466201151463,7.75,10.875,50.669045022348605,0.9463932806324111,173.64887850533512,9.647159916963062,0.0168896816741162
13,b48ccf2b3a4c92d0259500d19b872ac06de959d6,Andrew Godwin,2016-03-21 23:33:02+00:00,Releasing 0.10,False,2,1,1,,,,510,297,310,61,2.48,89.53466201151463,7.75,10.875,50.669045022348605,0.9463932806324111,173.64887850533512,9.647159916963062,0.0168896816741162
14,b6ecc83b9efb761816f60b82470d6d8bd98250c3,Andrew Godwin,2016-03-27 18:06:48+00:00,"Change conformance test suite to subclassable, test group expiry.",False,344,193,151,1.0,1.0,1.0,552,326,337,71,2.388888888888889,87.92335871506315,10.5,15.0,72.10767552422999,1.253211462450593,241.2647453446637,13.403596963592427,0.024035891841409994
15,4858248ed3cd6cb47c2fa69cbc8832aaf28317df,Andrew Godwin,2016-03-27 18:07:35+00:00,Releasing 0.11.0,False,2,1,1,,,,552,326,337,71,2.388888888888889,87.92335871506315,10.5,15.0,72.10767552422999,1.253211462450593,241.2647453446637,13.403596963592427,0.024035891841409994
16,a2704ec7404d1a868be8015b3715de47626f54f5,Andrew Godwin,2016-03-27 18:19:30+00:00,Add group expiry to inmemory backend,False,39,28,11,0.0,0.5,0.08333333333333333,569,339,350,74,2.5135135135135136,87.52114861589929,11.375,16.375,80.77604243278687,1.3254517221908526,296.16757598391087,16.453754221328378,0.026925347477595625
17,08929f361acf47254bb730865a417bd4c141a35d,Andrew Godwin,2016-03-27 18:25:42+00:00,Fix conformance tests on py2,False,42,27,15,1.0,1.0,1.0,581,347,356,71,2.3333333333333335,87.6016989283747,10.75,15.25,74.31883442962982,1.424883540372671,290.3917432460865,16.132874624782584,0.02477294480987661
18,55546daa794a8a597f6a1ad1ab5a7aa4807dafe5,Andrew Godwin,2016-03-27 20:26:54+00:00,Release 0.11.1,False,2,1,1,,,,581,347,356,71,2.3333333333333335,87.6016989283747,10.75,15.25,74.31883442962982,1.424883540372671,290.3917432460865,16.132874624782584,0.02477294480987661
19,b58a28c6475321c512111b24a5e8451c8c90134b,Andrew Godwin,2016-03-29 09:45:59+00:00,Fixed #104: Bad implemention of group-discard-on-message-expire,False,24,21,3,1.0,1.0,1.0,599,361,367,74,2.35,87.53857479759776,11.0,15.625,76.78407326117929,1.41893115942029,300.32674960835567,16.684819422686427,0.025594691087059758
20,dc5ea724eaf22e4745fda21c57db9903067e9717,Andrew Godwin,2016-03-29 09:46:35+00:00,Releasing 0.11.2,False,2,1,1,,,,599,361,367,74,2.35,87.53857479759776,11.0,15.625,76.78407326117929,1.41893115942029,300.32674960835567,16.684819422686427,0.025594691087059758
21,280b9c7767b544b101b0e932177656a15daf6151,Andrew Godwin,2016-05-06 05:39:03+00:00,Implement channel capacity for conformance suite and inmemory,False,34,29,5,1.0,1.0,0.5,623,382,385,74,2.4146341463414633,87.13042865170392,11.625,16.375,81.72322232392384,1.4755717844202898,340.27042463615606,18.903912479786445,0.027241074107974612
22,0eb3775c0e2a7f669f34d349ab2e4ac003be51e1,Andrew Godwin,2016-05-06 05:41:10+00:00,Add another test to make sure the API is met,False,7,7,0,1.0,1.0,1.0,630,386,388,74,2.380952380952381,87.08789111581817,11.625,16.375,81.72322232392384,1.4755717844202898,340.27042463615606,18.903912479786445,0.027241074107974612
23,7a6997c2e40194b14bf7789997bc23e2dbb1524f,Andrew Godwin,2016-05-06 05:47:44+00:00,Releasing version 0.12.0,False,8,7,1,,,,630,386,388,74,2.380952380952381,87.08789111581817,11.625,16.375,81.72322232392384,1.4755717844202898,340.27042463615606,18.903912479786445,0.027241074107974612
24,a40aa358bf1f726a9da322c77459bb1dc656b7a0,Andrew Godwin,2016-05-07 01:33:43+00:00,Remove useless unicode channel name test (not in spec),False,10,0,10,0.0,0.0,0.0,620,378,383,73,2.4146341463414633,87.1591039451659,11.625,16.375,81.72322232392384,1.4755717844202898,340.27042463615606,18.903912479786445,0.027241074107974612
25,d9163b0641721d1083c285113e5bb6c2bae88017,Andrew Godwin,2016-05-07 01:34:06+00:00,Releasing 0.12.1,False,2,1,1,,,,620,378,383,73,2.4146341463414633,87.1591039451659,11.625,16.375,81.72322232392384,1.4755717844202898,340.27042463615606,18.903912479786445,0.027241074107974612
26,54e71241ce7fe8258fdd79ad94adf124bde74d46,Andrew Godwin,2016-05-07 19:18:59+00:00,"Write base channel layer, give it capacity check code",False,120,114,6,1.0,1.0,0.6086956521739131,728,432,443,78,2.2037037037037037,88.34048489328634,9.6,13.4,65.85406660935541,1.2304574275362319,272.45408408403307,15.136338004668499,0.021951355536451805
27,3bcd92e7a84d39751bb1bd1c9fb0b3dd2713858d,Andrew Godwin,2016-05-07 19:22:43+00:00,Releasing 0.13.0,False,14,13,1,,,,728,432,443,78,2.2037037037037037,88.34048489328634,9.6,13.4,65.85406660935541,1.2304574275362319,272.45408408403307,15.136338004668499,0.021951355536451805
28,c2d93f5e63aa64c30f01755dedc5f7bbddb4482a,Andrew Godwin,2016-06-08 23:26:25+00:00,Add channel and group name validators to base layer,False,52,51,1,1.0,1.0,1.0,778,469,478,79,2.189655172413793,85.57243274709305,10.9,15.0,71.26899582029998,1.3804574275362318,279.6588097937338,15.53660054409632,0.023756331940099993
29,a2d93b7a3356581ae77441818503d04ade23184b,Andrew Godwin,2016-06-08 23:30:02+00:00,Releasing 0.13.1,False,2,1,1,,,,778,469,478,79,2.189655172413793,85.57243274709305,10.9,15.0,71.26899582029998,1.3804574275362318,279.6588097937338,15.53660054409632,0.023756331940099993
30,ce788c29ffa1d413b69b65dd1f49b9f265e51afc,Andrew Godwin,2016-06-08 23:34:43+00:00,Better channel name handling,False,24,13,11,1.0,1.0,0.0,780,470,479,80,2.189655172413793,85.66429595620701,10.3,13.5,62.273938065145764,1.3274526198439243,221.43758019511833,12.302087788617685,0.020757979355048587
31,2b388f3403f61245af8b2fa5c58e76f8b3bd28d5,Andrew Godwin,2016-06-08 23:37:28+00:00,Improve conformance suite,False,32,27,5,1.0,1.0,1.0,802,487,492,81,2.15,85.50993218807862,10.5,13.8,64.06514479807387,1.3207859531772574,226.87723268350092,12.604290704638938,0.021355048266024627
32,0c951c96e811b9f73a25fc6f86d1dabda16c5a22,Andrew Godwin,2016-06-08 23:38:54+00:00,Releasing version 0.13.2,False,2,1,1,,,,802,487,492,81,2.15,85.50993218807862,10.5,13.8,64.06514479807387,1.3207859531772574,226.87723268350092,12.604290704638938,0.021355048266024627
33,8f1056310a43ab207b0aefb2837d4c10ff4cec10,Andrew Godwin,2016-06-09 00:06:37+00:00,Releasing version 0.13.3,False,2,1,1,,,,802,487,492,81,2.15,85.50993218807862,10.5,13.8,64.06514479807387,1.3207859531772574,226.87723268350092,12.604290704638938,0.021355048266024627
34,35e8b427f57b31f6d85e99722ff44f9d26b6f176,Andrew Godwin,2016-07-17 05:41:26+00:00,Add group_channels function to groups,False,14,13,1,0.2,1.0,1.0,814,491,502,82,2.1311475409836067,85.4508919743996,10.5,13.8,64.06514479807387,1.3207859531772574,226.87723268350092,12.604290704638938,0.021355048266024627
35,090a0a6a58eae66a1701819a475254265198b8ee,Andrew Godwin,2016-07-17 05:44:06+00:00,Releasing version 0.14.0,False,18,17,1,,,,814,491,502,82,2.1311475409836067,85.4508919743996,10.5,13.8,64.06514479807387,1.3207859531772574,226.87723268350092,12.604290704638938,0.021355048266024627
36,f4f11e67e8051ba58619775c2cb86ebbc6e8559f,Jeremy Spencer,2016-09-03 23:39:45+00:00,Updated base_layer.BaseChannelLayer.valid_channel_name/valid_group_name to include more easily explained errors,False,23,13,10,1.0,1.0,1.0,817,493,504,82,2.1451612903225805,85.41129449744723,10.5,13.6,63.373258474346414,1.3707859531772575,227.74209058816024,12.652338366008902,0.021124419491448807
37,b12b81ac1861e8df9898651f267c57a96c47f7d2,Jeremy Spencer,2016-09-05 21:09:28+00:00,Added underscore to list of approved symbols used in Group/Channel names,False,5,3,2,,,,818,494,505,82,2.1451612903225805,85.38650266391764,10.5,13.6,63.373258474346414,1.3707859531772575,227.74209058816024,12.652338366008902,0.021124419491448807
38,af044dea938f2f50c96d896c9b648e8764a73953,Andrew Godwin,2016-09-09 12:27:40+00:00,Django-ification,False,12,6,6,,,,814,491,502,82,2.1311475409836067,85.4508919743996,10.5,13.8,64.06514479807387,1.3207859531772574,226.87723268350092,12.604290704638938,0.021355048266024627
39,25b6b50fc8c144198e34e1fda3627d4b6bc0f150,Jeremy Spencer,2016-09-12 00:42:11+00:00,Fixed TypeError checking in base_layer and fixed tests to check for Excemption instead of returning false,False,40,27,13,0.0,1.0,1.0,832,504,515,82,2.1451612903225805,85.02401527314363,10.3,13.4,62.42081619514347,1.3207859531772574,224.4107397791053,12.467263321061406,0.020806938731714488
40,76840fa44512c4a7fa01e4cc0a55b959b4e9d633,Oskar Hahn,2016-11-04 09:29:51+00:00,Altert Channel.send on the inmemory layer to send a copy of the message.,False,15,14,1,1.0,1.0,1.0,845,514,522,82,2.126984126984127,84.95196760568045,10.3,13.4,62.42081619514347,1.3207859531772574,224.4107397791053,12.467263321061406,0.020806938731714488
41,4a1b348108e81c301c18f4ff9087819dc5912ecd,Andrew Godwin,2016-11-04 12:53:52+00:00,Deprecate receive_many in favour of receive.,False,10,9,1,1.0,1.0,0.0,853,519,526,82,2.109375,84.89797339321133,10.3,13.4,62.42081619514347,1.3207859531772574,224.4107397791053,12.467263321061406,0.020806938731714488
42,ad9c63832461bf380daecec8caaf30e9e787faf6,Andrew Godwin,2016-11-04 13:24:40+00:00,Convert test and channel layer uses of receive_many to receive,False,38,19,19,,,,853,519,526,82,2.109375,84.89797339321133,10.3,13.4,62.42081619514347,1.3207859531772574,224.4107397791053,12.467263321061406,0.020806938731714488
43,9d365a7e2535edd00174f26895cb8cb94bf660a3,navyad,2016-12-13 11:40:04+00:00,validation method for multiple  channel names,False,34,34,0,1.0,1.0,1.0,887,537,545,86,2.090909090909091,84.42405871671517,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
44,f8cec00683baf2580c924484d3d141a2dc015f66,Artem Malyshev,2016-12-16 02:22:16+00:00,Add missed abstract method.,False,3,3,0,1.0,1.0,1.0,890,539,547,86,2.074626865671642,84.36812187401313,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
45,4dbfdfe6bb876c15db7dee334dd524c780ec8006,Artem Malyshev,2016-12-20 23:53:56+00:00,Split send_group and group_channels conformance tests.,False,30,21,9,1.0,1.0,1.0,902,546,553,88,2.0588235294117645,84.32356133294186,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
46,ec14d49b77cf3363d4db2ad0654bff8c39c9caea,Bartek Ogryczak,2017-01-11 01:05:35+00:00,"Removing exceptions redefinitions

Removing redefinitions of ChannelFull and MessageTooLarge, as they are already defined in BaseChannelLayer",False,6,0,6,,,,896,542,549,88,2.0588235294117645,84.3830520506315,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
47,6832d44f5f28a597a6f5e841f17d6e12aef1dcf0,Andrew Godwin,2017-01-23 18:10:25+00:00,Added underscores into name error message,False,2,1,1,,,,896,542,549,88,2.0588235294117645,84.3830520506315,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
48,e7cac8152a4aade3aa24f6182de3d78fd8b7fc88,Maik Hoepfel,2017-01-27 02:09:11+00:00,"tox, and all the Pythons  (#13)

* Add tox and test against more Python versions

I agreed with Andrew to add tox alongside Travis for testing against
against all supported Python versions. This commit achieves that.

Travis and tox configuration are prone to duplicate information. I
reduced that by introducing a requirements_dev.txt, which contains all
requirements that are needed to start developing/testing. This should
also ease the process for a new contributor (once documented).

I did remove usage of unittest2, because as far as I understand, the
package only backports features already added to Python 2.7. I also
could not find any usage of it; SkipTest works just as well when using
unittest instead of unittest2. But please do correct me, I'm likely to
be wrong!

* Document supported Python versions

This commit adds a short blurb on what Python versions are supported.

As I plan to standardize how to run tests across all Channels projects,
I think it makes sense to also just link to the central contributing
guidelines. I plan to update those later.",False,50,31,19,0.0,0.0,0.0,883,532,540,88,2.0597014925373136,84.45539709851347,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
49,c92185b695ee74b01c7f38a749264bb5b4e1dc23,Artem Malyshev,2017-03-19 18:18:19+00:00,"Exclude tests from PyPI package. (#15)

* Ignore Python2 bytecode.

* Move tests outside of PyPI package.

* Exclude tests from find packages instruction.",False,11,6,5,,,,883,532,540,88,2.0597014925373136,84.45539709851347,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
50,e2ff0fd52a49f91f7dd7c9ceb8f8e119d6492bb8,Andrew Godwin,2017-03-19 18:22:29+00:00,Releasing 1.0.1,False,8,7,1,,,,883,532,540,88,2.0597014925373136,84.45539709851347,10.7,14.0,64.85266420912959,1.3207859531772574,226.92504922716503,12.606947179286944,0.02161755473637652
51,7212e4a33ea2f1d8c5ac1a70d71cdc365410a7e2,Andrew Godwin,2017-03-28 02:04:24+00:00,Implement new-style process-local channels,False,87,61,26,0.09090909090909091,0.0,0.0,918,554,562,91,2.1739130434782608,83.69936699311097,12.4,16.4,78.24833168433649,1.4377639751552795,268.02023457247617,14.890013031804227,0.026082777228112163
52,31636cb42624d23c9b5edf78d601357c6b30e77b,Andrew Godwin,2017-03-29 01:25:01+00:00,Add extra conformance tests for process-local channels,False,30,30,0,1.0,1.0,1.0,948,579,581,94,2.183098591549296,83.3920482299692,13.3,17.6,85.81772896906972,1.5510973084886128,321.5011012918927,17.861172293994038,0.028605909656356572
53,6d8314e7d47d25e7f773ce17af53defb780115fa,Andrew Godwin,2017-04-01 14:03:24+00:00,Releasing 1.1.0,False,8,7,1,,,,948,579,581,94,2.183098591549296,83.3920482299692,13.3,17.6,85.81772896906972,1.5510973084886128,321.5011012918927,17.861172293994038,0.028605909656356572
54,0dd33450e7fe7987ba3d343ab03d14f4b3ef840c,Andrew Godwin,2017-04-02 14:15:38+00:00,Fix problem with sending same message twice,False,7,6,1,0.0,1.0,0.8,953,585,586,94,2.183098591549296,83.35413328789416,13.3,17.6,85.81772896906972,1.5510973084886128,321.5011012918927,17.861172293994038,0.028605909656356572
55,b682a0c6564789e8e6f3f11e20e84c63e7c2e6b2,Andrew Godwin,2017-04-02 14:16:07+00:00,Releasing 1.1.1,False,7,6,1,,,,953,585,586,94,2.183098591549296,83.35413328789416,13.3,17.6,85.81772896906972,1.5510973084886128,321.5011012918927,17.861172293994038,0.028605909656356572
56,65bb012f31440b91f79c85dfdedc606d86c742e6,Tobias Kunze,2017-04-08 14:18:51+00:00,"Valid channel names (#18)

Updates `valid_channel_names` to take a `receive` parameter like `valid_channel_name`.",False,6,3,3,,,0.0,953,585,586,94,2.183098591549296,83.35413328789416,13.3,17.6,85.81772896906972,1.5510973084886128,321.5011012918927,17.861172293994038,0.028605909656356572
57,d9a35694a41cd111c65b730c28680795655396ac,Andrew Godwin,2017-04-11 07:32:58+00:00,Extend conformance test suite with group_send/ChannelFull test,False,12,12,0,1.0,1.0,1.0,965,594,593,94,2.1944444444444446,83.2311577559511,13.6,18.2,89.48457293931247,1.5568115942028986,340.6086162066211,18.922700900367836,0.029828190979770818
58,b741685af1e63f16b52040cd0b3fc790d44a1512,Andrew Godwin,2017-05-02 17:22:51+00:00,"Clarify meaning of ""alphanumerics""",False,6,3,3,,,,965,594,593,94,2.1944444444444446,83.2311577559511,13.6,18.2,89.48457293931247,1.5568115942028986,340.6086162066211,18.922700900367836,0.029828190979770818
59,0fcba0aa795e5a463c5192deb2c2cbda520ad5df,Ben Greenberg,2017-05-16 22:16:26+00:00,"Optionally retry on receive in ConformanceTest (#19)

Allows conformance tests to work correctly with backends that do not always receive all messages on the first call (e.g. sharded)",False,68,43,25,0.0,1.0,1.0,983,604,603,94,2.2465753424657535,83.0677083839303,14.1,18.8,93.65600185827975,1.6054723084886127,375.72987390441403,20.873881883578555,0.03121866728609325
60,f75974cd2f7b9708581f23c21920a12272beb6e9,Andrew Godwin,2017-05-16 22:45:18+00:00,Releasing 1.1.2,False,8,7,1,,,,983,604,603,94,2.2465753424657535,83.0677083839303,14.1,18.8,93.65600185827975,1.6054723084886127,375.72987390441403,20.873881883578555,0.03121866728609325
61,37497874816b34afa41fa6cf778e302b7529ae4e,Andrew Godwin,2017-05-19 19:03:10+00:00,Start on generic worker base class,False,86,86,0,0.5555555555555556,1.0,0.5833333333333334,1069,652,645,100,2.225,83.01316126148764,13.272727272727273,17.545454545454547,86.19724173247585,1.5504293713532844,342.62803450168883,19.03489080564938,0.02873241391082528
62,c4f99615ec89db1e8e31e28f7527d6efc7e010a4,Andrew Godwin,2017-05-20 22:48:13+00:00,Add generic benchmark tool for channel layers,False,180,179,1,0.35398230088495575,0.5575221238938053,0.911504424778761,1247,762,771,109,2.3707865168539324,81.06370857790647,17.166666666666668,22.5,116.91668624325752,1.9524769237405106,555.7044417198257,30.87246898443476,0.0389722287477525
63,6ec8f5e8a54c5359626d9b1536fddd65647f4bc5,Andrew Godwin,2017-05-20 23:06:58+00:00,Add send throughput and channel name parameter to benchmarker,False,19,14,5,0.0,0.4444444444444444,1.0,1256,765,780,109,2.359550561797753,80.98912074932731,17.5,23.0,120.51413825476953,1.9500730775866646,577.4410829085992,32.080060161588854,0.040171379418256506
64,58fdcfe7e3c1132b04cf6453f5f69a416c862da2,Andrew Godwin,2017-05-22 23:48:07+00:00,Improve benchmarker to use subprocess,False,56,40,16,0.47368421052631576,0.6842105263157895,1.0,1280,782,801,108,2.3777777777777778,80.76552810199395,17.75,23.583333333333332,124.50980718320282,2.013047911394832,637.1791989238475,35.3988443846582,0.041503269061067605
65,a60bf115907adeb1790b69270142ca13b5119691,Andrew Godwin,2017-05-22 23:55:31+00:00,Add receive_async and async conformance test start,False,48,47,1,1.0,1.0,1.0,1326,812,827,115,2.380434782608696,83.49589624906014,15.428571428571429,20.428571428571427,107.0623266928998,1.761183924052713,546.3234164883751,30.35130091602084,0.0356874422309666
66,3f28f32fee944471c0d06b09d8893f3164de620c,Andrew Godwin,2017-05-22 23:57:20+00:00,Use a python 3.4 compatible syntax for async,False,11,7,4,1.0,1.0,1.0,1329,814,829,115,2.380434782608696,83.49589624906014,15.428571428571429,20.428571428571427,107.0623266928998,1.761183924052713,546.3234164883751,30.35130091602084,0.0356874422309666
67,6af1c12509ce4c33f99e8e84c7fd7a16503f76ad,Artem Malyshev,2017-06-03 18:46:05+00:00,"Verify async extension against its methods. (#20)

Otherwise in Python 2 mode an extension might claim to be async when it cannot be.",False,24,23,1,1.0,1.0,1.0,1351,821,845,115,2.3763440860215055,83.40805919548727,15.857142857142858,21.071428571428573,111.43535526057792,1.7516679466091039,566.2032033103133,31.455733517239622,0.03714511842019263
68,4c2984ceb68a1832eeb0974f7d3a81e7fe3454d3,David Sanders,2017-07-17 04:15:30+00:00,Add classifiers to setup.py (#21),False,15,15,0,,,,1366,821,860,115,2.3763440860215055,83.40805919548727,15.857142857142858,21.071428571428573,111.43535526057792,1.7516679466091039,566.2032033103133,31.455733517239622,0.03714511842019263
69,e80342156b6deef6e71e486c50fe3c8c2974dacf,Andrew Godwin,2017-08-07 07:18:36+00:00,Start on 2.0 release,False,29,29,0,1.0,1.0,0.21428571428571427,1358,825,844,117,2.4,84.40718647361616,14.8,19.466666666666665,100.95882324699495,1.7104383291158654,510.93584038943857,28.38532446607992,0.03365294108233165
70,0ad52409735109a85238b5b068c77c0f4e60e59e,Jason Robinson,2017-08-23 03:33:56+00:00,"Improve channel and group name validation (#23)

Add more explicit error messages and length checks.",False,39,21,18,1.0,1.0,1.0,1369,823,863,115,2.3548387096774195,83.40672592207137,15.785714285714286,21.0,110.97126836122936,1.7521781506907366,564.8213863567386,31.378965908707695,0.03699042278707645
71,5fdb3d55f734f80a7410714fce798de6a6d3ae8d,Edward Betts,2017-09-01 19:53:31+00:00,Correct spelling mistake (#24),False,2,1,1,,,,1369,823,863,115,2.3548387096774195,83.40672592207137,15.785714285714286,21.0,110.97126836122936,1.7521781506907366,564.8213863567386,31.378965908707695,0.03699042278707645
72,c64d4ddae20e85e1b00363cd5ae816c8cb928b40,Andrew Godwin,2017-09-08 04:25:14+00:00,Start of class-thread application wrapper (doesn't work yet),False,38,38,0,1.0,1.0,0.5555555555555556,1396,844,862,123,2.3854166666666665,85.38173731901516,13.875,18.25,94.64889679405776,1.6035359335461237,479.00235036509866,26.611241686949924,0.03154963226468592
73,efa02b79d30e070133c18ea1d3dd2ba3739b5923,Andrew Godwin,2017-10-17 02:44:29+00:00,Significantly improve on the threadpooling application model,False,116,96,20,1.0,1.0,0.43333333333333335,1472,873,900,129,2.355769230769231,84.48262736013557,14.0625,18.4375,94.94607726294298,1.6347859335461237,479.1509405995413,26.619496699974516,0.03164869242098099
74,b51e2598ae470b6a4bf93bc8255365e2e5a9246a,Andrew Godwin,2017-10-17 05:47:43+00:00,Better names and make it all more generic,False,101,45,56,1.0,1.0,0.375,1461,879,903,122,2.311320754716981,84.42378640509497,14.0625,18.4375,94.94607726294298,1.6347859335461237,479.1509405995413,26.619496699974516,0.03164869242098099
75,ad3bdfa6b59e5a11a6c48f5499e1b01bd3642e9f,Andrew Godwin,2017-11-13 07:38:12+00:00,Allow async_to_sync to go to a non-main thread,False,5,2,3,0.0,0.0,0.0,1460,878,902,122,2.311320754716981,85.38173731901516,13.875,18.25,94.64889679405776,1.6035359335461237,479.00235036509866,26.611241686949924,0.03154963226468592
76,090d1cdd8241cbdde4347cbec84dac7309575de6,Andrew Godwin,2017-11-20 03:09:28+00:00,Add new server module for ASGI server base classes,False,156,156,0,0.7246376811594203,0.8260869565217391,0.5072463768115942,1616,946,978,132,2.3189655172413794,84.7361588017742,13.705882352941176,17.823529411764707,91.31977038293734,1.626857349219881,455.30265302656466,25.294591834809147,0.030439923460979103
77,c588b17282878fbe62f8b10372f8042eb430d8d8,Andrew Godwin,2017-11-20 03:09:53+00:00,Rearrange and remove old code,False,1412,101,1311,0.37142857142857144,0.16090225563909774,0.21052631578947367,406,187,229,30,2.25,92.54386028773982,5.571428571428571,7.428571428571429,33.593614229910294,0.7049689440993789,93.50824314176951,5.194902396764972,0.011197871409970096
78,51511b593e15a486ee69746749606e68f64e1ebc,Andrew Godwin,2017-11-20 03:10:15+00:00,Remove double defined function,False,13,0,13,0.0,0.0,0.0,393,180,223,30,2.2962962962962963,92.54386028773982,5.571428571428571,7.428571428571429,33.593614229910294,0.7049689440993789,93.50824314176951,5.194902396764972,0.011197871409970096
79,59a4fbeef0612d48aa24f1a61a1d84a81ba12eb6,Andrew Godwin,2017-11-20 03:20:58+00:00,Bumping version number to an alpha one,False,2,1,1,,,,393,180,223,30,2.2962962962962963,92.54386028773982,5.571428571428571,7.428571428571429,33.593614229910294,0.7049689440993789,93.50824314176951,5.194902396764972,0.011197871409970096
80,97bfbde195b4edb7fe10f8ea923510f31d19b978,Andrew Godwin,2017-11-20 03:22:41+00:00,Pick a non-beta number so requirements work right,False,2,1,1,,,,393,180,223,30,2.2962962962962963,92.54386028773982,5.571428571428571,7.428571428571429,33.593614229910294,0.7049689440993789,93.50824314176951,5.194902396764972,0.011197871409970096
81,605628d0f5d6dd50db44d069a4a55fe75da79dec,Andrew Godwin,2017-11-27 08:18:35+00:00,"Remove more old junk, get testing working again",False,159,33,126,0.8367346938775511,0.3877551020408163,0.4489795918367347,300,133,169,19,1.9523809523809523,94.11571588115926,3.4,3.4,10.712704561867444,0.6,18.3234541228695,1.01796967349275,0.0035709015206224813
82,5712ab67af5f3382a97a3a9542f9fcadad62892f,Andrew Godwin,2017-11-29 00:20:05+00:00,Add WSGI-to-ASGI adapter,False,185,185,0,0.30578512396694213,0.71900826446281,0.5041322314049587,485,229,295,40,2.161290322580645,88.43248897048353,8.571428571428571,10.0,41.701801226025005,1.0974025974025974,120.44451126991567,6.6913617372175365,0.013900600408675001
83,a20e592a462f04eff9f7c1f7158bd6a3b9e97f0d,Andrew Godwin,2017-11-29 00:20:28+00:00,Add env var for worker pool size and test pool limits.,False,18,16,2,1.0,1.0,1.0,499,240,306,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
84,44a798a26e9462abb3f55240acc747cf52296036,Andrew Godwin,2017-11-29 01:10:37+00:00,Modify description and entrypoints,False,5,1,4,,,,496,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
85,64a12bb80a1b998cf65998d89fd17bf41be6ee2f,Andrew Godwin,2017-11-29 01:15:04+00:00,"Change to using ""http.response.content"" as chunk is already a HTTP thing",False,22,11,11,,,,496,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
86,796483748276b3413f95fe196f690ba944908de4,Andrew Godwin,2017-11-29 01:20:57+00:00,Releasing 2.0.1,False,8,7,1,,,,496,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
87,d8ab5d09a533fe1ea5898a0376e2b1db9a82463f,Andrew Godwin,2017-11-29 01:41:46+00:00,Add import sort linting,False,12,7,5,,,,496,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
88,6e3844fd0084590b695f5643d7bec6c84e21364f,Andrew Godwin,2017-11-29 01:44:31+00:00,Add quote checking and linting,False,7,4,3,,,,496,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
89,76f87a87ac8622c88a6c5007b152492d9fa30b23,Andrew Godwin,2017-11-29 01:50:09+00:00,Add flake8 linting,False,17,15,2,,,,503,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
90,f916aba3230b36a2141a7c1991cb343fb65b6d92,Andrew Godwin,2017-11-29 01:54:06+00:00,Also lint tests,False,9,5,4,,,,504,240,303,42,2.161290322580645,87.17334453599592,8.857142857142858,10.857142857142858,44.628976225406866,1.145021645021645,125.08597198358325,6.949220665754624,0.014876325408468958
91,f3faf4b89d759f35210942cd393a304778b603ef,Andrew Godwin,2017-11-30 04:55:43+00:00,Add testing aid for ASGI applications,False,72,49,23,1.0,1.0,1.0,530,254,316,41,2.0555555555555554,88.77537214909115,7.75,9.375,37.46079911635849,1.0643939393939394,108.65544794519907,6.036413774733282,0.012486933038786162
92,2a36ee43faa102f9ce792253db9c90da784e3f9b,Andrew Godwin,2017-11-30 05:10:21+00:00,Better error handling for ApplicationCommunicator,False,29,25,4,1.0,1.0,1.0,551,268,330,47,2.1621621621621623,88.03524128514213,7.75,9.375,37.46079911635849,1.0643939393939394,108.65544794519907,6.036413774733282,0.012486933038786162
93,f7d8f38f14fea64091df474263681025361b95b2,Andrew Godwin,2017-11-30 05:16:47+00:00,"Unify both HTTP request and response to ""body"" rather than ""content""",False,46,23,23,,,,551,268,330,47,2.1621621621621623,88.03524128514213,7.75,9.375,37.46079911635849,1.0643939393939394,108.65544794519907,6.036413774733282,0.012486933038786162
94,3d295565b60655a431ae7d4f4900904971e80c93,Andrew Godwin,2017-11-30 05:16:56+00:00,Don't raise exceptions during ApplicationCommunicator deletion,False,6,3,3,,,,551,268,330,47,2.189189189189189,88.01842841964508,7.75,9.375,37.46079911635849,1.0643939393939394,108.65544794519907,6.036413774733282,0.012486933038786162
95,c1f6a214d954e24a736c866ba4acc81d1be834cd,Andrew Godwin,2018-01-20 06:26:52+00:00,Fix a few issues with testing stuff,False,10,7,3,1.0,1.0,0.0,555,272,334,47,2.2162162162162162,86.41635115784584,8.0,9.625,37.71079911635849,1.1268939393939394,108.78044794519907,6.043358219177726,0.012570266372119497
96,4b09480309b3e5bdf3404a026909986c9f87242a,Andrew Godwin,2018-01-20 06:29:48+00:00,Releasing 2.1.0,False,7,6,1,,,,555,272,334,47,2.2162162162162162,86.41635115784584,8.0,9.625,37.71079911635849,1.1268939393939394,108.78044794519907,6.043358219177726,0.012570266372119497
97,538ce5ee92962307db1082552839df7d0037176a,Andrew Godwin,2018-01-20 08:20:26+00:00,Fix test for new AppCommunicator signature,False,4,2,2,,,,555,272,334,47,2.2162162162162162,86.41635115784584,8.0,9.625,37.71079911635849,1.1268939393939394,108.78044794519907,6.043358219177726,0.012570266372119497
98,9223f0be259ecfb234d344269e9b61b9126b37f4,Andrew Godwin,2018-02-03 07:17:48+00:00,Allow calls to AsyncToSync inside SyncToAsync.,False,48,43,5,1.0,1.0,0.9473684210526315,593,291,354,55,2.263157894736842,85.1821249290951,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
99,75421ac49550ab950555490f11517d647fb9863a,Andrew Godwin,2018-02-03 07:19:33+00:00,Releasing 2.1.1,False,7,6,1,,,,593,291,354,55,2.263157894736842,85.1821249290951,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
100,cb9181a7ccd5e72e0d493c377c8237acb6092465,Andrew Godwin,2018-02-03 20:48:52+00:00,Fixed #26: Allow AsyncToSync to work outside of a SyncToAsync context,False,39,30,9,0.0,1.0,0.75,614,303,365,58,2.230769230769231,84.82512005331269,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
101,77db8db794221a44884c0ab7ffbe01272e7e6c21,Andrew Godwin,2018-02-04 07:02:33+00:00,Use new event loop inside AsyncToSync,False,2,1,1,,,,614,303,365,58,2.230769230769231,84.82512005331269,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
102,3561bb1b2b846ead7641c273a24a414e1111488b,Andrew Godwin,2018-02-04 07:43:35+00:00,Releasing 2.1.2,False,16,15,1,,,,614,303,365,58,2.230769230769231,84.82512005331269,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
103,4ebaafe8f3a1e6fb0e362113458bd0482951fd59,Andrew Godwin,2018-02-04 19:10:11+00:00,Add wait() on ApplicationCommunicator,False,8,8,0,1.0,1.0,1.0,622,308,369,58,2.2,84.66220761901127,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
104,bba4996b21bb5658a390697c7734165e6dc7e2d6,Andrew Godwin,2018-02-04 19:11:31+00:00,Releasing 2.1.3,False,9,8,1,,,,622,308,369,58,2.2,84.66220761901127,8.375,10.0,38.912004175663085,1.1893939393939394,110.10665300450367,6.117036278027982,0.012970668058554364
105,a16f11813294067bab2595eb25b17e6f3cf4cd63,Andrew Godwin,2018-02-04 19:45:04+00:00,Fixed #27: Return values from SyncToAsync/AsyncToSync,False,18,12,6,0.0,1.0,1.0,628,314,375,58,2.2,84.11143510607846,9.25,11.125,44.66759198913545,1.2414772727272727,122.0539316780803,6.780773982115573,0.014889197329711818
106,db4b3a0c95074e84ba39cd0bff1d08f8c7495dbf,Andrew Godwin,2018-02-08 00:59:25+00:00,Make classes also decorators and fix ASGI_THREADS,False,135,104,31,1.0,1.0,0.967741935483871,701,353,414,66,2.0454545454545454,82.9247809536348,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
107,a9f6a77d9f45dd9d2cac01beacf7c888cbea0c4e,Andrew Godwin,2018-02-08 01:11:52+00:00,Releasing 2.1.4,False,10,9,1,,,,701,353,414,66,2.0454545454545454,82.9247809536348,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
108,9d42cb57129bd8d94a529a5c95dcf9f5d35a9beb,Andrew Godwin,2018-02-08 01:27:58+00:00,Prevent calling async_to_sync from an async thread,False,27,27,0,0.4117647058823529,1.0,0.4117647058823529,728,368,431,69,2.111111111111111,82.60041132136283,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
109,229027ba7fef05c85299ee817dfffe36125f8fa2,Andrew Godwin,2018-02-12 00:49:43+00:00,Set our new event loop as global active inside async_to_sync,False,2,2,0,0.0,1.0,0.0,730,370,433,69,2.111111111111111,82.5496184081389,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
110,c05f5a0d30ea3cfc47e6efb27dcbef8a9a163484,Andrew Godwin,2018-02-14 23:43:00+00:00,Releasing 2.1.5,False,10,9,1,,,,730,370,433,69,2.111111111111111,82.5496184081389,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
111,b49a3e4b74c5d80d1bd0cffc2c0469160870ac32,Andrew Godwin,2018-02-16 18:19:49+00:00,Allow async_to_sync to run inside threads without active loops,False,28,23,5,1.0,1.0,1.0,748,380,440,72,2.0869565217391304,82.46465732348095,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
112,c7e0065843a63f08a3e02970dc4bcf91f37bb153,Andrew Godwin,2018-02-17 17:59:26+00:00,Use create_task rather than ensure_future,False,2,1,1,,,,748,380,440,72,2.0869565217391304,82.46465732348095,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
113,67ad7e05f7d996a476317cf91f94aa34af1e9ed2,Andrew Godwin,2018-02-17 18:07:06+00:00,Replicate shutdown logic from asyncio.run(),False,12,9,3,0.0,0.0,0.0,754,386,446,72,2.108695652173913,82.29908199620004,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
114,1848c19bcdf40674457da4c5024c693cfb4f2ff3,Andrew Godwin,2018-02-19 20:09:23+00:00,Releasing 2.1.6,False,9,8,1,,,,754,386,446,72,2.108695652173913,82.29908199620004,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
115,04c2f806cdf6124990d171b200ea1f210bf935ba,Ran Benita,2018-02-23 16:37:38+00:00,"Small fixes to the spec (#29)

Remove executable bit from non-executable files, small typo & consistency fixes and clarify wording around ""connection"" and ""socket"".",False,24,12,12,,,,754,386,446,72,2.108695652173913,82.29908199620004,10.625,13.0,54.62049218509367,1.2914772727272728,137.94394150861214,7.663552306034006,0.018206830728364556
116,daebab19124cf85150fff5ffa2457beee92cf49f,Andrew Godwin,2018-02-23 18:20:10+00:00,Give cancelled tasks a chance to exit and cancel their children,False,25,20,5,0.0,1.0,1.0,769,401,461,72,2.1739130434782608,81.28030556585506,10.75,13.25,55.16297343545425,1.2914772727272728,138.2151821337924,7.678621229655134,0.018387657811818083
117,7ca0ca0346433bd84b669999278247b684be826e,Andrew Godwin,2018-02-24 03:30:11+00:00,Re-add classifiers,False,15,15,0,,,,784,401,476,72,2.1739130434782608,81.28030556585506,10.75,13.25,55.16297343545425,1.2914772727272728,138.2151821337924,7.678621229655134,0.018387657811818083
118,dfb76d4e23d0851021ee44529e90bac2453b50e4,Andrew Godwin,2018-02-24 18:43:40+00:00,Make classifiers make sense,False,5,1,4,,,,781,401,473,72,2.1739130434782608,81.28030556585506,10.75,13.25,55.16297343545425,1.2914772727272728,138.2151821337924,7.678621229655134,0.018387657811818083
119,6210736715cd489255efbece2a3c0e15883de656,Andrew Godwin,2018-03-07 02:32:40+00:00,Don't re-raise CancelledError in Communicator.wait,False,9,6,3,1.0,1.0,1.0,784,404,476,72,2.1956521739130435,81.16143696149032,10.75,13.25,55.16297343545425,1.2914772727272728,138.2151821337924,7.678621229655134,0.018387657811818083
120,1d612ac738d0e75db3bfdfb5effc574defedb1d7,Andrew Godwin,2018-03-07 02:33:46+00:00,Releasing 2.2.0,False,10,9,1,,,,784,404,476,72,2.1956521739130435,81.16143696149032,10.75,13.25,55.16297343545425,1.2914772727272728,138.2151821337924,7.678621229655134,0.018387657811818083
121,5f7b669050e17fce5a36a97d72e28b22f39a17c9,Daniel Gilge,2018-03-15 15:09:05+00:00,"Add receive_nothing to ApplicationCommunicator

Allows for easier testing of ""no message received""",False,56,56,0,0.3125,1.0,0.78125,840,435,512,80,2.1875,80.90902246699157,11.222222222222221,14.333333333333334,57.75856384659974,1.3384559884559883,132.7210105466363,7.373389474813128,0.019252854615533246
122,027e5afd602b1753e8d9baceefc2c7af59f44c69,Andrew Godwin,2018-04-12 03:48:08+00:00,Releasing version 2.3.0,False,8,7,1,,,,840,435,512,80,2.1875,80.90902246699157,11.222222222222221,14.333333333333334,57.75856384659974,1.3384559884559883,132.7210105466363,7.373389474813128,0.019252854615533246
123,55459a6538bd2d89fc23c9ee6f7f4c49490a6574,Till Theato,2018-05-13 14:18:15+00:00,"Bump async-timeout version to 3.0 (#40)

Resolves dependency conflict with aiohttp.",False,2,1,1,,,,840,435,512,80,2.1875,80.90902246699157,11.222222222222221,14.333333333333334,57.75856384659974,1.3384559884559883,132.7210105466363,7.373389474813128,0.019252854615533246
124,3ba8cb5492c3a53415ba52f426a3a2302e3e89ed,syntonym,2018-05-16 01:27:16+00:00,Fixed #41: Empty WSGI responses were not sending headers,False,36,36,0,0.21428571428571427,1.0,1.0,876,453,540,81,2.183673469387755,80.08668951016337,11.666666666666666,15.222222222222221,62.19934267098157,1.3586580086580087,142.6239054368001,7.923550302044453,0.020733114223660525
125,972e333b87705c9b326e77eab8686ec099bcaeeb,Andrew Godwin,2018-05-18 05:23:04+00:00,Add Sphinx docs section for narrative docs & spec discussion,False,305,305,0,,,,1042,475,589,175,2.183673469387755,82.07802055914705,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
126,629d01d3833c72de1f56148df481c171b29de883,Andrew Godwin,2018-05-18 05:31:49+00:00,Fix alabaster theme,False,7,5,2,,,,1045,475,592,174,2.183673469387755,82.07802055914705,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
127,7c713ac412a2895505ce64865330e55d026e8239,Andrew Godwin,2018-05-23 08:15:15+00:00,Change timeout requirement to use semver comparator,False,2,1,1,,,,1045,475,592,174,2.183673469387755,82.07802055914705,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
128,f836439c5f6797b7ccfd3c75d7b12351d17e54b1,Andrew Godwin,2018-05-23 08:16:58+00:00,Releasing 2.3.1,False,9,8,1,,,,1045,475,592,174,2.183673469387755,82.07802055914705,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
129,104620520286f7d230470a2f15e944bec48708a7,Andrew Godwin,2018-05-23 08:28:37+00:00,Change ASGI_THREADS to do things to default threadpool instead,False,14,6,8,,,,1043,477,588,175,2.183673469387755,82.08106865081331,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
130,a40ba14aa25d7de7faefa69ccd5f9ae2387ce7c6,Andrew Godwin,2018-05-23 09:20:24+00:00,Fix tests for new executor stuff,False,6,4,2,0.0,1.0,1.0,1045,479,590,175,2.183673469387755,82.06041174111769,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
131,2bd62c4b241340ca79292c3b9ef3ad87715e64c8,Andrew Godwin,2018-05-23 12:12:22+00:00,Fix version to include 2.0 for now (3.0 appears unfindable),False,2,1,1,,,,1045,479,590,175,2.183673469387755,82.06041174111769,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
132,720abc575b152fdc758c347b1507faa6610fe90d,Andrew Godwin,2018-05-23 12:13:26+00:00,Releasing 2.3.2,False,8,7,1,,,,1045,479,590,175,2.183673469387755,82.06041174111769,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
133,f831746b928060fe4e76e9b52845c0ee6ddf12de,Andrew Godwin,2018-08-17 05:10:11+00:00,Move to the default RTD sphinx theme,False,2,1,1,,,,1045,479,590,175,2.183673469387755,82.06041174111769,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
134,58760921b21d5d39b0cc4760980fc22d531ccc47,Michael,2018-08-24 23:45:33+00:00,Run tests against Python 3.7 and add classifier (#62),False,4,4,0,,,,1046,479,591,175,2.183673469387755,82.06041174111769,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
135,5947ae40a37d7b8d9238063f25d075d42a81ea19,Andrew Godwin,2018-08-27 04:24:27+00:00,Implement Black formatter,False,153,84,69,0.2,0.8,0.6,1050,479,588,175,2.183673469387755,82.06066253242905,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
136,69013c49d6cd2a64aec61d1904118111f06b3bd7,Tom Christie,2018-10-19 23:10:55+00:00,Lowercase headers coming back from WSGI responses (#68),False,4,2,2,,,,1050,479,588,175,2.183673469387755,82.06066253242905,10.5,13.7,55.97940840388342,1.2227922077922078,128.3615148931201,7.131195271840008,0.01865980280129447
137,e3e1cc84612065b0b61c03e96fdfb8a7854a5f85,Tom Christie,2018-12-03 09:32:31+00:00,Threadpool operations should run in same contextvars context.,False,20,17,3,1.0,1.0,0.0,1064,491,600,176,2.204081632653061,81.6945253786045,10.8,14.0,57.384783184384446,1.2727922077922078,132.37226445412216,7.354014691895676,0.019128261061461482
138,220fbe39bf1935e544a6e48aa9635a99bb7ec217,Tom Christie,2018-12-05 14:27:28+00:00,Black formatting,False,3,2,1,,,,1065,491,600,176,2.204081632653061,81.6945253786045,10.8,14.0,57.384783184384446,1.2727922077922078,132.37226445412216,7.354014691895676,0.019128261061461482
139,7d1768d2c97a4bdbdb9338bf95683b63803dc0de,Andrew Godwin,2019-02-23 18:43:29+00:00,Bump pytest version to see if it fixes test failures,False,4,2,2,,,,1065,491,600,176,2.204081632653061,81.6945253786045,10.8,14.0,57.384783184384446,1.2727922077922078,132.37226445412216,7.354014691895676,0.019128261061461482
140,1e87886eb85431979b75368bcc78a15170492485,Andrew Godwin,2019-02-23 18:43:29+00:00,Fix test suite,False,2,1,1,,,,1065,491,600,176,2.204081632653061,81.6945253786045,10.8,14.0,57.384783184384446,1.2727922077922078,132.37226445412216,7.354014691895676,0.019128261061461482
141,8ae25bd625b6da8b5f5cfe11e93bd33ea7bd456e,Andrew Godwin,2019-03-20 21:30:59+00:00,"3.0: Single-callable style applications & lifecycle improvements (#80)

This switches the ASGI specification to use a single, async callable, as well as improving the error behaviour of the lifecycle scope type.",False,300,250,50,1.0,0.8135593220338984,0.8813559322033898,1208,569,666,182,2.0303030303030303,82.36073714703905,10.166666666666666,13.583333333333334,54.2610036965824,1.1553571428571427,114.38589831484431,6.3547721286024625,0.01808700123219413
142,e3552d90a84ee47c283dbcc376699887703db2ff,Andrew Godwin,2019-03-20 21:33:05+00:00,Releasing 3.0.0,False,9,8,1,,,,1208,569,666,182,2.0303030303030303,82.36073714703905,10.166666666666666,13.583333333333334,54.2610036965824,1.1553571428571427,114.38589831484431,6.3547721286024625,0.01808700123219413
143,768a0718269c309bf2a5a3c4c9558d55c56283d5,Andrew Godwin,2019-04-13 10:38:44+00:00,"Add a threadlocal drop-in replacement as ""local""",False,145,143,2,0.6811594202898551,1.0,0.8115942028985508,1340,643,742,197,2.026315789473684,82.20039197673705,10.5,14.857142857142858,57.94358888525744,1.228401360544218,117.47921284376766,6.5266229357648715,0.019314529628419147
144,51d5c4618a34a16cb6a14624e0e4d35dc92978ae,Andrew Godwin,2019-04-13 11:04:23+00:00,Fix implementation and tests for the local module,False,81,67,14,1.0,1.0,1.0,1393,677,775,205,2.038961038961039,81.52621999107858,10.928571428571429,14.857142857142858,59.226910490483405,1.2164965986394558,119.26093793085865,6.625607662825482,0.0197423034968278
145,7b9f5d772245d85d2138acb326c07acbd5851e9e,Andrew Godwin,2019-04-13 11:59:15+00:00,Releasing 3.1.0,False,9,8,1,,,,1393,677,775,205,2.038961038961039,81.52621999107858,10.928571428571429,14.857142857142858,59.226910490483405,1.2164965986394558,119.26093793085865,6.625607662825482,0.0197423034968278
146,0ad2c43ae84aa6a9eb7c86feb4fe5319e3b061ea,Andrew Godwin,2019-04-13 12:26:43+00:00,Clean up local storage for dead threads/tasks,False,63,61,2,1.0,0.7352941176470589,0.9705882352941176,1452,717,812,212,2.0875,80.76120065262623,11.714285714285714,15.857142857142858,65.04143355827071,1.2907262905162065,140.45850220157345,7.803250122309637,0.021680477852756903
147,67cadff205f1e41512b2b2924df8221bdcfd274d,Andrew Godwin,2019-04-13 12:30:24+00:00,Releasing 3.1.1,False,8,7,1,,,,1452,717,812,212,2.0875,80.76120065262623,11.714285714285714,15.857142857142858,65.04143355827071,1.2907262905162065,140.45850220157345,7.803250122309637,0.021680477852756903
148,3dcc852ee8249f4d3096ae8b450c1e753d55d041,Andrew Godwin,2019-04-17 00:54:29+00:00,"Local maps better now between threads and tasks

Allows recursive lookup through a whole call stack, similar to
contextvars.",False,223,186,37,0.961038961038961,0.7662337662337663,0.7142857142857143,1601,792,884,235,2.0470588235294116,80.10827830237487,12.928571428571429,17.571428571428573,75.95931287847735,1.2433673469387756,134.67434736496384,7.4819081869424355,0.025319770959492453
149,82ef31b73983b182d98502c3ea5a8d0f0032e011,Tobias Kunze,2019-04-17 00:56:48+00:00,Added tests showing threads and method locals side-by-side,False,51,51,0,0.2857142857142857,1.0,1.0,1652,826,917,235,2.0697674418604652,79.72422374631346,14.071428571428571,19.857142857142858,91.14884215221632,1.333600583090379,188.6989437975462,10.483274655419232,0.030382947384072104
150,265e4e7d26c51cfc4b167b574e72568704393392,Andrew Godwin,2019-04-18 02:24:56+00:00,Releasing 3.1.2,False,13,11,2,,,,1652,826,917,235,2.0697674418604652,79.72422374631346,14.071428571428571,19.857142857142858,91.14884215221632,1.333600583090379,188.6989437975462,10.483274655419232,0.030382947384072104
151,e31a26463d002399b3301c92c570de9c9f4a9d1d,Dane Hillard,2019-04-25 21:42:40+00:00,"Fixed and documented docs process

* Comment out `html_sidebars` lines from `docs/conf.py` to get default Sphinx theme when building docs out of the box
* Add section in README.rst about how to build the docs

Fixed #84.",False,43,34,9,,,,1652,824,908,244,2.0697674418604652,79.72422374631346,14.071428571428571,19.857142857142858,91.14884215221632,1.333600583090379,188.6989437975462,10.483274655419232,0.030382947384072104
152,2a48c67545c9bdf64d3ed1b6fb98820dd72f8893,Masashi SHIBATA,2019-05-21 04:56:05+00:00,Set `REMOTE_ADDR` from scope['client'] in WSGI adapter,False,4,4,0,0.0,0.0,0.0,1656,826,910,244,2.0930232558139537,79.6692317166771,14.142857142857142,20.071428571428573,92.33547789349916,1.3448936378616947,196.1149110798406,10.895272837768918,0.030778492631166388
153,327245dc7e30a8fe5cc94d083db05e6fceee1920,Daniel Hahler,2019-06-27 17:32:30+00:00,"AsyncToSync: used asyncio._get_running_loop for check

Simpler and available since Python 3.5",False,15,5,10,1.0,1.0,1.0,1651,821,905,244,2.0697674418604652,79.67487124565574,14.214285714285714,20.285714285714285,93.2023155510053,1.3627507807188375,198.74482702003317,11.041379278890728,0.031067438517001767
154,9c6df6e02700092eb19adefff3552d44388f69b8,Andrew Godwin,2019-07-05 18:50:33+00:00,"Vendoring async_timeout to remove all dependencies

This helps keep Django at only a single level of dependencies.",False,138,131,7,1.0,1.0,0.8051948051948052,1775,890,987,258,2.0918367346938775,78.75974385117667,15.4,21.933333333333334,101.98882784760494,1.551900728670915,248.49517188536421,13.805287326964677,0.03399627594920165
155,c0fdf92290b94f04b9f9c02cfdb190727a708c8a,Andrew Godwin,2019-07-05 18:53:12+00:00,Releasing 3.1.3,False,10,9,1,,,,1775,890,987,258,2.0918367346938775,78.75974385117667,15.4,21.933333333333334,101.98882784760494,1.551900728670915,248.49517188536421,13.805287326964677,0.03399627594920165
156,4a48f4fdb8bcc3e8bfa46aa122db97e9cf31eb65,Andrew Godwin,2019-07-07 16:01:33+00:00,"Revert ""AsyncToSync: used asyncio._get_running_loop for check""

This reverts commit 327245dc7e30a8fe5cc94d083db05e6fceee1920.

Turns out we need to support Python 3.5 for Channels.",False,15,10,5,0.0,0.0,0.0,1780,895,992,258,2.1122448979591835,78.75448029079661,15.333333333333334,21.733333333333334,101.17977936726588,1.5352340620042484,246.04058367451788,13.668921315250989,0.03372659312242196
157,a00a15b7d79d981520c229508719d5037b49f68e,Andrew Godwin,2019-07-07 16:02:54+00:00,Releasing 3.1.4,False,11,9,2,,,,1781,895,993,258,2.1122448979591835,78.75448029079661,15.333333333333334,21.733333333333334,101.17977936726588,1.5352340620042484,246.04058367451788,13.668921315250989,0.03372659312242196
158,d4de008e4d42d42365b03a1560821cf3a8729983,Carlton Gibson,2019-07-09 01:19:30+00:00,"Fixed unittest collection with @async_to_sync on Python 3.7

Uses functools.update_wrapper to ensure __qualname__ (along with any other future callable attributes) are preserved correctly.",False,10,9,1,1.0,1.0,0.6666666666666666,1789,901,999,258,2.1,78.70210361007346,15.333333333333334,21.733333333333334,101.17977936726588,1.5352340620042484,246.04058367451788,13.668921315250989,0.03372659312242196
159,2d29f99cba65c25870aa90f74cbeb694ef7e7445,Andrew Godwin,2019-07-18 04:34:19+00:00,"Add a thread_sensitive mode to SyncToAsync

Intended for DB code and similar stuff that has to run on one thread",False,128,125,3,0.6129032258064516,1.0,0.8387096774193549,1911,965,1059,275,2.1262135922330097,78.01314804272242,16.933333333333334,24.333333333333332,116.69052597416659,1.6521571389273253,290.5629057619972,16.142383653444288,0.03889684199138886
160,67e2703b799543ef5ef03c47ce76a18c1f194289,Andrew Godwin,2019-07-18 04:37:57+00:00,Remove rogue line from a bad rebase,False,1,0,1,0.0,0.0,0.0,1910,964,1058,275,2.1262135922330097,78.02721541944285,16.933333333333334,24.333333333333332,116.69052597416659,1.6521571389273253,290.5629057619972,16.142383653444288,0.03889684199138886
161,3a8f32f88f08c481cb3fdd707a409638a7abcf77,Andrew Godwin,2019-07-18 04:42:01+00:00,"Move the sync-in-main-thread shortcut up

This puts it before the args manipulation for contextvars",False,18,9,9,,,,1910,964,1058,275,2.1262135922330097,78.02721541944285,16.933333333333334,24.333333333333332,116.69052597416659,1.6521571389273253,290.5629057619972,16.142383653444288,0.03889684199138886
162,85b80b071b946281bf7aa2440151740be51a8938,Andrew Godwin,2019-07-25 04:30:27+00:00,"Improved thread_sensitive implementation

It can now handle infinite nesting of async and sync.",False,376,309,67,0.6907216494845361,0.6701030927835051,0.5567010309278351,2097,1060,1155,309,2.2232142857142856,78.01566080499116,15.875,22.1875,104.4584088835288,1.5939694331289829,256.1088347064856,14.228268594804753,0.03481946962784293
163,5f7de42422dd2f332936e06a61e26af66f5fdfdd,Andrew Godwin,2019-07-25 20:27:45+00:00,"Tidy up some small issues with sync stuff

Remove a magic constant, and fix a misleading comment.",False,8,5,3,,,,2099,1061,1156,310,2.2232142857142856,78.01050913495754,15.875,22.1875,104.4584088835288,1.5939694331289829,256.1088347064856,14.228268594804753,0.03481946962784293
164,4543fc4d97827b53145456d9e44e1193962b2a5c,Andrew Godwin,2019-07-29 17:02:56+00:00,Releasing 3.2.0,False,9,8,1,,,,2099,1061,1156,310,2.2232142857142856,78.01050913495754,15.875,22.1875,104.4584088835288,1.5939694331289829,256.1088347064856,14.228268594804753,0.03481946962784293
165,ff3ebb2bf1009bd5829b9b4ba8b817bd2c706a23,Andrew Godwin,2019-08-05 02:32:21+00:00,"Propagate exceptions across sync/async boundaries

This is a bit hacky, but the best portable way of doing this I could
find for now.",False,34,28,6,0.0,0.0,0.0,2121,1074,1174,314,2.267857142857143,77.91894203599739,15.875,22.1875,104.4584088835288,1.5939694331289829,256.1088347064856,14.228268594804753,0.03481946962784293
166,699fe3b790257651f4bba5452f36557fc47c783a,Andrew Godwin,2019-08-05 04:26:55+00:00,Releasing 3.2.1,False,8,7,1,,,,2121,1074,1174,314,2.267857142857143,77.91894203599739,15.875,22.1875,104.4584088835288,1.5939694331289829,256.1088347064856,14.228268594804753,0.03481946962784293
167,771b68c144f3e30d6569a83ed79045362a8af0ba,Tim Bell,2019-08-05 05:51:38+00:00,Copied method's __self__ in sync_to_async,False,26,26,0,1.0,1.0,0.7333333333333333,2147,1090,1189,317,2.265486725663717,77.81196818537457,16.125,22.5625,106.93864177946766,1.5931013775734273,261.1160050431607,14.506444724620039,0.035646213926489215
168,b086f96db7b03be5c6704686ccddad8510d1d970,Andrew Godwin,2019-08-11 18:32:11+00:00,Make SyncToAsync values appear as coroutine funcs,False,14,14,0,1.0,1.0,0.8571428571428571,2161,1098,1196,317,2.254385964912281,77.75960551466633,16.25,22.6875,107.86344343792811,1.625852879074929,273.48814713786453,15.193785952103584,0.03595448114597603
169,ce7b54c328c328184041b9ab399f2ba06ed2c80c,Jeremy Lainé,2019-08-28 14:16:27+00:00,"Made WsgiToAsgi pass SERVER_PORT as a string

WSGI applications expect to receive SERVER_PORT as a string, whereas ASGI defines `server` as a (str, int) tuple.",False,4,2,2,,,,2161,1098,1196,317,2.254385964912281,77.75960551466633,16.25,22.6875,107.86344343792811,1.625852879074929,273.48814713786453,15.193785952103584,0.03595448114597603
170,6662e6f861d19eccf0e816213e8d50db725954f0,Jeremy Lainé,2019-08-28 14:16:54+00:00,"Made WsgiToAsgi check scope type (#118)

Currently, we validate that messages are of type ""http.request"". However
this validation only occurs when the first message is received. This may
be too late for servers (such as hypercorn) which try to determine
support for the lifespan extension.

This change checks that scope[""type""] is ""http"" to provide early
failure.",False,2,2,0,1.0,1.0,0.0,2163,1100,1198,317,2.263157894736842,77.71120498673075,16.375,22.875,109.03476185773677,1.623244183422755,278.2186940436104,15.456594113533908,0.03634492061924559
171,203231722d7b4db2a89cdf7eb22272535f091d27,Jeremy Lainé,2019-08-29 07:03:15+00:00,"Made AsgiToWsgi pass root_path as SCRIPT_NAME (#119)

In order to properly support applications which are not mounted at the
root, we need to pass the ASGI `root_path` as the WSGI `SCRIPT_NAME`.",False,2,1,1,,,,2163,1100,1198,317,2.263157894736842,77.71120498673075,16.375,22.875,109.03476185773677,1.623244183422755,278.2186940436104,15.456594113533908,0.03634492061924559
172,0d798fc186535bf5205933299ef74e8b3d257013,Christopher Head,2019-08-30 05:40:35+00:00,"Handle request body split across messages in WSGI

Maps a multi-part ASGI request body into a single WSGI input file object.",False,75,61,14,0.3333333333333333,1.0,0.8333333333333334,2210,1127,1235,317,2.2695652173913046,77.21370987471661,16.8125,23.5625,112.8942431639515,1.6220903372689088,282.8759645523263,15.71533136401813,0.037631414387983834
173,c8aea7f3016487b1735268957ede82c03cf00d99,Andrew Godwin,2019-08-30 05:46:12+00:00,Releasing 3.2.2,False,13,12,1,,,,2210,1127,1235,317,2.2695652173913046,77.21370987471661,16.8125,23.5625,112.8942431639515,1.6220903372689088,282.8759645523263,15.71533136401813,0.037631414387983834
174,f65c04d7f3c7d8942a5552980c431ca065605a83,laevilgenius,2019-10-21 21:29:33+00:00,Support Python 3.8 (#130),False,14,6,8,,,,2210,1126,1235,317,2.2695652173913046,77.22797674599848,16.8125,23.5625,112.8942431639515,1.6220903372689088,282.8759645523263,15.71533136401813,0.037631414387983834
175,dd09962654196ac0816c3a049459e7ea78c5c7ea,Carlton Gibson,2019-10-23 19:20:13+00:00,Releasing 3.2.3,False,8,7,1,,,,2210,1126,1235,317,2.2695652173913046,77.22797674599848,16.8125,23.5625,112.8942431639515,1.6220903372689088,282.8759645523263,15.71533136401813,0.037631414387983834
176,ff4f665b4322bf6c7ea4158af7577bdf0a088a0d,Adam Johnson,2019-11-04 18:52:41+00:00,"Declared python_requires in setup.py

This will prevent installation on unsupported Python versions.",False,1,1,0,,,,2211,1126,1236,317,2.2695652173913046,77.22797674599848,16.8125,23.5625,112.8942431639515,1.6220903372689088,282.8759645523263,15.71533136401813,0.037631414387983834
177,4fa1c540c33552dbf109a6fa65475561bab2adc8,John Cass,2019-11-19 15:43:48+00:00,Added support for naive introspection of wrapped sync_to_async functions (#137),False,25,25,0,1.0,1.0,0.9411764705882353,2236,1143,1252,317,2.2586206896551726,77.13395483949633,17.0625,23.9375,115.44954311393643,1.6212663425424751,289.3136851463508,16.0729825081306,0.03848318103797881
178,911215ca81a6956df4de7e282f954654443b1fcd,bjd183,2020-02-29 02:48:31+00:00,"Fixed #145: Pending async tasks/generators cancellation

This ensures that all async tasks, including generators, are cancelled during the async loop shutdown as part of async_to_sync. The logic is based on that in `asyncio.run()`.",False,17,17,0,0.0,0.0,0.0,2253,1153,1267,319,2.3017241379310347,77.00802981366212,17.1875,24.125,116.36810755713601,1.6212663425424751,291.6100962543498,16.200560903019433,0.03878936918571201
179,34817788d2caec9b65a54741495d6ed7d44b499c,Colton Myers,2020-03-09 16:53:14+00:00,"Propagated changes to contextvars ""upstream"" for SyncToAsync

Mirrors the downstream propagation of contextvars so that control flow is still respected.",False,48,47,1,0.5789473684210527,0.0,0.5789473684210527,2296,1178,1291,324,2.3333333333333335,77.87986763199008,16.647058823529413,23.41176470588235,112.08962484074723,1.6118705848363566,284.7604533620791,15.820025186782171,0.037363208280249076
180,b57e27f300f96c1393618417cc20a917d06e7312,Andrew Godwin,2020-03-10 15:17:09+00:00,Releasing 3.2.4,False,10,9,1,,,,2296,1178,1291,324,2.3333333333333335,77.87986763199008,16.647058823529413,23.41176470588235,112.08962484074723,1.6118705848363566,284.7604533620791,15.820025186782171,0.037363208280249076
181,43740dca083048f97c7aee43bd4b877eb3903dc3,Mariusz Felisiak,2020-03-11 17:10:03+00:00,"Copied method's __self__ in async_to_sync

This allows instance methods to work fully.",False,24,24,0,1.0,1.0,0.7333333333333333,2320,1193,1305,327,2.330508474576271,77.7929872861647,16.941176470588236,23.764705882352942,114.66084084876313,1.6419518856493647,303.61706555655906,16.86761475314217,0.03822028028292104
182,34ae066c9ca38cb8f9acb24ff5bbbd29062035f3,Andrew Godwin,2020-03-11 17:12:09+00:00,Releasing 3.2.5,False,8,7,1,,,,2320,1193,1305,327,2.330508474576271,77.7929872861647,16.941176470588236,23.764705882352942,114.66084084876313,1.6419518856493647,303.61706555655906,16.86761475314217,0.03822028028292104
183,ee9ec761b57d4259962b306e02dc9a9c2416c8f0,bjd183,2020-03-14 19:01:47+00:00,"Removed use of asyncio.Task.all_tasks() for Python 3.7+

This improves the earlier patch to use the right codepath dependent on the Python version (`asyncio.Task.all_tasks()` is deprecated in 3.7 and above)",False,5,4,1,0.0,0.0,0.0,2323,1196,1308,327,2.3389830508474576,77.74222024690914,17.11764705882353,23.941176470588236,115.73395198260827,1.671665309480436,310.7768105448556,17.265378363603087,0.03857798399420276
184,a0bbe901ffe19cd927219989b7125a920ea1e5c3,Andrew Godwin,2020-03-19 22:15:30+00:00,"New implementation of Local

This one stores on threads/tasks directly, much like the implementation in the standard library. This removes the need for garbage-collection of local storage, and should be more compatible with libraries that override threading, like gevent.

Fixes #144.",False,92,23,69,0.0,0.20833333333333334,0.0,2277,1167,1282,321,2.310344827586207,78.01682513940646,16.647058823529413,23.41176470588235,111.98703872360939,1.6144424203247734,297.60594933450034,16.533663851916682,0.037329012907869795
185,e2f04d9aaf20c3ea793de431f08360c3274996c1,Andrew Godwin,2020-03-23 21:39:18+00:00,Releasing 3.2.6,False,10,9,1,,,,2277,1167,1282,321,2.310344827586207,78.01682513940646,16.647058823529413,23.41176470588235,111.98703872360939,1.6144424203247734,297.60594933450034,16.533663851916682,0.037329012907869795
186,e4367c571fd1833bda0b7ff0bd68d924916352da,Andrew Godwin,2020-03-24 16:36:06+00:00,"Prevent accidental reuse of storage between Locals

Local was using attributes on Threads/Tasks to store its state,
separated by the id() of the Local object. When locals were deleted and
reused, new Locals would occasionally get the same ID as old ones and
wrongly inherit their storage.

This commit attacks this in two ways:
 - Randomised suffixes for the attribute names in addition to IDs
 - Deletion of storage dicts from all threads/tasks on Local deletion

Thanks to the CPython developers for having a test for this I could
borrow and use to find the problem!",False,94,80,14,1.0,1.0,0.9761904761904762,2343,1208,1327,328,2.3389830508474576,77.69865637667414,16.88235294117647,23.764705882352942,114.56275915623887,1.6128417800686712,301.51603601814725,16.750890889897068,0.038187586385412954
187,648dee0b7c7212129562ba60ca14752e04ccb03c,Andrew Godwin,2020-03-24 16:40:06+00:00,Releasing 3.2.7,False,9,8,1,,,,2343,1208,1327,328,2.3389830508474576,77.69865637667414,16.88235294117647,23.764705882352942,114.56275915623887,1.6128417800686712,301.51603601814725,16.750890889897068,0.038187586385412954
188,edd0570a4f6e46f0948afa5ef197a192bb95b7b7,Kevin Michel,2020-05-05 16:00:14+00:00,"Fix memory leak in Local

The _context_refs array of weak references was only freed
when the whole Local object was deleted: even when the
referenced objects weren't there anymore, the array of
empty refs was still there.

This is a problem in django where Local() objects are kept
at the global scope in multiple places and never cleared.",False,16,7,9,0.0,0.0,0.0,2341,1206,1325,328,2.330508474576271,77.72651398686685,16.88235294117647,23.764705882352942,114.56275915623887,1.6128417800686712,301.51603601814725,16.750890889897068,0.038187586385412954
189,723e5b97e836649df33e109f839a225c53110c63,Jon Dufresne,2020-05-25 18:39:03+00:00,"Remove executable bit from setup.py (#162)

The file has no shebang, so it should not be executed directly.",False,0,0,0,,,,2341,1206,1325,328,2.330508474576271,77.72651398686685,16.88235294117647,23.764705882352942,114.56275915623887,1.6128417800686712,301.51603601814725,16.750890889897068,0.038187586385412954
190,c2b9b021a8949c003eac4f509324fad7004eb1a4,Jon Dufresne,2020-05-30 15:41:41+00:00,"Move setup information to declarative setup.cfg (#161)

Use a declarative syntax to avoid mixing code and configuration.
Simplifies handling of long description and version by reducing some
boilerplate.

For details on this setuptools feature, see:
https://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

Django made the same move to setup.cfg in:
https://github.com/django/django/commit/85efc14a2edac532df1a9ad4dd9b6d4a4dcf583e

The name argument remains in setup.py for compatibility with GitHub's
dependency/security features. See:
https://github.com/github/semantic/issues/562

Additionally:

- Add 'Programming Language :: Python :: 3 :: Only' trove classifier.
- Remove unnecessary long_description_content_type from setup as
  reStructuredText is the default.
- Use HTTPs for GitHub URL in setup.
- Add project URLs to setup.",False,84,41,43,,,,2300,1202,1288,327,2.330508474576271,77.72651398686685,16.88235294117647,23.764705882352942,114.56275915623887,1.6128417800686712,301.51603601814725,16.750890889897068,0.038187586385412954
191,3a7ba9283267ebb73d0909f724735af796553e30,Markus Unterwaditzer,2020-06-15 16:25:05+00:00,"Propagated and restored contextvars in async_to_sync (#171)

sync_to_async already makes sure that contextvars are properly
propagated, but async_to_sync does not.

In Django 3.1, this fixes the behavior of got_request_exception which
would otherwise be called in a different context than before_request or
after_request under the following circumstances:

1. An ASGI request has been made
2. There is at least one sync middleware",False,83,64,19,1.0,1.0,1.0,2345,1232,1312,330,2.330578512396694,76.96785208823273,17.352941176470587,25.0,120.02224332829482,1.6951947212451417,325.2838025638641,18.071322364659117,0.04000741444276494
192,fd58c47c7b7b67a4419de08f900073333d01fc04,Andrew Godwin,2020-06-15 16:31:13+00:00,Releasing 3.2.8,False,9,8,1,,,,2345,1232,1312,330,2.330578512396694,76.96785208823273,17.352941176470587,25.0,120.02224332829482,1.6951947212451417,325.2838025638641,18.071322364659117,0.04000741444276494
193,256a1fde869878c2b7231d6761b68bf128fa58b0,Markus Unterwaditzer,2020-06-16 20:17:16+00:00,"Rewrote how context is propagated in AsyncToSync (#175)

This avoids exception-related errors in downstream users (e.g. Django)",False,33,15,18,0.0,0.0,0.0,2342,1227,1309,332,2.341666666666667,76.98689853657945,17.470588235294116,25.176470588235293,121.08980029153591,1.6822766128253033,328.76232131122,18.26457340617889,0.04036326676384531
194,eca0825c56350502954bab3ae07ce2e87c929eeb,Andrew Godwin,2020-06-16 20:18:34+00:00,Releasing 3.2.9,False,8,7,1,,,,2342,1227,1309,332,2.341666666666667,76.98689853657945,17.470588235294116,25.176470588235293,121.08980029153591,1.6822766128253033,328.76232131122,18.26457340617889,0.04036326676384531
195,3f3de1e1527a9f4d91306cda065012b87b1f7b4d,Markus Unterwaditzer,2020-06-18 18:33:57+00:00,Fixed a crash in Local.__del__ due to buggy WeakSet impl (#176),False,32,27,5,1.0,1.0,1.0,2364,1240,1322,334,2.3388429752066116,76.88799287395874,17.705882352941178,25.529411764705884,123.69918750806033,1.6809175786455934,332.72541672695087,18.484745373719495,0.041233062502686775
196,81205c788dd8f3e6a0fcb10ad3a97c6e7655743d,Andrew Godwin,2020-06-18 18:44:42+00:00,Releasing 3.2.10,False,8,7,1,,,,2364,1240,1322,334,2.3388429752066116,76.88799287395874,17.705882352941178,25.529411764705884,123.69918750806033,1.6809175786455934,332.72541672695087,18.484745373719495,0.041233062502686775
197,d464ce6412727f329a35db3538adb422e97ad874,子休,2020-07-14 16:40:49+00:00,"Fix WSGI adapter encoding

WSGI requires `latin-1` encoding for path strings, and ASGI operates with UTF-8. This fixes the adapter so it translates them correctly.",False,46,44,2,0.15625,1.0,1.0,2406,1259,1354,338,2.3278688524590163,76.65671838376785,18.294117647058822,26.41176470588235,129.06208817182778,1.6809175786455934,335.4068670588346,18.633714836601925,0.04302069605727593
198,4ab9d8ea79bc202aa52ab4e71f315a65d025a377,Andrew Godwin,2020-09-07 16:37:27+00:00,Fixed #193: Bumped docs version to 3.0,False,4,2,2,,,,2406,1259,1354,338,2.3278688524590163,76.65671838376785,18.294117647058822,26.41176470588235,129.06208817182778,1.6809175786455934,335.4068670588346,18.633714836601925,0.04302069605727593
199,66a6e68af258d626f5004ef305255b3154e552d4,Andrew Godwin,2020-09-11 17:26:04+00:00,"Fixed #194: Made async_to_sync work inside a fork

sync_to_async was keeping a threadlocal for the main event loop that was
invalid, but still present, after a process fork. This makes
async_to_sync check for the PID for that parent loop as well as the mere
presence of it, fixing this problem and letting it make a new loop in
the subprocess.",False,43,41,2,0.08333333333333333,0.08333333333333333,0.7083333333333334,2445,1283,1377,341,2.341463414634146,76.52750910872464,18.58823529411765,26.941176470588236,132.36269931450363,1.6763450737988483,348.8648085702981,19.381378253905456,0.0441208997715012
200,7becc9daca2628c46af1cb7e46b4c47c1ea27adf,Andrew Godwin,2020-09-11 17:43:12+00:00,"Making thread_sensitive=True the default

This makes thread_sensitive=True the default behaviour for SyncToAsync.

It's easy to run afoul of thread-sensitive code when dealing with
databases or frameworks like Django, and while the penalty for having
this on by default is just slightly worse performance, the penalty for
having it off is very confusing bugs all over the place - so, to keep
with the Django culture of safety first, it's best to default this on.

Additionally, this allows thread_sensitive to be passed into the
`sync_to_async` decorator, so if people are sure their code is safe and
want to run it in its own thread for performance reasons, they can use
`@sync_to_async(thread_sensitive=False)`.",False,62,44,18,1.0,1.0,1.0,2467,1299,1391,344,2.328,76.44694990363432,18.88235294117647,27.294117647058822,134.87489885580536,1.7090599585922244,366.65355538593866,20.369641965885485,0.0449582996186018
201,cc1877efc8bcf5b6e606eb5c50cfdcca1213c83a,Andrew Godwin,2020-09-11 17:49:50+00:00,Fix import sorting in previous commit.,False,5,2,3,,,,2466,1298,1390,344,2.328,76.44959835315346,18.88235294117647,27.294117647058822,134.87489885580536,1.7090599585922244,366.65355538593866,20.369641965885485,0.0449582996186018
202,cfd82e48a2059ff93ce20b94e1755c455e3c3d29,Andrew Godwin,2020-09-16 21:35:02+00:00,Fix linting with unused import removal,False,2,1,1,,,,2466,1298,1390,344,2.328,76.44959835315346,18.88235294117647,27.294117647058822,134.87489885580536,1.7090599585922244,366.65355538593866,20.369641965885485,0.0449582996186018
203,03b0dbb518e3bbf6c4083ae1e51bd6e2062fa503,kmichel,2020-09-16 23:21:38+00:00,"Clamped WsgiToAsgi response body using Content-Length value

This makes it adhere correctly to this part of the WSGI spec. Fixes #195.",False,143,143,0,0.02586206896551724,0.6293103448275862,0.9655172413793104,2609,1374,1507,348,2.34375,75.57658628694684,20.823529411764707,30.294117647058822,154.92724466174798,1.8367549279826956,448.1370663156041,24.896503684200226,0.051642414887249334
204,7dba5ff61313dfd1535de200590b9155abde20f0,Andrew Godwin,2020-10-09 16:27:33+00:00,Releasing 3.3.0,False,10,9,1,,,,2609,1374,1507,348,2.34375,75.57658628694684,20.823529411764707,30.294117647058822,154.92724466174798,1.8367549279826956,448.1370663156041,24.896503684200226,0.051642414887249334
205,24ff4dc9ed1c0838df302f812cbe8b4a8962ca32,Luis Saavedra,2020-11-09 15:22:34+00:00,"Update StatelessServer to use ASGI v3 application.  (#211)

Adjusted StatelessServer to use ASGI 3 single-callable style",False,16,15,1,0.8571428571428571,1.0,0.5714285714285714,2623,1382,1515,348,2.3333333333333335,76.93493651908628,19.666666666666668,28.61111111111111,146.3201755138731,1.7347129875392124,423.24056263140386,23.513364590633547,0.0487733918379577
206,46b769c39e57eac50e6df44eef1636a4ca7496dc,Carlton Gibson,2020-11-09 15:30:01+00:00,"Use GitHub actions

This is intended to replace Travis CI",False,136,86,50,,,,2630,1382,1515,348,2.3333333333333335,76.92958047830686,19.72222222222222,28.61111111111111,146.4548989341964,1.770066522892748,426.0735918714416,23.670755103968975,0.04881829964473213
207,318c9322d4f4dce3d0f501fed1bb28ebcc37d510,Carlton Gibson,2020-11-09 17:08:22+00:00,Fixed typo in test case docstring,False,2,1,1,,,,2630,1382,1515,348,2.3333333333333335,76.92958047830686,19.72222222222222,28.61111111111111,146.4548989341964,1.770066522892748,426.0735918714416,23.670755103968975,0.04881829964473213
208,3a0bdfbc206322b82d2aaf77852f7b6bc10c7385,Alejandro R. Sedeño,2020-11-19 17:04:14+00:00,"Stopped spinning in CurrentThreadExecutor.run_until_future()

Rather that spinning on
- check for work, non-blocking
- check the future
- sleep briefly

We can register a done callback on the future, which will be called
with the future itself as an arugment. Registering our task queue's
`put()` method lets us use the future itself as a sentinal value.

Now we can use `queue.get()` in blocking fashion. If we find the job
is the future we're waiting on, we're done getting tasks and we
return, otherwise we run the job and go back to blocking on
`queue.get()` for more tasks.

This noticeably cuts down on CPU usage in run_until_future().",False,21,8,13,1.0,1.0,0.0,2625,1378,1511,347,2.317829457364341,76.91536662013469,19.88888888888889,28.77777777777778,147.2356627011414,1.7978443006705254,428.30178607199827,23.79454367066657,0.0490785542337138
209,6ac90bce27c83ec037d5375bc6f4f3ad18ec5097,Allan Feldman,2021-01-12 17:06:39+00:00,"Added support for context-specific thread pool executors

Prior to this commit, there was only 1 global per-process
ThreadPoolExecutor used when thread_sensitive=True.

This results in tasks mixing sync/async effectively blocking once they
have contention for the sync thread.

This commit allows for the use of a task-specific thread executor. The
result is that async/sync mixed mode call chains will use exactly 2
threads in most cases:

* 1 asyncio thread (running the event loop)
* 1 sync thread (running any sync tasks)

This now guarantees that a request chain, for example, will re-use the
same sync thread.",False,100,93,7,0.8444444444444444,0.1111111111111111,0.5555555555555556,2706,1421,1558,357,2.3206106870229006,76.73624012092631,20.444444444444443,29.61111111111111,153.13507143761322,1.7893137752227066,447.0266433462659,24.834813519236995,0.05104502381253774
210,cf99cb74f90f179373d09930ca89cdb23098d5a4,Phil Jones,2021-01-17 00:59:39+00:00,"Added typing for ASGI Scopes, messages, and frameworks

These are useful for users of asgiref to type check their ASGI
usage. It also serves as the reference typing for the ASGI
Specification.

This does not include typing for the actual ASGI functions (yet).",False,209,209,0,1.0,1.0,0.3333333333333333,2910,1605,1702,358,2.1082802547770703,77.96064853561442,19.36842105263158,28.05263157894737,145.0753308356336,1.695139366000459,423.4989252754098,23.5277180708561,0.048358443611877855
211,33be2dff4b0f39d6547cd4701348541c6b578df1,Thomas Grainger,2021-01-23 17:44:45+00:00,Fixed type annotations when run with mypy on Python 3.6,False,11,6,5,,,,2911,1606,1703,357,2.1082802547770703,75.07984015894544,19.526315789473685,28.210526315789473,145.32558807258957,1.7214551554741433,423.6240538938878,23.534669660771545,0.04844186269086318
212,2b6174c517e1b0f46b456d2fa5984ef2e1801684,Allan Feldman,2021-02-01 18:48:28+00:00,"Internalized thread sensitive context management in asgiref/sync.py

Rather than using an external context management function, this commit
updates the thread_sensitive mode to reference an internal contextvar.

This approach mainly allows for the thread executor to be shut down when
the context exits, rather than relying on the thread pool shutting down
when going out of scope.

This approach also has other advantages:

* Context variable management cannot be broken by omitting the
  current_context_func arg

* This approach opens the door to more complex management techniques
  such as enforcing a thread pool limit.",False,171,120,51,0.9428571428571428,0.9428571428571428,1.0,2985,1640,1744,360,2.090909090909091,74.63275154397402,19.894736842105264,28.789473684210527,148.65615340821293,1.7497952364458031,436.3342482452191,24.240791569178842,0.04955205113607099
213,d35966bf3058b358a3c84da129f9aa2d6ee62a13,Thomas Grainger,2021-02-04 18:21:36+00:00,"Typechecked annotations (and droped support for python 3.5)

Also adds mypy to enforce typing",False,116,89,27,1.0,1.0,1.0,2987,1648,1747,357,2.090909090909091,74.53682671243747,20.05263157894737,29.105263157894736,150.61279085790196,1.749679562645919,445.60234595008575,24.755685886115874,0.05020426361930066
214,3b50d890074779a99e34f65b381508de4861a767,Andrew Godwin,2021-02-04 18:31:20+00:00,Releasing 3.3.1,False,2,1,1,,,,2987,1648,1747,357,2.090909090909091,74.53682671243747,20.05263157894737,29.105263157894736,150.61279085790196,1.749679562645919,445.60234595008575,24.755685886115874,0.05020426361930066
215,cc8f04c43f174c7ece2eb3f9591fdcb11e01a208,Andrew Godwin,2021-02-04 18:31:43+00:00,Fix typing error with contextvars,False,4,2,2,,,,2987,1649,1747,357,2.090909090909091,74.53482021090299,20.05263157894737,29.105263157894736,150.61279085790196,1.749679562645919,445.60234595008575,24.755685886115874,0.05020426361930066
216,e15ad732b43906a4259f44f9c78fcbab5d25ed2f,Andrew Godwin,2021-02-04 18:39:54+00:00,Try even more serious way to hide contextvars from 3.6,False,9,5,4,,,,2988,1649,1748,357,2.090909090909091,74.52026695482475,20.105263157894736,29.210526315789473,151.28181990285367,1.747086874027822,448.4238284815408,24.912434915641153,0.05042727330095124
217,9734d478f19734ae9168490b81dcb29ffd29ce6a,Andrew Godwin,2021-02-04 18:43:42+00:00,Fix lint error,False,2,1,1,,,,2988,1649,1748,357,2.090909090909091,74.52026695482475,20.105263157894736,29.210526315789473,151.28181990285367,1.747086874027822,448.4238284815408,24.912434915641153,0.05042727330095124
218,7aa8d7e16c6901d42e9efb50f155515b6f049e5f,Thomas Grainger,2021-02-04 19:06:22+00:00,Defined SyncToAsync.thread_sensitive_context type,False,10,6,4,,,,2990,1653,1750,357,2.090909090909091,74.51508370652728,20.105263157894736,29.263157894736842,151.5560016589394,1.7543464021584938,452.2056458068612,25.12253587815896,0.05051866721964647
219,95b8a15ed54b60264590579952b5261cad0f040b,Thomas Grainger,2021-02-09 00:50:18+00:00,"Add pyupgrade pre-commit config

Also configure it to run as part of tox checks, add some Black config",False,115,73,42,,,,2989,1653,1752,356,2.090909090909091,74.62169572502059,19.736842105263158,28.789473684210527,149.05532493267066,1.728030612684809,445.8835166961633,24.771306483120185,0.04968510831089022
220,6469d0f3486dae0b6229e12d32ae6695600ed3ec,Phil Jones,2021-02-09 00:50:53+00:00,"Added reason to the WebSocket close (#235)

This is allowed as per RFC 6455 but previously not supported in
ASGI. This allows servers/applications to use the reason if desired.",False,10,8,2,,,,2990,1655,1753,356,2.090909090909091,74.61633422219586,19.736842105263158,28.789473684210527,149.05532493267066,1.728030612684809,445.8835166961633,24.771306483120185,0.04968510831089022
221,7921bf04dfa71cebc9294e8f06936cdb63166674,Adam Johnson,2021-02-12 04:59:33+00:00,Added type checks for functions passed to async_to_sync/sync_to_async,False,65,65,0,0.9411764705882353,0.9411764705882353,0.8823529411764706,3049,1684,1786,356,2.088757396449704,74.44369395963191,20.57894736842105,30.05263157894737,158.12243896462755,1.746178147163894,491.71743841643087,27.317635467579493,0.052707479654875856
222,a528275e424eb31067250c14be2a88ebf797ea52,Andrew Godwin,2021-02-20 23:55:16+00:00,Added test to ensure async_to_sync works in except,False,18,18,0,1.0,1.0,1.0,3067,1693,1794,358,2.088235294117647,74.41287862575074,20.68421052631579,30.210526315789473,159.31282291481432,1.7460331232953823,495.3051139428876,27.51695077460486,0.053104274304938116
223,b3257f6ca844ddb303f4d10f5dd66d86ecf43200,Joshua Haertel,2021-03-13 18:22:51+00:00,"Add parameterization to executor

Allows users to pass in an optional executor to SyncToAsync to override the default.",False,68,62,6,0.0,0.5476190476190477,0.35714285714285715,3123,1715,1834,360,2.0994152046783627,74.30431030483159,21.263157894736842,31.0,165.27560829648723,1.7654456586718528,535.8087821470817,29.76715456372677,0.05509186943216242
224,95e654b1a559ce58f6b0a34d534c3b7f3f3f0005,Andrew Godwin,2021-04-05 16:50:29+00:00,"Fixed #247: CancelledError was over-propagating

A change during our linter update resulted in SyncToAsync's exception
handling changing from `except:` to `except Exception:`, which actually
excludes CancelledError as it inherits from `BaseException`, not
`Exception`. This fixes it so that raising CancelledError does not
mysteriously propagate to all future calls.",False,2,1,1,,,,3123,1715,1834,360,2.0994152046783627,74.30431030483159,21.263157894736842,31.0,165.27560829648723,1.7654456586718528,535.8087821470817,29.76715456372677,0.05509186943216242
225,505b55dec078fc21b1a44030855249efa3b7e75b,Andrew Godwin,2021-04-05 16:54:56+00:00,"Move more things to BaseException

I don't see a reason these need to be Exception rather than
BaseException, so lowering them down to check the base class instead.",False,4,2,2,,,,3123,1715,1834,360,2.0994152046783627,74.30431030483159,21.263157894736842,31.0,165.27560829648723,1.7654456586718528,535.8087821470817,29.76715456372677,0.05509186943216242
226,5f2cf5ca988fa18b57076a1f9bfa2469ebc6be2f,Andrew Godwin,2021-04-05 16:58:23+00:00,Releasing 3.3.2,False,16,13,3,,,,3123,1715,1834,360,2.0994152046783627,74.30431030483159,21.263157894736842,31.0,165.27560829648723,1.7654456586718528,535.8087821470817,29.76715456372677,0.05509186943216242
227,bfc85d6e19670320a6cc1cfaa320887fd0b48213,Eugene,2021-04-06 15:33:37+00:00,"Fixed type checks for functions passed to async_to_sync/sync_to_async

On Python < 3.8 a functool.partial is not detected as async function,
which is due to a bug in inspect module, see https://bugs.python.org/issue33261

This commit adds a proper type check for earlier Python versions and fixes #251.",False,60,58,2,1.0,1.0,1.0,3179,1747,1866,365,2.0977011494252875,74.19010873233776,21.57894736842105,31.473684210526315,168.8484871883273,1.7620819801729903,549.4464574964699,30.524803194248317,0.05628282906277578
228,07bffa4d017629ca472f67821a7984930aa6e08b,Andrew Godwin,2021-04-06 15:39:00+00:00,Releasing 3.3.3,False,9,8,1,,,,3179,1747,1866,365,2.0977011494252875,74.19010873233776,21.57894736842105,31.473684210526315,168.8484871883273,1.7620819801729903,549.4464574964699,30.524803194248317,0.05628282906277578
229,d0ce78b1cd5640d902c6d9123fcddade63912962,Andrew Godwin,2021-04-06 18:26:38+00:00,"Switch async_to_sync type error to a warning

Detecting if a function is async in Python has a lot of false
negatives, so this is a lot safer while async code we call all makes
sure it has the coroutinefunction flag set.",False,17,10,7,,,,3182,1748,1867,367,2.0977011494252875,74.19139551097456,21.57894736842105,31.473684210526315,168.8484871883273,1.7620819801729903,549.4464574964699,30.524803194248317,0.05628282906277578
230,4b10ca000ffdde78266f054d226c7a2892ee01b4,Andrew Godwin,2021-04-06 18:28:23+00:00,Releasing 3.3.4,False,9,8,1,,,,3182,1748,1867,367,2.0977011494252875,74.19139551097456,21.57894736842105,31.473684210526315,168.8484871883273,1.7620819801729903,549.4464574964699,30.524803194248317,0.05628282906277578
231,83d482340b2be2ba5bb5914dce85e260d05319ae,vaartis,2021-05-22 04:02:22+00:00,"Fix deprecation warnings for python 3.10

asyncio.get_event_loop, asyncio.ensure_future, asyncio.wait and asyncio.gather all have warnings in 3.10 to use them in ways that have been possible since 3.7, so this updates the codebase to use the new ways for 3.7+ and retain a compatibility layer for 3.6 for the time being.",False,61,45,16,0.45454545454545453,0.9090909090909091,0.9090909090909091,3211,1763,1889,370,2.103448275862069,73.73255745317984,21.894736842105264,31.789473684210527,170.68864369660673,1.8152586502717123,575.9102208965865,31.995012272032586,0.0568962145655356
232,d1ee83f29dd25831e78ddd20f2bd0779e22b896e,Adam Johnson,2021-05-22 17:19:41+00:00,"Fixed type hints for sync_to_async()

Use `@overload` to specify the two different sets of types for `sync_to_async()`. This prevents any errors in the example shown in #254.",False,24,21,3,1.0,1.0,0.5,3229,1769,1903,370,2.090909090909091,73.71034272863916,21.894736842105264,31.789473684210527,170.68864369660673,1.8152586502717123,575.9102208965865,31.995012272032586,0.0568962145655356
233,cd15242b12c85c529ef1cb0811ef5d62768b85f6,euri10,2021-05-30 17:19:25+00:00,Improved coverage on same-header keys,False,7,5,2,0.0,1.0,1.0,3232,1769,1906,370,2.090909090909091,73.70482598461736,21.894736842105264,31.789473684210527,170.68864369660673,1.8152586502717123,575.9102208965865,31.995012272032586,0.0568962145655356
234,13d0b82a505a753ef116e11b62a6dfcae6a80987,Samantha Hughes,2021-05-31 06:00:26+00:00,Raise an error on thread-sensitive deadlocks,False,42,42,0,0.7037037037037037,0.7037037037037037,0.7037037037037037,3274,1797,1936,374,2.1129943502824857,73.59904215935761,22.05263157894737,32.10526315789474,172.86186591496056,1.8163864698205845,588.8221802607991,32.71234334782218,0.05762062197165353
235,7c24756d80b258a30947a3ec184942940d8e7eb5,Marcelo Trylesinski,2021-06-26 16:43:35+00:00,Fixed extensions type on HTTPScope and WebsocketScope,False,4,2,2,,,,3274,1797,1936,374,2.1129943502824857,73.59904215935761,22.05263157894737,32.10526315789474,172.86186591496056,1.8163864698205845,588.8221802607991,32.71234334782218,0.05762062197165353
236,2843f67aab31e6c708c114630a446ad795014a0a,Marcelo Trylesinski,2021-06-27 20:19:18+00:00,"Renamed Websocket* types to WebSocket*

This matches our usage of the noun elsewhere in specs, and the official spelling.",False,193,172,21,1.0,1.0,1.0,3425,1853,2033,375,2.1021505376344085,73.43812835360829,20.714285714285715,29.904761904761905,158.97025963734526,1.7386353774567194,535.3153059502469,29.739739219458155,0.052990086545781766
237,97a44dbb45141dc6760e150a6cb33a9da3008908,Andrew Godwin,2021-06-27 20:25:07+00:00,Fixed mis-matching isort and black configuration,False,18,15,3,,,,3436,1853,2044,375,2.1021505376344085,73.43812835360829,20.714285714285715,29.904761904761905,158.97025963734526,1.7386353774567194,535.3153059502469,29.739739219458155,0.052990086545781766
238,b1085d87568db4408dc44eab1ec791d9e69be43a,Andrew Godwin,2021-06-27 20:33:37+00:00,Releasing 3.4.0,False,23,22,1,,,,3436,1853,2044,375,2.1021505376344085,73.43812835360829,20.714285714285715,29.904761904761905,158.97025963734526,1.7386353774567194,535.3153059502469,29.739739219458155,0.052990086545781766
239,e8797d47f4006e4e817fda507ec1eacfed4faf60,Andrew Godwin,2021-06-30 19:02:18+00:00,Fix deadlock detection failing during exceptions,False,61,43,18,0.8823529411764706,0.8823529411764706,0.8823529411764706,3461,1870,2060,375,2.0962566844919786,73.41377581378921,20.714285714285715,29.904761904761905,158.97025963734526,1.7386353774567194,535.3153059502469,29.739739219458155,0.052990086545781766
240,c8975426fb9a9e0a431b4d93b53e70c3316e8e0e,Andrew Godwin,2021-07-01 16:16:44+00:00,Releasing 3.4.1,False,9,8,1,,,,3461,1870,2060,375,2.0962566844919786,73.41377581378921,20.714285714285715,29.904761904761905,158.97025963734526,1.7386353774567194,535.3153059502469,29.739739219458155,0.052990086545781766
241,177777accd219fca99823f78454346c4abf28547,Alejandro R. Sedeño,2021-07-15 16:37:01+00:00,Fixed `async_to_async` typo,False,4,2,2,,,,3461,1870,2060,375,2.0962566844919786,73.41377581378921,20.714285714285715,29.904761904761905,158.97025963734526,1.7386353774567194,535.3153059502469,29.739739219458155,0.052990086545781766
242,213ee0fb5727cbd658e1a3bb305c31c7c677c771,Alejandro R. Sedeño,2021-07-15 16:42:35+00:00,"New sync_to_async tests, one of which triggers a deadlock

In these tests, we are waiting on a mulitprocessing.Event to be set,
with the wait in `sync_to_async()`.

The event is being set in an `asyncio.Task` that sleeps and then calls
set, also in `sync_to_async()`. This allows us to kick off the process
that would `set()` the event in advance of `wait()`ing for the event,
as the event might be triggered by some consumer event.

If both `sync_to_async()` calls are `thread_sensitive=True`, then
before `await sync_to_async(event.set)()` can run `event.set()`,
`sync_to_async(event.wait)()` has consumed the thread.

asgiref.timeout is used to get us out of the deadlock so the tests can
run to completion, and in the case of Timeout we `set()` the event to
release the `wait()`.

Finally, we await on the setting Task regardless of whether or not
there was a timeout.",False,73,73,0,1.0,1.0,1.0,3534,1916,2100,385,2.0952380952380953,73.32358602914861,21.095238095238095,30.476190476190474,163.46176178128823,1.7381919584188,553.3457815130474,30.741432306280412,0.05448725392709609
243,f53fbef809e6b75076e03595efa865db04dbeaeb,Keryn Knight,2021-08-16 15:21:17+00:00,"Decide current_task method to use at import time

Saves 1 hasattr call per usage of Local.__getattr__",False,10,4,6,0.0,0.0,0.0,3532,1915,2099,383,2.0899470899470898,73.32821052806382,21.095238095238095,30.476190476190474,163.46176178128823,1.7381919584188,553.3457815130474,30.741432306280412,0.05448725392709609
244,b3a65e34e9f445a1ccc234282deedafe4b8b5de2,Keryn Knight,2021-08-18 14:12:01+00:00,Removed class variable which has been unused since a0bbe90,False,2,0,2,,,,3530,1914,2098,382,2.0899470899470898,73.3332725699864,21.095238095238095,30.476190476190474,163.46176178128823,1.7381919584188,553.3457815130474,30.741432306280412,0.05448725392709609
245,dfe87b2633d111f4f67c2cdb29a8c1ebe2eb8dae,Andrew Godwin,2021-08-18 14:20:12+00:00,Fixed #292: Use get_event_loop in class-level code,False,4,3,1,,,,3532,1914,2098,384,2.0899470899470898,73.33734510395577,21.095238095238095,30.476190476190474,163.46176178128823,1.7381919584188,553.3457815130474,30.741432306280412,0.05448725392709609
246,c758984f4ab4864ac5787ef90d03b3589b2bcb90,Keryn Knight,2021-08-28 20:40:08+00:00,"Move current_task import choice to module definition time

Saves 1 hasattr call per usage of asgiref.timeout.current_task, and the same on Local.__getattr__/__setattr__ (which depends indirectly on SyncToAsync.get_current_task)

Note that the module level variable used in the timeout module has to be aliased to another name, because `current_task` is already in use by the public function name.",False,15,6,9,0.0,0.0,0.0,3529,1911,2095,384,2.0846560846560847,73.3749209936801,20.952380952380953,30.333333333333332,162.44648364191576,1.7116351818620235,543.1082718107788,30.17268176726549,0.054148827880638586
247,4364f9b4bb052d9ec54b806867fd859b07c39186,bright2227,2021-09-17 18:58:09+00:00,"Changed how StatelessServer handles event loops

Co-authored-by: bright.hsu <bright.hsu@tdsc.com.tw>",False,154,146,8,1.0,1.0,0.7849462365591398,3667,2007,2191,384,2.0436893203883497,71.18736299118896,21.428571428571427,31.047619047619047,164.81928942397815,1.8136759981885542,548.1928556294839,30.455158646082438,0.054939763141326044
248,6689c0a1e820a5c32532f069e945da8230d808ad,Carlton Gibson,2021-10-14 07:21:05+00:00,"Added stacklevel to warning in AsyncToSync.

Outputs the line from the calling code when printing the warning, which makes it
easier to track down the problem without re-running with `-Werror`.",False,4,3,1,0.0,0.0,0.0,3669,2007,2193,384,2.0436893203883497,71.18585671685602,21.428571428571427,31.047619047619047,164.81928942397815,1.8136759981885542,548.1928556294839,30.455158646082438,0.054939763141326044
249,02fecb6046bb5ec0dbbad00ffcd2043e893fcea5,Andrew Chen Wang,2021-12-27 17:46:22+00:00,"Drop Python 3.6 (#307)

Python 3.6 is now EOL, and we had to do a lot of work to support it, so this cleans a lot up.",False,244,55,189,0.2727272727272727,0.2727272727272727,0.3181818181818182,3537,1923,2121,379,2.005050505050505,71.22827035847986,21.65,30.65,162.09891324190127,1.8047362459744296,503.566420829946,27.975912268330337,0.05403297108063376
250,2eda55127a82618f83bb54788fecd239babb86ce,Mariusz Felisiak,2022-01-14 19:37:52+00:00,"Added testing for Python 3.10.

This also fixes deprecation warnings in tests/test_server.py.",False,12,8,4,1.0,1.0,1.0,3539,1925,2123,379,2.005050505050505,71.21334405893147,21.65,30.65,162.09891324190127,1.8047362459744296,503.566420829946,27.975912268330337,0.05403297108063376
251,8b615134bd481c4262356ad3194fbeff9240d0d3,Andrew Godwin,2022-01-22 16:54:07+00:00,"Releasing 3.5.0

(Includes scheduled removal of the old Websocket types)",False,76,14,62,0.0,0.0,0.0,3479,1899,2074,379,2.015463917525773,71.89290491567237,22.105263157894736,31.473684210526315,168.0385869652731,1.8207749957625574,527.3529400184212,29.29738555657896,0.05601286232175771
252,464553a72214ccd60bd4fa5be5ddafd6dea002e1,Carl Friedrich Bolz-Tereick,2022-02-05 18:08:45+00:00,"Rewrote multiprocessing test to use no local functions

Makes it pass when when multiprocessing uses spawn to start processes (like under Mac OS).",False,41,21,20,0.0,0.0,0.0,3480,1899,2074,379,2.00507614213198,71.88582581441045,22.105263157894736,31.473684210526315,168.0385869652731,1.8207749957625574,527.3529400184212,29.29738555657896,0.05601286232175771
253,d451a724c93043b623e83e7f86743bbcd9a05c45,Rafael Fernández López,2022-04-01 14:47:46+00:00,"Remove `SOCK_NONBLOCK` from socket creation on tests (#321)

This fixes running tests on Mac OS X, which lacks the `SOCK_NONBLOCK` socket flag creation.",False,8,5,3,1.0,1.0,0.5,3482,1901,2076,379,2.00507614213198,71.97915022766784,21.94736842105263,31.157894736842106,166.74581185344195,1.771150935612182,523.328896490285,29.073827582793623,0.055581937284480645
254,add576498d1e0a7eea8d70b08418d77fecd92f56,Anders Kaseorg,2022-04-19 04:49:36+00:00,"Preserve CurrentThreadExecutor across create_task (#320)

Fixes #214.",False,20,19,1,0.5,0.5,0.5,3500,1915,2089,382,2.015228426395939,71.91004481547934,22.210526315789473,31.63157894736842,170.065584911312,1.7760030605710075,540.0264980622618,30.0014721145701,0.05668852830377066
255,12f6355d50c271aab821a37dbf2cde5863cc2643,Andrew Godwin,2022-04-30 21:16:11+00:00,Releasing 3.5.1,False,9,8,1,,,,3500,1915,2089,382,2.015228426395939,71.91004481547934,22.210526315789473,31.63157894736842,170.065584911312,1.7760030605710075,540.0264980622618,30.0014721145701,0.05668852830377066
256,ab7379a59f9b8a43c4239553bcb35f98a83f4903,Petter Friberg,2022-05-10 14:59:51+00:00,"Don't warn 'non-async-marked callable' for async callable instance (#325)

Look for `__call__` methods on the awaitable as well as checking it directly.",False,31,30,1,0.7368421052631579,0.7368421052631579,0.7368421052631579,3529,1930,2108,383,2.0202020202020203,71.84384179938021,22.57894736842105,32.21052631578947,174.39096821680198,1.7745602896920074,558.3619630975429,31.020109060974608,0.058130322738934
257,df1e582f530d9c9b49e54cef37079497c54ec504,Petter Friberg,2022-05-10 19:32:22+00:00,"Disallow async callable class instances as callable for `sync.SyncToAsync` (#328)

i.e. passing an instance defining `async def __call__(...)` to `sync.SyncToAsync` will raise a `TypeError`",False,18,17,1,0.6923076923076923,0.6923076923076923,0.6923076923076923,3545,1937,2121,383,2.020100502512563,71.81784239569818,22.63157894736842,32.26315789473684,174.7965752419049,1.7741847472418015,560.1575078093525,31.119861544964035,0.05826552508063496
258,67b2e812632e7771d560c59e48e6c6fc68ff402d,Andrew Godwin,2022-05-16 20:33:08+00:00,Releasing 3.5.2,False,11,10,1,,,,3545,1937,2121,383,2.020100502512563,71.81784239569818,22.63157894736842,32.26315789473684,174.7965752419049,1.7741847472418015,560.1575078093525,31.119861544964035,0.05826552508063496
259,22c6767e753007c83a85962e7f460aa6358b2398,Léni,2022-07-01 17:10:41+00:00,Use update_wrapper in SyncToAsync.__get__ (#335),False,4,3,1,1.0,1.0,0.0,3546,1938,2122,383,2.020100502512563,71.8152049679237,22.63157894736842,32.26315789473684,174.7965752419049,1.7741847472418015,560.1575078093525,31.119861544964035,0.05826552508063496
260,6a0cae060c0d96d7bf0d5a3dc38dbde090ab3e1a,Carlton Gibson,2022-07-13 16:18:33+00:00,Removed support for ASGI_THREADS environment variable,False,19,10,9,,,,3537,1935,2117,380,2.020100502512563,71.83399388816879,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
261,3b5aaff55ca8f5d1c6ea5cd010a88ad34041dada,Marcelo Trylesinski,2022-09-25 09:19:54+00:00,Added HTTP Trailers extension,False,71,65,6,,,,3545,1944,2123,380,2.015,71.81067777220356,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
262,9acb1a2ee6ad89408f1f71c812e397a72344d072,Marcelo Trylesinski,2022-11-06 15:47:10+00:00,Added missing `HTTPResponseTrailersEvent` to `ASGISendEvent`,False,1,1,0,,,,3546,1944,2124,380,2.015,71.81067777220356,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
263,8b76e05b80a944aa9f3527072120db635ef9d31e,Adrian Garcia Badaracco,2022-11-14 17:35:16+00:00,Tweak conf.py to fix Sphinx warnings (#355),False,4,2,2,,,,3546,1945,2124,380,2.015,71.81067777220356,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
264,467c154f9c18b3132baf0c4bd5e0cb3cc0355a33,David Smith,2022-12-14 20:05:13+00:00,Updated pre-commit versions and fixed linting errors.,False,19,10,9,,,,3547,1946,2125,381,2.015,71.81725420874292,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
265,36f37c9ee5bf2d1f240db23643734f1225a0b5fd,Carlton Gibson,2022-12-14 20:09:46+00:00,Added coroutine detection shims for Python 3.12 (#360),False,46,37,9,1.0,1.0,1.0,3575,1957,2141,387,2.014851485148515,71.78343183671412,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
266,ea7901655444df6e3bd2ca487a0937046d97939a,Carlton Gibson,2022-12-15 18:21:44+00:00,"Updated timeout helper to use get_running_loop(). (#337)

* Update timeout helper to use get_running_loop().
* Deprecated loop argument to timeout().",False,12,11,1,0.0,1.0,1.0,3580,1960,2146,387,2.014851485148515,71.73282320111497,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
267,79a1d01565533d79dd44ff92eabcd3a91354c20d,Carlton Gibson,2022-12-20 09:02:26+00:00,Releasing 3.6.0.,False,4,2,2,,,,3580,1960,2146,387,2.014851485148515,71.73282320111497,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
268,36022636d3390c1c1cbb952336a34d652a6bfb26,Marcelo Trylesinski,2022-12-29 17:38:18+00:00,Add Debug extension (#365),False,33,33,0,,,,3585,1965,2149,387,2.0098522167487687,71.72032593142139,22.526315789473685,32.10526315789474,173.68771107110967,1.7749537151160324,555.1327332519938,30.840707402888555,0.0578959036903699
269,730d865506adf565d53e5a67cceb9f796dc472ba,Carlton Gibson,2023-01-12 17:30:53+00:00,"Simplified contextvars usage.

Contextvars are unconditionally available since dropping Python 3.6
support in 02fecb6046bb5ec0dbbad00ffcd2043e893fcea5.",False,17,6,11,1.0,1.0,1.0,3580,1964,2145,387,1.9852216748768472,71.76067605583701,22.36842105263158,31.789473684210527,171.60180718206487,1.7701821708708039,543.3701673205709,30.187231517809504,0.05720060239402164
270,ec63b100f294bf2080072404c4f137f444fd119a,Adrian Garcia Badaracco,2023-03-03 22:20:50+00:00,"Add extensions[""lifespan.state""] (#354)",False,61,59,2,,,,3598,1974,2162,387,1.9852216748768472,71.58134162250431,22.42105263157895,31.94736842105263,171.98312889247734,1.7789541006953655,543.6660913336718,30.203671740759557,0.057327709630825785
271,be6635e0e79009e55cf7a999614186f061f9f09b,Jon Janzen,2023-03-31 19:38:42+00:00,Added __traceback_hide__ to skip frames in tracebacks (#383),False,10,10,0,0.2,0.2,0.2,3608,1979,2167,392,1.9852216748768472,71.57340577307525,22.42105263157895,31.94736842105263,171.98312889247734,1.7789541006953655,543.6660913336718,30.203671740759557,0.057327709630825785
272,ec4b25d4300536b0b2340091363fba9b6b5e1cde,Jon Janzen,2023-03-31 19:38:56+00:00,Removed extra call to asyncio.wait_for (#382),False,3,1,2,1.0,1.0,1.0,3607,1978,2166,392,1.9852216748768472,71.57591209679158,22.42105263157895,31.94736842105263,171.98312889247734,1.7789541006953655,543.6660913336718,30.203671740759557,0.057327709630825785
273,e22d765397fe24497c32224b99ac244f1f79db99,Taha Jahangir,2023-04-30 16:43:32+00:00,Better garbage-collection on exceptions in sync_to_async (#386),False,3,3,0,0.0,0.0,0.0,3610,1979,2169,393,1.9852216748768472,71.5737288005925,22.42105263157895,31.94736842105263,171.98312889247734,1.7789541006953655,543.6660913336718,30.203671740759557,0.057327709630825785
274,72f45c5feb158f71c5b5fb337e323c7bacd6c7b3,Thiago Bellini Ribeiro,2023-05-18 23:32:06+00:00,Improve sync.py typing and utilities performance (#390),False,199,137,62,0.0,0.5121951219512195,0.0,3685,2003,2232,401,1.9655172413793103,71.22758010218777,22.736842105263158,32.526315789473685,175.25096231157224,1.8162306880361379,561.5857420883468,31.199207893797052,0.05841698743719075
275,89cfe10fd58eca207c3f9db2bbfee5d7b8bd1108,Andrew Godwin,2023-05-23 16:48:47+00:00,Releasing 3.7.0,False,18,17,1,,,,3685,2003,2232,401,1.9655172413793103,71.22758010218777,22.736842105263158,32.526315789473685,175.25096231157224,1.8162306880361379,561.5857420883468,31.199207893797052,0.05841698743719075
276,085ba6a1ce520468e00be2a7c03aac0901068749,Andrew Godwin,2023-05-24 05:23:47+00:00,Releasing 3.7.1,False,9,8,1,,,,3685,2003,2232,401,1.9655172413793103,71.22758010218777,22.736842105263158,32.526315789473685,175.25096231157224,1.8162306880361379,561.5857420883468,31.199207893797052,0.05841698743719075
277,09a234e109e7d60a9ce62764b24ff83470d3d2ff,Thiago Bellini Ribeiro,2023-05-27 17:19:48+00:00,"Type sync_to_async/async_to_async as returning callables

Fix #394",False,60,55,5,1.0,1.0,0.2727272727272727,3735,2013,2279,400,1.9563106796116505,71.1560504358757,22.842105263157894,32.68421052631579,176.35949737157586,1.8151559649266056,566.6135970032758,31.478533166848663,0.058786499123858624
278,a90aeb93c424c471400118879cb652cddc1726a8,Andrew Godwin,2023-05-27 17:20:46+00:00,Releasing 3.7.2,False,8,7,1,,,,3735,2013,2279,400,1.9563106796116505,71.1560504358757,22.842105263157894,32.68421052631579,176.35949737157586,1.8151559649266056,566.6135970032758,31.478533166848663,0.058786499123858624
279,d920c3c44f59ef037be3a09a41a5640014cfb1e2,James Thorniley,2023-09-18 18:53:31+00:00,"Allow nesting sync_to_async via asyncio.wait_for (#367)

Change the order of fallbacks used by SyncToAsync to find the appropriate executor for sync code, so it prefers to use AsyncToSync.loop_thread_executors rather than thread_sensitive_context. Add test case to demonstrate problem.",False,415,206,209,1.0,1.0,0.5555555555555556,3732,1989,2250,417,1.8942307692307692,71.41185666747938,22.842105263157894,32.63157894736842,176.862494169883,1.8547717319113861,583.2323848240281,32.401799156890455,0.05895416472329434
280,2ddc82c1bd658f247d19f62724982941d97800f3,Giovanni Barillari,2023-09-23 18:17:33+00:00,Add `pathsend` extension (#407),False,41,41,0,,,,3738,1994,2254,417,1.8899521531100478,71.40023341485801,22.842105263157894,32.63157894736842,176.862494169883,1.8547717319113861,583.2323848240281,32.401799156890455,0.05895416472329434
281,56cc620bc277add138e3c6e8f3920be04b3aff00,Eric Zhang,2023-10-06 18:52:53+00:00,"Handle `""client"": None` in WsgiToAsgi adapter (#411)",False,2,1,1,,,,3738,1994,2254,417,1.8899521531100478,71.39931198010827,22.894736842105264,32.63157894736842,176.96763407318946,1.844798268841948,580.4591001765868,32.24772778758816,0.05898921135772981
282,09ed8e952c728091cfac9b0ddc154dc2b4c734bc,Mariusz Felisiak,2023-10-12 19:11:06+00:00,"Dropped Python 3.7 support

Includes mypy error fix.",False,71,17,54,0.25,0.25,0.25,3717,1981,2242,413,1.8846153846153846,71.60912533158739,22.789473684210527,32.31578947368421,175.59957765174727,1.8304089301105038,573.3819738407255,31.85455410226254,0.05853319255058242
283,19e14e7ab91a5f03b7b32dccae69f74933399cb4,ttys0dev,2024-01-14 18:42:40+00:00,Added tests for asyncio.shield with sync and async Django-style middlware (#432),False,119,119,0,0.4358974358974359,1.0,1.0,3836,2062,2317,419,1.8857142857142857,71.43484997078339,22.894736842105264,32.526315789473685,177.23230748264848,1.830321238215975,579.9571019768873,32.21983899871597,0.0590774358275495
284,0503c2c4df06dbe56f04689fe537325f28dbbe8b,ttys0dev,2024-01-27 06:13:55+00:00,Fix task cancellation propagation to subtasks when using sync middleware (#435),False,218,201,17,0.39849624060150374,0.7969924812030075,0.7894736842105263,4020,2185,2436,435,1.9339622641509433,71.09956090764993,23.31578947368421,33.68421052631579,184.89671091432493,1.860196533437805,629.1980993436123,34.95544996353402,0.06163223697144163
285,8108512196b0831962eb923b7c3f5c5935b1fde1,ttys0dev,2024-02-02 01:26:35+00:00,"Move variable initialization in AsyncToSync from __init__ to __call__ (#440)

Co-authored-by: germaniuss <germanchik01atalyants@gmail.com>",False,93,73,20,1.0,1.0,1.0,4073,2215,2464,442,1.9299065420560748,71.00597854424556,23.894736842105264,34.68421052631579,192.56582326710785,1.8621931952599504,664.3565060931927,36.90869478295516,0.0641886077557026
286,4209b6ceac4e93f3fe414b2aa30ba064524e9f71,Carlton Gibson,2024-03-15 16:16:56+00:00,"Correct WSGI adapter handling of root path.

Fixes #442",False,34,30,4,0.0,0.8181818181818182,0.8181818181818182,4099,2228,2486,442,1.930232558139535,70.87418896218354,24.105263157894736,35.0,194.83871620047145,1.8621931952599504,665.4929525598747,36.97183069777082,0.0649462387334905
287,4c2838549a073ccdd7a6415d772798813e775cd0,Carlton Gibson,2024-03-20 13:00:11+00:00,Releasing 3.8.0,False,18,17,1,,,,4099,2228,2486,442,1.930232558139535,70.87418896218354,24.105263157894736,35.0,194.83871620047145,1.8621931952599504,665.4929525598747,36.97183069777082,0.0649462387334905
288,876943401ec2153071dea1a1c1148889cdb7cd60,James Hilliard,2024-03-22 14:25:21+00:00,Raise exception if exec_coro is done.,False,2,2,0,0.0,0.0,0.0,4101,2230,2488,442,1.9395348837209303,70.86186847707118,24.105263157894736,35.0,194.83871620047145,1.8621931952599504,665.4929525598747,36.97183069777082,0.0649462387334905
289,e38d3c327c01aa82c0bf2726220700c1097ea6cc,Carlton Gibson,2024-03-22 14:37:33+00:00,Releasing 3.8.1,False,8,7,1,,,,4101,2230,2488,442,1.9395348837209303,70.86186847707118,24.105263157894736,35.0,194.83871620047145,1.8621931952599504,665.4929525598747,36.97183069777082,0.0649462387334905
290,db3ff43e9fa1daf7c6b1cb67db8eec1885be911d,Joachim Jablon,2024-03-22 20:48:54+00:00,Reset theme to ReadTheDocs' default theme,False,8,7,1,,,,4101,2230,2488,442,1.9395348837209303,70.86186847707118,24.105263157894736,35.0,194.83871620047145,1.8621931952599504,665.4929525598747,36.97183069777082,0.0649462387334905
